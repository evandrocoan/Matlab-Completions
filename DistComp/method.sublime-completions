{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "CUDAKernel\tDistComp method", "contents": "CUDAKernel(${1:args})"} ,
		{"trigger": "Composite\tDistComp method", "contents": "Composite(${1:args})"} ,
		{"trigger": "GPUDevice\tDistComp method", "contents": "GPUDevice(${1:args})"} ,
		{"trigger": "addAttachedFiles\tDistComp method", "contents": "addAttachedFiles(${1:args})"} ,
		{"trigger": "batch\tDistComp method", "contents": "batch(${1:args})"} ,
		{"trigger": "cancel\tDistComp method", "contents": "cancel(${1:args})"} ,
		{"trigger": "changePassword\tDistComp method", "contents": "changePassword(${1:args})"} ,
		{"trigger": "classUnderlying\tDistComp method", "contents": "classUnderlying(${1:args})"} ,
		{"trigger": "codistributed\tDistComp method", "contents": "codistributed(${1:args})"} ,
		{"trigger": "codistributed.build\tDistComp method", "contents": "codistributed.build(${1:args})"} ,
		{"trigger": "codistributed.cell\tDistComp method", "contents": "codistributed.cell(${1:args})"} ,
		{"trigger": "codistributed.colon\tDistComp method", "contents": "codistributed.colon(${1:args})"} ,
		{"trigger": "codistributed.spalloc\tDistComp method", "contents": "codistributed.spalloc(${1:args})"} ,
		{"trigger": "codistributed.speye\tDistComp method", "contents": "codistributed.speye(${1:args})"} ,
		{"trigger": "codistributed.sprand\tDistComp method", "contents": "codistributed.sprand(${1:args})"} ,
		{"trigger": "codistributed.sprandn\tDistComp method", "contents": "codistributed.sprandn(${1:args})"} ,
		{"trigger": "codistributor\tDistComp method", "contents": "codistributor(${1:args})"} ,
		{"trigger": "codistributor1d\tDistComp method", "contents": "codistributor1d(${1:args})"} ,
		{"trigger": "codistributor2dbc\tDistComp method", "contents": "codistributor2dbc(${1:args})"} ,
		{"trigger": "codistributor2dbc.defaultLabGrid\tDistComp method", "contents": "codistributor2dbc.defaultLabGrid(${1:args})"} ,
		{"trigger": "createCommunicatingJob\tDistComp method", "contents": "createCommunicatingJob(${1:args})"} ,
		{"trigger": "createJob\tDistComp method", "contents": "createJob(${1:args})"} ,
		{"trigger": "createTask\tDistComp method", "contents": "createTask(${1:args})"} ,
		{"trigger": "delete\tDistComp method", "contents": "delete(${1:args})"} ,
		{"trigger": "demote\tDistComp method", "contents": "demote(${1:args})"} ,
		{"trigger": "distributed\tDistComp method", "contents": "distributed(${1:args})"} ,
		{"trigger": "distributed.cell\tDistComp method", "contents": "distributed.cell(${1:args})"} ,
		{"trigger": "distributed.spalloc\tDistComp method", "contents": "distributed.spalloc(${1:args})"} ,
		{"trigger": "distributed.speye\tDistComp method", "contents": "distributed.speye(${1:args})"} ,
		{"trigger": "distributed.sprand\tDistComp method", "contents": "distributed.sprand(${1:args})"} ,
		{"trigger": "distributed.sprandn\tDistComp method", "contents": "distributed.sprandn(${1:args})"} ,
		{"trigger": "dload\tDistComp method", "contents": "dload(${1:args})"} ,
		{"trigger": "dsave\tDistComp method", "contents": "dsave(${1:args})"} ,
		{"trigger": "existsOnGPU\tDistComp method", "contents": "existsOnGPU(${1:args})"} ,
		{"trigger": "fetchNext\tDistComp method", "contents": "fetchNext(${1:args})"} ,
		{"trigger": "fetchOutputs\tDistComp method", "contents": "fetchOutputs(${1:args})"} ,
		{"trigger": "findJob\tDistComp method", "contents": "findJob(${1:args})"} ,
		{"trigger": "findTask\tDistComp method", "contents": "findTask(${1:args})"} ,
		{"trigger": "gather\tDistComp method", "contents": "gather(${1:args})"} ,
		{"trigger": "gcat\tDistComp method", "contents": "gcat(${1:args})"} ,
		{"trigger": "gcp\tDistComp method", "contents": "gcp(${1:args})"} ,
		{"trigger": "getAttachedFilesFolder\tDistComp method", "contents": "getAttachedFilesFolder(${1:args})"} ,
		{"trigger": "getCodistributor\tDistComp method", "contents": "getCodistributor(${1:args})"} ,
		{"trigger": "getCurrentCluster\tDistComp method", "contents": "getCurrentCluster(${1:args})"} ,
		{"trigger": "getCurrentJob\tDistComp method", "contents": "getCurrentJob(${1:args})"} ,
		{"trigger": "getCurrentTask\tDistComp method", "contents": "getCurrentTask(${1:args})"} ,
		{"trigger": "getCurrentWorker\tDistComp method", "contents": "getCurrentWorker(${1:args})"} ,
		{"trigger": "getDebugLog\tDistComp method", "contents": "getDebugLog(${1:args})"} ,
		{"trigger": "getJobClusterData\tDistComp method", "contents": "getJobClusterData(${1:args})"} ,
		{"trigger": "getJobFolder\tDistComp method", "contents": "getJobFolder(${1:args})"} ,
		{"trigger": "getJobFolderOnCluster\tDistComp method", "contents": "getJobFolderOnCluster(${1:args})"} ,
		{"trigger": "getLocalPart\tDistComp method", "contents": "getLocalPart(${1:args})"} ,
		{"trigger": "getLogLocation\tDistComp method", "contents": "getLogLocation(${1:args})"} ,
		{"trigger": "globalIndices\tDistComp method", "contents": "globalIndices(${1:args})"} ,
		{"trigger": "gop\tDistComp method", "contents": "gop(${1:args})"} ,
		{"trigger": "gplus\tDistComp method", "contents": "gplus(${1:args})"} ,
		{"trigger": "gpuArray\tDistComp method", "contents": "gpuArray(${1:args})"} ,
		{"trigger": "gpuDevice\tDistComp method", "contents": "gpuDevice(${1:args})"} ,
		{"trigger": "gpuDeviceCount\tDistComp method", "contents": "gpuDeviceCount(${1:args})"} ,
		{"trigger": "gputimeit\tDistComp method", "contents": "gputimeit(${1:args})"} ,
		{"trigger": "isComplete\tDistComp method", "contents": "isComplete(${1:args})"} ,
		{"trigger": "isaUnderlying\tDistComp method", "contents": "isaUnderlying(${1:args})"} ,
		{"trigger": "iscodistributed\tDistComp method", "contents": "iscodistributed(${1:args})"} ,
		{"trigger": "isdistributed\tDistComp method", "contents": "isdistributed(${1:args})"} ,
		{"trigger": "isequal\tDistComp method", "contents": "isequal(${1:args})"} ,
		{"trigger": "isreplicated\tDistComp method", "contents": "isreplicated(${1:args})"} ,
		{"trigger": "jobStartup\tDistComp method", "contents": "jobStartup(${1:args})"} ,
		{"trigger": "labBarrier\tDistComp method", "contents": "labBarrier(${1:args})"} ,
		{"trigger": "labBroadcast\tDistComp method", "contents": "labBroadcast(${1:args})"} ,
		{"trigger": "labProbe\tDistComp method", "contents": "labProbe(${1:args})"} ,
		{"trigger": "labReceive\tDistComp method", "contents": "labReceive(${1:args})"} ,
		{"trigger": "labSend\tDistComp method", "contents": "labSend(${1:args})"} ,
		{"trigger": "labSendReceive\tDistComp method", "contents": "labSendReceive(${1:args})"} ,
		{"trigger": "labindex\tDistComp method", "contents": "labindex(${1:args})"} ,
		{"trigger": "listAutoAttachedFiles\tDistComp method", "contents": "listAutoAttachedFiles(${1:args})"} ,
		{"trigger": "logOut\tDistComp method", "contents": "logOut(${1:args})"} ,
		{"trigger": "mexcuda\tDistComp method", "contents": "mexcuda(${1:args})"} ,
		{"trigger": "mpiLibConf\tDistComp method", "contents": "mpiLibConf(${1:args})"} ,
		{"trigger": "mpiSettings\tDistComp method", "contents": "mpiSettings(${1:args})"} ,
		{"trigger": "mpiprofile\tDistComp method", "contents": "mpiprofile(${1:args})"} ,
		{"trigger": "numlabs\tDistComp method", "contents": "numlabs(${1:args})"} ,
		{"trigger": "pagefun\tDistComp method", "contents": "pagefun(${1:args})"} ,
		{"trigger": "parallel.Cluster\tDistComp method", "contents": "parallel.Cluster(${1:args})"} ,
		{"trigger": "parallel.Job\tDistComp method", "contents": "parallel.Job(${1:args})"} ,
		{"trigger": "parallel.Pool\tDistComp method", "contents": "parallel.Pool(${1:args})"} ,
		{"trigger": "parallel.Task\tDistComp method", "contents": "parallel.Task(${1:args})"} ,
		{"trigger": "parallel.Worker\tDistComp method", "contents": "parallel.Worker(${1:args})"} ,
		{"trigger": "parallel.cluster.Hadoop\tDistComp method", "contents": "parallel.cluster.Hadoop(${1:args})"} ,
		{"trigger": "parallel.defaultClusterProfile\tDistComp method", "contents": "parallel.defaultClusterProfile(${1:args})"} ,
		{"trigger": "parallel.exportProfile\tDistComp method", "contents": "parallel.exportProfile(${1:args})"} ,
		{"trigger": "parallel.gpu.CUDAKernel\tDistComp method", "contents": "parallel.gpu.CUDAKernel(${1:args})"} ,
		{"trigger": "parallel.importProfile\tDistComp method", "contents": "parallel.importProfile(${1:args})"} ,
		{"trigger": "parallel.pool.Constant\tDistComp method", "contents": "parallel.pool.Constant(${1:args})"} ,
		{"trigger": "parcluster\tDistComp method", "contents": "parcluster(${1:args})"} ,
		{"trigger": "parfeval\tDistComp method", "contents": "parfeval(${1:args})"} ,
		{"trigger": "parfevalOnAll\tDistComp method", "contents": "parfevalOnAll(${1:args})"} ,
		{"trigger": "parpool\tDistComp method", "contents": "parpool(${1:args})"} ,
		{"trigger": "pctRunDeployedCleanup\tDistComp method", "contents": "pctRunDeployedCleanup(${1:args})"} ,
		{"trigger": "pctRunOnAll\tDistComp method", "contents": "pctRunOnAll(${1:args})"} ,
		{"trigger": "pctconfig\tDistComp method", "contents": "pctconfig(${1:args})"} ,
		{"trigger": "pload\tDistComp method", "contents": "pload(${1:args})"} ,
		{"trigger": "pmode\tDistComp method", "contents": "pmode(${1:args})"} ,
		{"trigger": "poolStartup\tDistComp method", "contents": "poolStartup(${1:args})"} ,
		{"trigger": "promote\tDistComp method", "contents": "promote(${1:args})"} ,
		{"trigger": "psave\tDistComp method", "contents": "psave(${1:args})"} ,
		{"trigger": "recreate\tDistComp method", "contents": "recreate(${1:args})"} ,
		{"trigger": "redistribute\tDistComp method", "contents": "redistribute(${1:args})"} ,
		{"trigger": "resume\tDistComp method", "contents": "resume(${1:args})"} ,
		{"trigger": "saveAsProfile\tDistComp method", "contents": "saveAsProfile(${1:args})"} ,
		{"trigger": "saveProfile\tDistComp method", "contents": "saveProfile(${1:args})"} ,
		{"trigger": "setConstantMemory\tDistComp method", "contents": "setConstantMemory(${1:args})"} ,
		{"trigger": "setJobClusterData\tDistComp method", "contents": "setJobClusterData(${1:args})"} ,
		{"trigger": "spmd\tDistComp method", "contents": "spmd(${1:args})"} ,
		{"trigger": "submit\tDistComp method", "contents": "submit(${1:args})"} ,
		{"trigger": "taskFinish\tDistComp method", "contents": "taskFinish(${1:args})"} ,
		{"trigger": "taskStartup\tDistComp method", "contents": "taskStartup(${1:args})"} ,
		{"trigger": "updateAttachedFiles\tDistComp method", "contents": "updateAttachedFiles(${1:args})"} ,
		{"trigger": "wait\tDistComp method", "contents": "wait(${1:args})"} ,

	]
}