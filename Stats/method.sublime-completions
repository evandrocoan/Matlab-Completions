{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "BetaDistribution\tStats method", "contents": "BetaDistribution(${1:args})"} ,
		{"trigger": "BinomialDistribution\tStats method", "contents": "BinomialDistribution(${1:args})"} ,
		{"trigger": "BirnbaumSaundersDistribution\tStats method", "contents": "BirnbaumSaundersDistribution(${1:args})"} ,
		{"trigger": "BurrDistribution\tStats method", "contents": "BurrDistribution(${1:args})"} ,
		{"trigger": "CalinskiHarabaszEvaluation\tStats method", "contents": "CalinskiHarabaszEvaluation(${1:args})"} ,
		{"trigger": "ClassificationBaggedEnsemble\tStats method", "contents": "ClassificationBaggedEnsemble(${1:args})"} ,
		{"trigger": "ClassificationDiscriminant\tStats method", "contents": "ClassificationDiscriminant(${1:args})"} ,
		{"trigger": "ClassificationECOC\tStats method", "contents": "ClassificationECOC(${1:args})"} ,
		{"trigger": "ClassificationEnsemble\tStats method", "contents": "ClassificationEnsemble(${1:args})"} ,
		{"trigger": "ClassificationKNN\tStats method", "contents": "ClassificationKNN(${1:args})"} ,
		{"trigger": "ClassificationNaiveBayes\tStats method", "contents": "ClassificationNaiveBayes(${1:args})"} ,
		{"trigger": "ClassificationPartitionedECOC\tStats method", "contents": "ClassificationPartitionedECOC(${1:args})"} ,
		{"trigger": "ClassificationPartitionedEnsemble\tStats method", "contents": "ClassificationPartitionedEnsemble(${1:args})"} ,
		{"trigger": "ClassificationPartitionedModel\tStats method", "contents": "ClassificationPartitionedModel(${1:args})"} ,
		{"trigger": "ClassificationSVM\tStats method", "contents": "ClassificationSVM(${1:args})"} ,
		{"trigger": "ClassificationTree\tStats method", "contents": "ClassificationTree(${1:args})"} ,
		{"trigger": "CompactClassificationDiscriminant\tStats method", "contents": "CompactClassificationDiscriminant(${1:args})"} ,
		{"trigger": "CompactClassificationECOC\tStats method", "contents": "CompactClassificationECOC(${1:args})"} ,
		{"trigger": "CompactClassificationEnsemble\tStats method", "contents": "CompactClassificationEnsemble(${1:args})"} ,
		{"trigger": "CompactClassificationNaiveBayes\tStats method", "contents": "CompactClassificationNaiveBayes(${1:args})"} ,
		{"trigger": "CompactClassificationSVM\tStats method", "contents": "CompactClassificationSVM(${1:args})"} ,
		{"trigger": "CompactClassificationTree\tStats method", "contents": "CompactClassificationTree(${1:args})"} ,
		{"trigger": "CompactRegressionEnsemble\tStats method", "contents": "CompactRegressionEnsemble(${1:args})"} ,
		{"trigger": "CompactRegressionGP\tStats method", "contents": "CompactRegressionGP(${1:args})"} ,
		{"trigger": "CompactRegressionSVM\tStats method", "contents": "CompactRegressionSVM(${1:args})"} ,
		{"trigger": "CompactRegressionTree\tStats method", "contents": "CompactRegressionTree(${1:args})"} ,
		{"trigger": "CompactTreeBagger\tStats method", "contents": "CompactTreeBagger(${1:args})"} ,
		{"trigger": "DaviesBouldinEvaluation\tStats method", "contents": "DaviesBouldinEvaluation(${1:args})"} ,
		{"trigger": "ExhaustiveSearcher\tStats method", "contents": "ExhaustiveSearcher(${1:args})"} ,
		{"trigger": "ExponentialDistribution\tStats method", "contents": "ExponentialDistribution(${1:args})"} ,
		{"trigger": "ExtremeValueDistribution\tStats method", "contents": "ExtremeValueDistribution(${1:args})"} ,
		{"trigger": "GammaDistribution\tStats method", "contents": "GammaDistribution(${1:args})"} ,
		{"trigger": "GapEvaluation\tStats method", "contents": "GapEvaluation(${1:args})"} ,
		{"trigger": "GeneralizedExtremeValueDistribution\tStats method", "contents": "GeneralizedExtremeValueDistribution(${1:args})"} ,
		{"trigger": "GeneralizedLinearMixedModel\tStats method", "contents": "GeneralizedLinearMixedModel(${1:args})"} ,
		{"trigger": "GeneralizedLinearModel\tStats method", "contents": "GeneralizedLinearModel(${1:args})"} ,
		{"trigger": "GeneralizedLinearModel.fit\tStats method", "contents": "GeneralizedLinearModel.fit(${1:args})"} ,
		{"trigger": "GeneralizedLinearModel.stepwise\tStats method", "contents": "GeneralizedLinearModel.stepwise(${1:args})"} ,
		{"trigger": "GeneralizedParetoDistribution\tStats method", "contents": "GeneralizedParetoDistribution(${1:args})"} ,
		{"trigger": "InverseGaussianDistribution\tStats method", "contents": "InverseGaussianDistribution(${1:args})"} ,
		{"trigger": "KDTreeSearcher\tStats method", "contents": "KDTreeSearcher(${1:args})"} ,
		{"trigger": "KernelDistribution\tStats method", "contents": "KernelDistribution(${1:args})"} ,
		{"trigger": "LinearMixedModel\tStats method", "contents": "LinearMixedModel(${1:args})"} ,
		{"trigger": "LinearMixedModel.fit\tStats method", "contents": "LinearMixedModel.fit(${1:args})"} ,
		{"trigger": "LinearMixedModel.fitmatrix\tStats method", "contents": "LinearMixedModel.fitmatrix(${1:args})"} ,
		{"trigger": "LinearModel\tStats method", "contents": "LinearModel(${1:args})"} ,
		{"trigger": "LinearModel.fit\tStats method", "contents": "LinearModel.fit(${1:args})"} ,
		{"trigger": "LinearModel.stepwise\tStats method", "contents": "LinearModel.stepwise(${1:args})"} ,
		{"trigger": "LogisticDistribution\tStats method", "contents": "LogisticDistribution(${1:args})"} ,
		{"trigger": "LoglogisticDistribution\tStats method", "contents": "LoglogisticDistribution(${1:args})"} ,
		{"trigger": "LognormalDistribution\tStats method", "contents": "LognormalDistribution(${1:args})"} ,
		{"trigger": "MultinomialDistribution\tStats method", "contents": "MultinomialDistribution(${1:args})"} ,
		{"trigger": "NakagamiDistribution\tStats method", "contents": "NakagamiDistribution(${1:args})"} ,
		{"trigger": "NegativeBinomialDistribution\tStats method", "contents": "NegativeBinomialDistribution(${1:args})"} ,
		{"trigger": "NonLinearModel\tStats method", "contents": "NonLinearModel(${1:args})"} ,
		{"trigger": "NonLinearModel.fit\tStats method", "contents": "NonLinearModel.fit(${1:args})"} ,
		{"trigger": "NormalDistribution\tStats method", "contents": "NormalDistribution(${1:args})"} ,
		{"trigger": "PiecewiseLinearDistribution\tStats method", "contents": "PiecewiseLinearDistribution(${1:args})"} ,
		{"trigger": "PoissonDistribution\tStats method", "contents": "PoissonDistribution(${1:args})"} ,
		{"trigger": "ProbDistUnivKernel\tStats method", "contents": "ProbDistUnivKernel(${1:args})"} ,
		{"trigger": "ProbDistUnivParam\tStats method", "contents": "ProbDistUnivParam(${1:args})"} ,
		{"trigger": "RayleighDistribution\tStats method", "contents": "RayleighDistribution(${1:args})"} ,
		{"trigger": "RegressionBaggedEnsemble\tStats method", "contents": "RegressionBaggedEnsemble(${1:args})"} ,
		{"trigger": "RegressionEnsemble\tStats method", "contents": "RegressionEnsemble(${1:args})"} ,
		{"trigger": "RegressionGP\tStats method", "contents": "RegressionGP(${1:args})"} ,
		{"trigger": "RegressionPartitionedEnsemble\tStats method", "contents": "RegressionPartitionedEnsemble(${1:args})"} ,
		{"trigger": "RegressionPartitionedModel\tStats method", "contents": "RegressionPartitionedModel(${1:args})"} ,
		{"trigger": "RegressionSVM\tStats method", "contents": "RegressionSVM(${1:args})"} ,
		{"trigger": "RegressionTree\tStats method", "contents": "RegressionTree(${1:args})"} ,
		{"trigger": "RepeatedMeasuresModel\tStats method", "contents": "RepeatedMeasuresModel(${1:args})"} ,
		{"trigger": "RicianDistribution\tStats method", "contents": "RicianDistribution(${1:args})"} ,
		{"trigger": "SilhouetteEvaluation\tStats method", "contents": "SilhouetteEvaluation(${1:args})"} ,
		{"trigger": "TreeBagger\tStats method", "contents": "TreeBagger(${1:args})"} ,
		{"trigger": "TriangularDistribution\tStats method", "contents": "TriangularDistribution(${1:args})"} ,
		{"trigger": "UniformDistribution\tStats method", "contents": "UniformDistribution(${1:args})"} ,
		{"trigger": "WeibullDistribution\tStats method", "contents": "WeibullDistribution(${1:args})"} ,
		{"trigger": "addK\tStats method", "contents": "addK(${1:args})"} ,
		{"trigger": "addTerms\tStats method", "contents": "addTerms(${1:args})"} ,
		{"trigger": "addedvarplot\tStats method", "contents": "addedvarplot(${1:args})"} ,
		{"trigger": "addlevels\tStats method", "contents": "addlevels(${1:args})"} ,
		{"trigger": "adtest\tStats method", "contents": "adtest(${1:args})"} ,
		{"trigger": "andrewsplot\tStats method", "contents": "andrewsplot(${1:args})"} ,
		{"trigger": "anova\tStats method", "contents": "anova(${1:args})"} ,
		{"trigger": "anova1\tStats method", "contents": "anova1(${1:args})"} ,
		{"trigger": "anova2\tStats method", "contents": "anova2(${1:args})"} ,
		{"trigger": "anovan\tStats method", "contents": "anovan(${1:args})"} ,
		{"trigger": "ansaribradley\tStats method", "contents": "ansaribradley(${1:args})"} ,
		{"trigger": "aoctool\tStats method", "contents": "aoctool(${1:args})"} ,
		{"trigger": "barttest\tStats method", "contents": "barttest(${1:args})"} ,
		{"trigger": "bbdesign\tStats method", "contents": "bbdesign(${1:args})"} ,
		{"trigger": "betacdf\tStats method", "contents": "betacdf(${1:args})"} ,
		{"trigger": "betafit\tStats method", "contents": "betafit(${1:args})"} ,
		{"trigger": "betainv\tStats method", "contents": "betainv(${1:args})"} ,
		{"trigger": "betalike\tStats method", "contents": "betalike(${1:args})"} ,
		{"trigger": "betapdf\tStats method", "contents": "betapdf(${1:args})"} ,
		{"trigger": "betarnd\tStats method", "contents": "betarnd(${1:args})"} ,
		{"trigger": "betastat\tStats method", "contents": "betastat(${1:args})"} ,
		{"trigger": "binocdf\tStats method", "contents": "binocdf(${1:args})"} ,
		{"trigger": "binofit\tStats method", "contents": "binofit(${1:args})"} ,
		{"trigger": "binoinv\tStats method", "contents": "binoinv(${1:args})"} ,
		{"trigger": "binopdf\tStats method", "contents": "binopdf(${1:args})"} ,
		{"trigger": "binornd\tStats method", "contents": "binornd(${1:args})"} ,
		{"trigger": "binostat\tStats method", "contents": "binostat(${1:args})"} ,
		{"trigger": "biplot\tStats method", "contents": "biplot(${1:args})"} ,
		{"trigger": "bootci\tStats method", "contents": "bootci(${1:args})"} ,
		{"trigger": "bootstrp\tStats method", "contents": "bootstrp(${1:args})"} ,
		{"trigger": "boxplot\tStats method", "contents": "boxplot(${1:args})"} ,
		{"trigger": "candexch\tStats method", "contents": "candexch(${1:args})"} ,
		{"trigger": "candgen\tStats method", "contents": "candgen(${1:args})"} ,
		{"trigger": "canoncorr\tStats method", "contents": "canoncorr(${1:args})"} ,
		{"trigger": "capability\tStats method", "contents": "capability(${1:args})"} ,
		{"trigger": "capaplot\tStats method", "contents": "capaplot(${1:args})"} ,
		{"trigger": "caseread\tStats method", "contents": "caseread(${1:args})"} ,
		{"trigger": "casewrite\tStats method", "contents": "casewrite(${1:args})"} ,
		{"trigger": "ccdesign\tStats method", "contents": "ccdesign(${1:args})"} ,
		{"trigger": "cdf\tStats method", "contents": "cdf(${1:args})"} ,
		{"trigger": "cdfplot\tStats method", "contents": "cdfplot(${1:args})"} ,
		{"trigger": "cell2dataset\tStats method", "contents": "cell2dataset(${1:args})"} ,
		{"trigger": "chi2cdf\tStats method", "contents": "chi2cdf(${1:args})"} ,
		{"trigger": "chi2gof\tStats method", "contents": "chi2gof(${1:args})"} ,
		{"trigger": "chi2inv\tStats method", "contents": "chi2inv(${1:args})"} ,
		{"trigger": "chi2pdf\tStats method", "contents": "chi2pdf(${1:args})"} ,
		{"trigger": "chi2rnd\tStats method", "contents": "chi2rnd(${1:args})"} ,
		{"trigger": "chi2stat\tStats method", "contents": "chi2stat(${1:args})"} ,
		{"trigger": "cholcov\tStats method", "contents": "cholcov(${1:args})"} ,
		{"trigger": "classregtree\tStats method", "contents": "classregtree(${1:args})"} ,
		{"trigger": "cluster\tStats method", "contents": "cluster(${1:args})"} ,
		{"trigger": "clusterdata\tStats method", "contents": "clusterdata(${1:args})"} ,
		{"trigger": "cmdscale\tStats method", "contents": "cmdscale(${1:args})"} ,
		{"trigger": "coefCI\tStats method", "contents": "coefCI(${1:args})"} ,
		{"trigger": "coefTest\tStats method", "contents": "coefTest(${1:args})"} ,
		{"trigger": "coeftest\tStats method", "contents": "coeftest(${1:args})"} ,
		{"trigger": "combnk\tStats method", "contents": "combnk(${1:args})"} ,
		{"trigger": "compact\tStats method", "contents": "compact(${1:args})"} ,
		{"trigger": "confusionmat\tStats method", "contents": "confusionmat(${1:args})"} ,
		{"trigger": "controlchart\tStats method", "contents": "controlchart(${1:args})"} ,
		{"trigger": "controlrules\tStats method", "contents": "controlrules(${1:args})"} ,
		{"trigger": "cophenet\tStats method", "contents": "cophenet(${1:args})"} ,
		{"trigger": "copulacdf\tStats method", "contents": "copulacdf(${1:args})"} ,
		{"trigger": "copulafit\tStats method", "contents": "copulafit(${1:args})"} ,
		{"trigger": "copulaparam\tStats method", "contents": "copulaparam(${1:args})"} ,
		{"trigger": "copulapdf\tStats method", "contents": "copulapdf(${1:args})"} ,
		{"trigger": "copularnd\tStats method", "contents": "copularnd(${1:args})"} ,
		{"trigger": "copulastat\tStats method", "contents": "copulastat(${1:args})"} ,
		{"trigger": "cordexch\tStats method", "contents": "cordexch(${1:args})"} ,
		{"trigger": "corr\tStats method", "contents": "corr(${1:args})"} ,
		{"trigger": "corrcov\tStats method", "contents": "corrcov(${1:args})"} ,
		{"trigger": "covarianceParameters\tStats method", "contents": "covarianceParameters(${1:args})"} ,
		{"trigger": "coxphfit\tStats method", "contents": "coxphfit(${1:args})"} ,
		{"trigger": "createns\tStats method", "contents": "createns(${1:args})"} ,
		{"trigger": "crosstab\tStats method", "contents": "crosstab(${1:args})"} ,
		{"trigger": "crossval\tStats method", "contents": "crossval(${1:args})"} ,
		{"trigger": "cvpartition\tStats method", "contents": "cvpartition(${1:args})"} ,
		{"trigger": "cvshrink\tStats method", "contents": "cvshrink(${1:args})"} ,
		{"trigger": "datasample\tStats method", "contents": "datasample(${1:args})"} ,
		{"trigger": "dataset\tStats method", "contents": "dataset(${1:args})"} ,
		{"trigger": "dataset2cell\tStats method", "contents": "dataset2cell(${1:args})"} ,
		{"trigger": "dataset2struct\tStats method", "contents": "dataset2struct(${1:args})"} ,
		{"trigger": "dataset2table\tStats method", "contents": "dataset2table(${1:args})"} ,
		{"trigger": "datasetfun\tStats method", "contents": "datasetfun(${1:args})"} ,
		{"trigger": "daugment\tStats method", "contents": "daugment(${1:args})"} ,
		{"trigger": "dcovary\tStats method", "contents": "dcovary(${1:args})"} ,
		{"trigger": "dendrogram\tStats method", "contents": "dendrogram(${1:args})"} ,
		{"trigger": "designMatrix\tStats method", "contents": "designMatrix(${1:args})"} ,
		{"trigger": "designecoc\tStats method", "contents": "designecoc(${1:args})"} ,
		{"trigger": "devianceTest\tStats method", "contents": "devianceTest(${1:args})"} ,
		{"trigger": "dfittool\tStats method", "contents": "dfittool(${1:args})"} ,
		{"trigger": "discardSupportVectors\tStats method", "contents": "discardSupportVectors(${1:args})"} ,
		{"trigger": "disttool\tStats method", "contents": "disttool(${1:args})"} ,
		{"trigger": "droplevels\tStats method", "contents": "droplevels(${1:args})"} ,
		{"trigger": "dummyvar\tStats method", "contents": "dummyvar(${1:args})"} ,
		{"trigger": "dwtest\tStats method", "contents": "dwtest(${1:args})"} ,
		{"trigger": "ecdf\tStats method", "contents": "ecdf(${1:args})"} ,
		{"trigger": "ecdfhist\tStats method", "contents": "ecdfhist(${1:args})"} ,
		{"trigger": "epsilon\tStats method", "contents": "epsilon(${1:args})"} ,
		{"trigger": "evalclusters\tStats method", "contents": "evalclusters(${1:args})"} ,
		{"trigger": "evcdf\tStats method", "contents": "evcdf(${1:args})"} ,
		{"trigger": "evfit\tStats method", "contents": "evfit(${1:args})"} ,
		{"trigger": "evinv\tStats method", "contents": "evinv(${1:args})"} ,
		{"trigger": "evlike\tStats method", "contents": "evlike(${1:args})"} ,
		{"trigger": "evpdf\tStats method", "contents": "evpdf(${1:args})"} ,
		{"trigger": "evrnd\tStats method", "contents": "evrnd(${1:args})"} ,
		{"trigger": "evstat\tStats method", "contents": "evstat(${1:args})"} ,
		{"trigger": "expcdf\tStats method", "contents": "expcdf(${1:args})"} ,
		{"trigger": "expfit\tStats method", "contents": "expfit(${1:args})"} ,
		{"trigger": "expinv\tStats method", "contents": "expinv(${1:args})"} ,
		{"trigger": "explike\tStats method", "contents": "explike(${1:args})"} ,
		{"trigger": "exppdf\tStats method", "contents": "exppdf(${1:args})"} ,
		{"trigger": "exprnd\tStats method", "contents": "exprnd(${1:args})"} ,
		{"trigger": "expstat\tStats method", "contents": "expstat(${1:args})"} ,
		{"trigger": "factoran\tStats method", "contents": "factoran(${1:args})"} ,
		{"trigger": "fcdf\tStats method", "contents": "fcdf(${1:args})"} ,
		{"trigger": "ff2n\tStats method", "contents": "ff2n(${1:args})"} ,
		{"trigger": "finv\tStats method", "contents": "finv(${1:args})"} ,
		{"trigger": "fishertest\tStats method", "contents": "fishertest(${1:args})"} ,
		{"trigger": "fitSVMPosterior\tStats method", "contents": "fitSVMPosterior(${1:args})"} ,
		{"trigger": "fitcdiscr\tStats method", "contents": "fitcdiscr(${1:args})"} ,
		{"trigger": "fitcecoc\tStats method", "contents": "fitcecoc(${1:args})"} ,
		{"trigger": "fitcnb\tStats method", "contents": "fitcnb(${1:args})"} ,
		{"trigger": "fitcsvm\tStats method", "contents": "fitcsvm(${1:args})"} ,
		{"trigger": "fitctree\tStats method", "contents": "fitctree(${1:args})"} ,
		{"trigger": "fitdist\tStats method", "contents": "fitdist(${1:args})"} ,
		{"trigger": "fitensemble\tStats method", "contents": "fitensemble(${1:args})"} ,
		{"trigger": "fitglm\tStats method", "contents": "fitglm(${1:args})"} ,
		{"trigger": "fitglme\tStats method", "contents": "fitglme(${1:args})"} ,
		{"trigger": "fitgmdist\tStats method", "contents": "fitgmdist(${1:args})"} ,
		{"trigger": "fitlm\tStats method", "contents": "fitlm(${1:args})"} ,
		{"trigger": "fitlme\tStats method", "contents": "fitlme(${1:args})"} ,
		{"trigger": "fitlmematrix\tStats method", "contents": "fitlmematrix(${1:args})"} ,
		{"trigger": "fitnlm\tStats method", "contents": "fitnlm(${1:args})"} ,
		{"trigger": "fitrgp\tStats method", "contents": "fitrgp(${1:args})"} ,
		{"trigger": "fitrm\tStats method", "contents": "fitrm(${1:args})"} ,
		{"trigger": "fitrsvm\tStats method", "contents": "fitrsvm(${1:args})"} ,
		{"trigger": "fitrtree\tStats method", "contents": "fitrtree(${1:args})"} ,
		{"trigger": "fitted\tStats method", "contents": "fitted(${1:args})"} ,
		{"trigger": "fixedEffects\tStats method", "contents": "fixedEffects(${1:args})"} ,
		{"trigger": "fpdf\tStats method", "contents": "fpdf(${1:args})"} ,
		{"trigger": "fracfact\tStats method", "contents": "fracfact(${1:args})"} ,
		{"trigger": "fracfactgen\tStats method", "contents": "fracfactgen(${1:args})"} ,
		{"trigger": "friedman\tStats method", "contents": "friedman(${1:args})"} ,
		{"trigger": "frnd\tStats method", "contents": "frnd(${1:args})"} ,
		{"trigger": "fstat\tStats method", "contents": "fstat(${1:args})"} ,
		{"trigger": "fsurfht\tStats method", "contents": "fsurfht(${1:args})"} ,
		{"trigger": "fullfact\tStats method", "contents": "fullfact(${1:args})"} ,
		{"trigger": "gagerr\tStats method", "contents": "gagerr(${1:args})"} ,
		{"trigger": "gamcdf\tStats method", "contents": "gamcdf(${1:args})"} ,
		{"trigger": "gamfit\tStats method", "contents": "gamfit(${1:args})"} ,
		{"trigger": "gaminv\tStats method", "contents": "gaminv(${1:args})"} ,
		{"trigger": "gamlike\tStats method", "contents": "gamlike(${1:args})"} ,
		{"trigger": "gampdf\tStats method", "contents": "gampdf(${1:args})"} ,
		{"trigger": "gamrnd\tStats method", "contents": "gamrnd(${1:args})"} ,
		{"trigger": "gamstat\tStats method", "contents": "gamstat(${1:args})"} ,
		{"trigger": "geocdf\tStats method", "contents": "geocdf(${1:args})"} ,
		{"trigger": "geoinv\tStats method", "contents": "geoinv(${1:args})"} ,
		{"trigger": "geomean\tStats method", "contents": "geomean(${1:args})"} ,
		{"trigger": "geopdf\tStats method", "contents": "geopdf(${1:args})"} ,
		{"trigger": "geornd\tStats method", "contents": "geornd(${1:args})"} ,
		{"trigger": "geostat\tStats method", "contents": "geostat(${1:args})"} ,
		{"trigger": "getlabels\tStats method", "contents": "getlabels(${1:args})"} ,
		{"trigger": "getlevels\tStats method", "contents": "getlevels(${1:args})"} ,
		{"trigger": "gevcdf\tStats method", "contents": "gevcdf(${1:args})"} ,
		{"trigger": "gevfit\tStats method", "contents": "gevfit(${1:args})"} ,
		{"trigger": "gevinv\tStats method", "contents": "gevinv(${1:args})"} ,
		{"trigger": "gevlike\tStats method", "contents": "gevlike(${1:args})"} ,
		{"trigger": "gevpdf\tStats method", "contents": "gevpdf(${1:args})"} ,
		{"trigger": "gevrnd\tStats method", "contents": "gevrnd(${1:args})"} ,
		{"trigger": "gevstat\tStats method", "contents": "gevstat(${1:args})"} ,
		{"trigger": "gline\tStats method", "contents": "gline(${1:args})"} ,
		{"trigger": "glmfit\tStats method", "contents": "glmfit(${1:args})"} ,
		{"trigger": "glmval\tStats method", "contents": "glmval(${1:args})"} ,
		{"trigger": "glyphplot\tStats method", "contents": "glyphplot(${1:args})"} ,
		{"trigger": "gmdistribution\tStats method", "contents": "gmdistribution(${1:args})"} ,
		{"trigger": "gmdistribution.fit\tStats method", "contents": "gmdistribution.fit(${1:args})"} ,
		{"trigger": "gname\tStats method", "contents": "gname(${1:args})"} ,
		{"trigger": "gpcdf\tStats method", "contents": "gpcdf(${1:args})"} ,
		{"trigger": "gpfit\tStats method", "contents": "gpfit(${1:args})"} ,
		{"trigger": "gpinv\tStats method", "contents": "gpinv(${1:args})"} ,
		{"trigger": "gplike\tStats method", "contents": "gplike(${1:args})"} ,
		{"trigger": "gplotmatrix\tStats method", "contents": "gplotmatrix(${1:args})"} ,
		{"trigger": "gppdf\tStats method", "contents": "gppdf(${1:args})"} ,
		{"trigger": "gprnd\tStats method", "contents": "gprnd(${1:args})"} ,
		{"trigger": "gpstat\tStats method", "contents": "gpstat(${1:args})"} ,
		{"trigger": "grp2idx\tStats method", "contents": "grp2idx(${1:args})"} ,
		{"trigger": "grpstats\tStats method", "contents": "grpstats(${1:args})"} ,
		{"trigger": "gscatter\tStats method", "contents": "gscatter(${1:args})"} ,
		{"trigger": "haltonset\tStats method", "contents": "haltonset(${1:args})"} ,
		{"trigger": "harmmean\tStats method", "contents": "harmmean(${1:args})"} ,
		{"trigger": "hist3\tStats method", "contents": "hist3(${1:args})"} ,
		{"trigger": "histfit\tStats method", "contents": "histfit(${1:args})"} ,
		{"trigger": "hmmdecode\tStats method", "contents": "hmmdecode(${1:args})"} ,
		{"trigger": "hmmestimate\tStats method", "contents": "hmmestimate(${1:args})"} ,
		{"trigger": "hmmgenerate\tStats method", "contents": "hmmgenerate(${1:args})"} ,
		{"trigger": "hmmtrain\tStats method", "contents": "hmmtrain(${1:args})"} ,
		{"trigger": "hmmviterbi\tStats method", "contents": "hmmviterbi(${1:args})"} ,
		{"trigger": "hougen\tStats method", "contents": "hougen(${1:args})"} ,
		{"trigger": "hygecdf\tStats method", "contents": "hygecdf(${1:args})"} ,
		{"trigger": "hygeinv\tStats method", "contents": "hygeinv(${1:args})"} ,
		{"trigger": "hygepdf\tStats method", "contents": "hygepdf(${1:args})"} ,
		{"trigger": "hygernd\tStats method", "contents": "hygernd(${1:args})"} ,
		{"trigger": "hygestat\tStats method", "contents": "hygestat(${1:args})"} ,
		{"trigger": "icdf\tStats method", "contents": "icdf(${1:args})"} ,
		{"trigger": "inconsistent\tStats method", "contents": "inconsistent(${1:args})"} ,
		{"trigger": "increaseB\tStats method", "contents": "increaseB(${1:args})"} ,
		{"trigger": "interactionplot\tStats method", "contents": "interactionplot(${1:args})"} ,
		{"trigger": "invpred\tStats method", "contents": "invpred(${1:args})"} ,
		{"trigger": "islevel\tStats method", "contents": "islevel(${1:args})"} ,
		{"trigger": "iwishrnd\tStats method", "contents": "iwishrnd(${1:args})"} ,
		{"trigger": "jackknife\tStats method", "contents": "jackknife(${1:args})"} ,
		{"trigger": "jbtest\tStats method", "contents": "jbtest(${1:args})"} ,
		{"trigger": "johnsrnd\tStats method", "contents": "johnsrnd(${1:args})"} ,
		{"trigger": "kmeans\tStats method", "contents": "kmeans(${1:args})"} ,
		{"trigger": "kmedoids\tStats method", "contents": "kmedoids(${1:args})"} ,
		{"trigger": "knnsearch\tStats method", "contents": "knnsearch(${1:args})"} ,
		{"trigger": "kruskalwallis\tStats method", "contents": "kruskalwallis(${1:args})"} ,
		{"trigger": "ksdensity\tStats method", "contents": "ksdensity(${1:args})"} ,
		{"trigger": "kstest\tStats method", "contents": "kstest(${1:args})"} ,
		{"trigger": "kstest2\tStats method", "contents": "kstest2(${1:args})"} ,
		{"trigger": "kurtosis\tStats method", "contents": "kurtosis(${1:args})"} ,
		{"trigger": "lasso\tStats method", "contents": "lasso(${1:args})"} ,
		{"trigger": "lassoPlot\tStats method", "contents": "lassoPlot(${1:args})"} ,
		{"trigger": "lassoglm\tStats method", "contents": "lassoglm(${1:args})"} ,
		{"trigger": "levelcounts\tStats method", "contents": "levelcounts(${1:args})"} ,
		{"trigger": "leverage\tStats method", "contents": "leverage(${1:args})"} ,
		{"trigger": "lhsdesign\tStats method", "contents": "lhsdesign(${1:args})"} ,
		{"trigger": "lhsnorm\tStats method", "contents": "lhsnorm(${1:args})"} ,
		{"trigger": "lillietest\tStats method", "contents": "lillietest(${1:args})"} ,
		{"trigger": "linhyptest\tStats method", "contents": "linhyptest(${1:args})"} ,
		{"trigger": "linkage\tStats method", "contents": "linkage(${1:args})"} ,
		{"trigger": "logP\tStats method", "contents": "logP(${1:args})"} ,
		{"trigger": "logncdf\tStats method", "contents": "logncdf(${1:args})"} ,
		{"trigger": "lognfit\tStats method", "contents": "lognfit(${1:args})"} ,
		{"trigger": "logninv\tStats method", "contents": "logninv(${1:args})"} ,
		{"trigger": "lognlike\tStats method", "contents": "lognlike(${1:args})"} ,
		{"trigger": "lognpdf\tStats method", "contents": "lognpdf(${1:args})"} ,
		{"trigger": "lognrnd\tStats method", "contents": "lognrnd(${1:args})"} ,
		{"trigger": "lognstat\tStats method", "contents": "lognstat(${1:args})"} ,
		{"trigger": "loss\tStats method", "contents": "loss(${1:args})"} ,
		{"trigger": "lsline\tStats method", "contents": "lsline(${1:args})"} ,
		{"trigger": "mad\tStats method", "contents": "mad(${1:args})"} ,
		{"trigger": "mahal\tStats method", "contents": "mahal(${1:args})"} ,
		{"trigger": "maineffectsplot\tStats method", "contents": "maineffectsplot(${1:args})"} ,
		{"trigger": "makecdiscr\tStats method", "contents": "makecdiscr(${1:args})"} ,
		{"trigger": "manova\tStats method", "contents": "manova(${1:args})"} ,
		{"trigger": "manova1\tStats method", "contents": "manova1(${1:args})"} ,
		{"trigger": "manovacluster\tStats method", "contents": "manovacluster(${1:args})"} ,
		{"trigger": "margmean\tStats method", "contents": "margmean(${1:args})"} ,
		{"trigger": "mat2dataset\tStats method", "contents": "mat2dataset(${1:args})"} ,
		{"trigger": "mauchly\tStats method", "contents": "mauchly(${1:args})"} ,
		{"trigger": "mdscale\tStats method", "contents": "mdscale(${1:args})"} ,
		{"trigger": "mergelevels\tStats method", "contents": "mergelevels(${1:args})"} ,
		{"trigger": "mhsample\tStats method", "contents": "mhsample(${1:args})"} ,
		{"trigger": "mlecov\tStats method", "contents": "mlecov(${1:args})"} ,
		{"trigger": "mnpdf\tStats method", "contents": "mnpdf(${1:args})"} ,
		{"trigger": "mnrfit\tStats method", "contents": "mnrfit(${1:args})"} ,
		{"trigger": "mnrnd\tStats method", "contents": "mnrnd(${1:args})"} ,
		{"trigger": "mnrval\tStats method", "contents": "mnrval(${1:args})"} ,
		{"trigger": "moment\tStats method", "contents": "moment(${1:args})"} ,
		{"trigger": "multcompare\tStats method", "contents": "multcompare(${1:args})"} ,
		{"trigger": "multivarichart\tStats method", "contents": "multivarichart(${1:args})"} ,
		{"trigger": "mvncdf\tStats method", "contents": "mvncdf(${1:args})"} ,
		{"trigger": "mvnpdf\tStats method", "contents": "mvnpdf(${1:args})"} ,
		{"trigger": "mvnrnd\tStats method", "contents": "mvnrnd(${1:args})"} ,
		{"trigger": "mvregress\tStats method", "contents": "mvregress(${1:args})"} ,
		{"trigger": "mvregresslike\tStats method", "contents": "mvregresslike(${1:args})"} ,
		{"trigger": "mvtcdf\tStats method", "contents": "mvtcdf(${1:args})"} ,
		{"trigger": "mvtpdf\tStats method", "contents": "mvtpdf(${1:args})"} ,
		{"trigger": "mvtrnd\tStats method", "contents": "mvtrnd(${1:args})"} ,
		{"trigger": "nbincdf\tStats method", "contents": "nbincdf(${1:args})"} ,
		{"trigger": "nbinfit\tStats method", "contents": "nbinfit(${1:args})"} ,
		{"trigger": "nbininv\tStats method", "contents": "nbininv(${1:args})"} ,
		{"trigger": "nbinrnd\tStats method", "contents": "nbinrnd(${1:args})"} ,
		{"trigger": "nbinstat\tStats method", "contents": "nbinstat(${1:args})"} ,
		{"trigger": "ncfcdf\tStats method", "contents": "ncfcdf(${1:args})"} ,
		{"trigger": "ncfinv\tStats method", "contents": "ncfinv(${1:args})"} ,
		{"trigger": "ncfpdf\tStats method", "contents": "ncfpdf(${1:args})"} ,
		{"trigger": "ncfrnd\tStats method", "contents": "ncfrnd(${1:args})"} ,
		{"trigger": "ncfstat\tStats method", "contents": "ncfstat(${1:args})"} ,
		{"trigger": "nctcdf\tStats method", "contents": "nctcdf(${1:args})"} ,
		{"trigger": "nctinv\tStats method", "contents": "nctinv(${1:args})"} ,
		{"trigger": "nctpdf\tStats method", "contents": "nctpdf(${1:args})"} ,
		{"trigger": "nctrnd\tStats method", "contents": "nctrnd(${1:args})"} ,
		{"trigger": "nctstat\tStats method", "contents": "nctstat(${1:args})"} ,
		{"trigger": "ncx2cdf\tStats method", "contents": "ncx2cdf(${1:args})"} ,
		{"trigger": "ncx2inv\tStats method", "contents": "ncx2inv(${1:args})"} ,
		{"trigger": "ncx2pdf\tStats method", "contents": "ncx2pdf(${1:args})"} ,
		{"trigger": "ncx2rnd\tStats method", "contents": "ncx2rnd(${1:args})"} ,
		{"trigger": "ncx2stat\tStats method", "contents": "ncx2stat(${1:args})"} ,
		{"trigger": "negloglik\tStats method", "contents": "negloglik(${1:args})"} ,
		{"trigger": "nlinfit\tStats method", "contents": "nlinfit(${1:args})"} ,
		{"trigger": "nlintool\tStats method", "contents": "nlintool(${1:args})"} ,
		{"trigger": "nlmefit\tStats method", "contents": "nlmefit(${1:args})"} ,
		{"trigger": "nlmefitsa\tStats method", "contents": "nlmefitsa(${1:args})"} ,
		{"trigger": "nlparci\tStats method", "contents": "nlparci(${1:args})"} ,
		{"trigger": "nlpredci\tStats method", "contents": "nlpredci(${1:args})"} ,
		{"trigger": "nnmf\tStats method", "contents": "nnmf(${1:args})"} ,
		{"trigger": "nominal\tStats method", "contents": "nominal(${1:args})"} ,
		{"trigger": "normcdf\tStats method", "contents": "normcdf(${1:args})"} ,
		{"trigger": "normfit\tStats method", "contents": "normfit(${1:args})"} ,
		{"trigger": "norminv\tStats method", "contents": "norminv(${1:args})"} ,
		{"trigger": "normlike\tStats method", "contents": "normlike(${1:args})"} ,
		{"trigger": "normpdf\tStats method", "contents": "normpdf(${1:args})"} ,
		{"trigger": "normplot\tStats method", "contents": "normplot(${1:args})"} ,
		{"trigger": "normrnd\tStats method", "contents": "normrnd(${1:args})"} ,
		{"trigger": "normspec\tStats method", "contents": "normspec(${1:args})"} ,
		{"trigger": "normstat\tStats method", "contents": "normstat(${1:args})"} ,
		{"trigger": "oobPredict\tStats method", "contents": "oobPredict(${1:args})"} ,
		{"trigger": "optimalleaforder\tStats method", "contents": "optimalleaforder(${1:args})"} ,
		{"trigger": "ordinal\tStats method", "contents": "ordinal(${1:args})"} ,
		{"trigger": "parallelcoords\tStats method", "contents": "parallelcoords(${1:args})"} ,
		{"trigger": "paramci\tStats method", "contents": "paramci(${1:args})"} ,
		{"trigger": "paretotails\tStats method", "contents": "paretotails(${1:args})"} ,
		{"trigger": "partialcorr\tStats method", "contents": "partialcorr(${1:args})"} ,
		{"trigger": "partialcorri\tStats method", "contents": "partialcorri(${1:args})"} ,
		{"trigger": "pca\tStats method", "contents": "pca(${1:args})"} ,
		{"trigger": "pcacov\tStats method", "contents": "pcacov(${1:args})"} ,
		{"trigger": "pcares\tStats method", "contents": "pcares(${1:args})"} ,
		{"trigger": "pdf\tStats method", "contents": "pdf(${1:args})"} ,
		{"trigger": "pdist\tStats method", "contents": "pdist(${1:args})"} ,
		{"trigger": "pdist2\tStats method", "contents": "pdist2(${1:args})"} ,
		{"trigger": "pearsrnd\tStats method", "contents": "pearsrnd(${1:args})"} ,
		{"trigger": "perfcurve\tStats method", "contents": "perfcurve(${1:args})"} ,
		{"trigger": "plotAdded\tStats method", "contents": "plotAdded(${1:args})"} ,
		{"trigger": "plotAdjustedResponse\tStats method", "contents": "plotAdjustedResponse(${1:args})"} ,
		{"trigger": "plotDiagnostics\tStats method", "contents": "plotDiagnostics(${1:args})"} ,
		{"trigger": "plotEffects\tStats method", "contents": "plotEffects(${1:args})"} ,
		{"trigger": "plotInteraction\tStats method", "contents": "plotInteraction(${1:args})"} ,
		{"trigger": "plotResiduals\tStats method", "contents": "plotResiduals(${1:args})"} ,
		{"trigger": "plotSlice\tStats method", "contents": "plotSlice(${1:args})"} ,
		{"trigger": "plotprofile\tStats method", "contents": "plotprofile(${1:args})"} ,
		{"trigger": "plsregress\tStats method", "contents": "plsregress(${1:args})"} ,
		{"trigger": "poisscdf\tStats method", "contents": "poisscdf(${1:args})"} ,
		{"trigger": "poissfit\tStats method", "contents": "poissfit(${1:args})"} ,
		{"trigger": "poissinv\tStats method", "contents": "poissinv(${1:args})"} ,
		{"trigger": "poisspdf\tStats method", "contents": "poisspdf(${1:args})"} ,
		{"trigger": "poissrnd\tStats method", "contents": "poissrnd(${1:args})"} ,
		{"trigger": "poisstat\tStats method", "contents": "poisstat(${1:args})"} ,
		{"trigger": "polyconf\tStats method", "contents": "polyconf(${1:args})"} ,
		{"trigger": "polytool\tStats method", "contents": "polytool(${1:args})"} ,
		{"trigger": "postFitStatistics\tStats method", "contents": "postFitStatistics(${1:args})"} ,
		{"trigger": "posterior\tStats method", "contents": "posterior(${1:args})"} ,
		{"trigger": "ppca\tStats method", "contents": "ppca(${1:args})"} ,
		{"trigger": "prctile\tStats method", "contents": "prctile(${1:args})"} ,
		{"trigger": "predictorImportance\tStats method", "contents": "predictorImportance(${1:args})"} ,
		{"trigger": "princomp\tStats method", "contents": "princomp(${1:args})"} ,
		{"trigger": "probplot\tStats method", "contents": "probplot(${1:args})"} ,
		{"trigger": "procrustes\tStats method", "contents": "procrustes(${1:args})"} ,
		{"trigger": "proflik\tStats method", "contents": "proflik(${1:args})"} ,
		{"trigger": "qqplot\tStats method", "contents": "qqplot(${1:args})"} ,
		{"trigger": "qrandset\tStats method", "contents": "qrandset(${1:args})"} ,
		{"trigger": "qrandstream\tStats method", "contents": "qrandstream(${1:args})"} ,
		{"trigger": "quantile\tStats method", "contents": "quantile(${1:args})"} ,
		{"trigger": "randg\tStats method", "contents": "randg(${1:args})"} ,
		{"trigger": "random\tStats method", "contents": "random(${1:args})"} ,
		{"trigger": "randomEffects\tStats method", "contents": "randomEffects(${1:args})"} ,
		{"trigger": "randsample\tStats method", "contents": "randsample(${1:args})"} ,
		{"trigger": "randtool\tStats method", "contents": "randtool(${1:args})"} ,
		{"trigger": "rangesearch\tStats method", "contents": "rangesearch(${1:args})"} ,
		{"trigger": "ranksum\tStats method", "contents": "ranksum(${1:args})"} ,
		{"trigger": "ranova\tStats method", "contents": "ranova(${1:args})"} ,
		{"trigger": "raylcdf\tStats method", "contents": "raylcdf(${1:args})"} ,
		{"trigger": "raylfit\tStats method", "contents": "raylfit(${1:args})"} ,
		{"trigger": "raylinv\tStats method", "contents": "raylinv(${1:args})"} ,
		{"trigger": "raylpdf\tStats method", "contents": "raylpdf(${1:args})"} ,
		{"trigger": "raylrnd\tStats method", "contents": "raylrnd(${1:args})"} ,
		{"trigger": "raylstat\tStats method", "contents": "raylstat(${1:args})"} ,
		{"trigger": "rcoplot\tStats method", "contents": "rcoplot(${1:args})"} ,
		{"trigger": "refcurve\tStats method", "contents": "refcurve(${1:args})"} ,
		{"trigger": "refit\tStats method", "contents": "refit(${1:args})"} ,
		{"trigger": "refline\tStats method", "contents": "refline(${1:args})"} ,
		{"trigger": "regress\tStats method", "contents": "regress(${1:args})"} ,
		{"trigger": "regstats\tStats method", "contents": "regstats(${1:args})"} ,
		{"trigger": "relieff\tStats method", "contents": "relieff(${1:args})"} ,
		{"trigger": "removeTerms\tStats method", "contents": "removeTerms(${1:args})"} ,
		{"trigger": "residuals\tStats method", "contents": "residuals(${1:args})"} ,
		{"trigger": "response\tStats method", "contents": "response(${1:args})"} ,
		{"trigger": "resubLoss\tStats method", "contents": "resubLoss(${1:args})"} ,
		{"trigger": "resubPredict\tStats method", "contents": "resubPredict(${1:args})"} ,
		{"trigger": "ridge\tStats method", "contents": "ridge(${1:args})"} ,
		{"trigger": "robustdemo\tStats method", "contents": "robustdemo(${1:args})"} ,
		{"trigger": "robustfit\tStats method", "contents": "robustfit(${1:args})"} ,
		{"trigger": "rotatefactors\tStats method", "contents": "rotatefactors(${1:args})"} ,
		{"trigger": "rowexch\tStats method", "contents": "rowexch(${1:args})"} ,
		{"trigger": "rsmdemo\tStats method", "contents": "rsmdemo(${1:args})"} ,
		{"trigger": "rstool\tStats method", "contents": "rstool(${1:args})"} ,
		{"trigger": "runstest\tStats method", "contents": "runstest(${1:args})"} ,
		{"trigger": "sampsizepwr\tStats method", "contents": "sampsizepwr(${1:args})"} ,
		{"trigger": "scatterhist\tStats method", "contents": "scatterhist(${1:args})"} ,
		{"trigger": "sequentialfs\tStats method", "contents": "sequentialfs(${1:args})"} ,
		{"trigger": "setlabels\tStats method", "contents": "setlabels(${1:args})"} ,
		{"trigger": "signrank\tStats method", "contents": "signrank(${1:args})"} ,
		{"trigger": "signtest\tStats method", "contents": "signtest(${1:args})"} ,
		{"trigger": "silhouette\tStats method", "contents": "silhouette(${1:args})"} ,
		{"trigger": "skewness\tStats method", "contents": "skewness(${1:args})"} ,
		{"trigger": "slicesample\tStats method", "contents": "slicesample(${1:args})"} ,
		{"trigger": "sobolset\tStats method", "contents": "sobolset(${1:args})"} ,
		{"trigger": "squareform\tStats method", "contents": "squareform(${1:args})"} ,
		{"trigger": "statget\tStats method", "contents": "statget(${1:args})"} ,
		{"trigger": "statset\tStats method", "contents": "statset(${1:args})"} ,
		{"trigger": "stepwise\tStats method", "contents": "stepwise(${1:args})"} ,
		{"trigger": "stepwisefit\tStats method", "contents": "stepwisefit(${1:args})"} ,
		{"trigger": "stepwiseglm\tStats method", "contents": "stepwiseglm(${1:args})"} ,
		{"trigger": "stepwiselm\tStats method", "contents": "stepwiselm(${1:args})"} ,
		{"trigger": "struct2dataset\tStats method", "contents": "struct2dataset(${1:args})"} ,
		{"trigger": "surfht\tStats method", "contents": "surfht(${1:args})"} ,
		{"trigger": "svmclassify\tStats method", "contents": "svmclassify(${1:args})"} ,
		{"trigger": "svmtrain\tStats method", "contents": "svmtrain(${1:args})"} ,
		{"trigger": "tLocationScaleDistribution\tStats method", "contents": "tLocationScaleDistribution(${1:args})"} ,
		{"trigger": "table2dataset\tStats method", "contents": "table2dataset(${1:args})"} ,
		{"trigger": "tabulate\tStats method", "contents": "tabulate(${1:args})"} ,
		{"trigger": "tblread\tStats method", "contents": "tblread(${1:args})"} ,
		{"trigger": "tblwrite\tStats method", "contents": "tblwrite(${1:args})"} ,
		{"trigger": "tcdf\tStats method", "contents": "tcdf(${1:args})"} ,
		{"trigger": "tdfread\tStats method", "contents": "tdfread(${1:args})"} ,
		{"trigger": "templateDiscriminant\tStats method", "contents": "templateDiscriminant(${1:args})"} ,
		{"trigger": "templateECOC\tStats method", "contents": "templateECOC(${1:args})"} ,
		{"trigger": "templateEnsemble\tStats method", "contents": "templateEnsemble(${1:args})"} ,
		{"trigger": "templateKNN\tStats method", "contents": "templateKNN(${1:args})"} ,
		{"trigger": "templateNaiveBayes\tStats method", "contents": "templateNaiveBayes(${1:args})"} ,
		{"trigger": "templateSVM\tStats method", "contents": "templateSVM(${1:args})"} ,
		{"trigger": "templateTree\tStats method", "contents": "templateTree(${1:args})"} ,
		{"trigger": "testcholdout\tStats method", "contents": "testcholdout(${1:args})"} ,
		{"trigger": "testckfold\tStats method", "contents": "testckfold(${1:args})"} ,
		{"trigger": "tiedrank\tStats method", "contents": "tiedrank(${1:args})"} ,
		{"trigger": "tinv\tStats method", "contents": "tinv(${1:args})"} ,
		{"trigger": "tpdf\tStats method", "contents": "tpdf(${1:args})"} ,
		{"trigger": "trimmean\tStats method", "contents": "trimmean(${1:args})"} ,
		{"trigger": "trnd\tStats method", "contents": "trnd(${1:args})"} ,
		{"trigger": "truncate\tStats method", "contents": "truncate(${1:args})"} ,
		{"trigger": "tstat\tStats method", "contents": "tstat(${1:args})"} ,
		{"trigger": "ttest\tStats method", "contents": "ttest(${1:args})"} ,
		{"trigger": "ttest2\tStats method", "contents": "ttest2(${1:args})"} ,
		{"trigger": "unidcdf\tStats method", "contents": "unidcdf(${1:args})"} ,
		{"trigger": "unidinv\tStats method", "contents": "unidinv(${1:args})"} ,
		{"trigger": "unidpdf\tStats method", "contents": "unidpdf(${1:args})"} ,
		{"trigger": "unidrnd\tStats method", "contents": "unidrnd(${1:args})"} ,
		{"trigger": "unidstat\tStats method", "contents": "unidstat(${1:args})"} ,
		{"trigger": "unifcdf\tStats method", "contents": "unifcdf(${1:args})"} ,
		{"trigger": "unifinv\tStats method", "contents": "unifinv(${1:args})"} ,
		{"trigger": "unifit\tStats method", "contents": "unifit(${1:args})"} ,
		{"trigger": "unifpdf\tStats method", "contents": "unifpdf(${1:args})"} ,
		{"trigger": "unifrnd\tStats method", "contents": "unifrnd(${1:args})"} ,
		{"trigger": "unifstat\tStats method", "contents": "unifstat(${1:args})"} ,
		{"trigger": "vartest\tStats method", "contents": "vartest(${1:args})"} ,
		{"trigger": "vartest2\tStats method", "contents": "vartest2(${1:args})"} ,
		{"trigger": "vartestn\tStats method", "contents": "vartestn(${1:args})"} ,
		{"trigger": "wblcdf\tStats method", "contents": "wblcdf(${1:args})"} ,
		{"trigger": "wblfit\tStats method", "contents": "wblfit(${1:args})"} ,
		{"trigger": "wblinv\tStats method", "contents": "wblinv(${1:args})"} ,
		{"trigger": "wbllike\tStats method", "contents": "wbllike(${1:args})"} ,
		{"trigger": "wblpdf\tStats method", "contents": "wblpdf(${1:args})"} ,
		{"trigger": "wblplot\tStats method", "contents": "wblplot(${1:args})"} ,
		{"trigger": "wblrnd\tStats method", "contents": "wblrnd(${1:args})"} ,
		{"trigger": "wblstat\tStats method", "contents": "wblstat(${1:args})"} ,
		{"trigger": "wishrnd\tStats method", "contents": "wishrnd(${1:args})"} ,
		{"trigger": "x2fx\tStats method", "contents": "x2fx(${1:args})"} ,
		{"trigger": "xptread\tStats method", "contents": "xptread(${1:args})"} ,
		{"trigger": "zscore\tStats method", "contents": "zscore(${1:args})"} ,
		{"trigger": "ztest\tStats method", "contents": "ztest(${1:args})"} ,

	]
}