{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "addoutputspec\tSLControl method", "contents": "addoutputspec(${1:args})"} ,
		{"trigger": "findop\tSLControl method", "contents": "findop(${1:args})"} ,
		{"trigger": "findopOptions\tSLControl method", "contents": "findopOptions(${1:args})"} ,
		{"trigger": "frest.Chirp\tSLControl method", "contents": "frest.Chirp(${1:args})"} ,
		{"trigger": "frest.Random\tSLControl method", "contents": "frest.Random(${1:args})"} ,
		{"trigger": "frest.Sinestream\tSLControl method", "contents": "frest.Sinestream(${1:args})"} ,
		{"trigger": "frest.createFixedTsSinestream\tSLControl method", "contents": "frest.createFixedTsSinestream(${1:args})"} ,
		{"trigger": "frest.createStep\tSLControl method", "contents": "frest.createStep(${1:args})"} ,
		{"trigger": "frest.findDepend\tSLControl method", "contents": "frest.findDepend(${1:args})"} ,
		{"trigger": "frest.findSources\tSLControl method", "contents": "frest.findSources(${1:args})"} ,
		{"trigger": "frest.simCompare\tSLControl method", "contents": "frest.simCompare(${1:args})"} ,
		{"trigger": "frest.simView\tSLControl method", "contents": "frest.simView(${1:args})"} ,
		{"trigger": "frestimate\tSLControl method", "contents": "frestimate(${1:args})"} ,
		{"trigger": "frestimateOptions\tSLControl method", "contents": "frestimateOptions(${1:args})"} ,
		{"trigger": "generateTimeseries\tSLControl method", "contents": "generateTimeseries(${1:args})"} ,
		{"trigger": "getSimulationTime\tSLControl method", "contents": "getSimulationTime(${1:args})"} ,
		{"trigger": "getTunedValue\tSLControl method", "contents": "getTunedValue(${1:args})"} ,
		{"trigger": "getinputstruct\tSLControl method", "contents": "getinputstruct(${1:args})"} ,
		{"trigger": "getlinio\tSLControl method", "contents": "getlinio(${1:args})"} ,
		{"trigger": "getlinplant\tSLControl method", "contents": "getlinplant(${1:args})"} ,
		{"trigger": "getstatestruct\tSLControl method", "contents": "getstatestruct(${1:args})"} ,
		{"trigger": "getxu\tSLControl method", "contents": "getxu(${1:args})"} ,
		{"trigger": "initopspec\tSLControl method", "contents": "initopspec(${1:args})"} ,
		{"trigger": "linearize\tSLControl method", "contents": "linearize(${1:args})"} ,
		{"trigger": "linearizeOptions\tSLControl method", "contents": "linearizeOptions(${1:args})"} ,
		{"trigger": "linio\tSLControl method", "contents": "linio(${1:args})"} ,
		{"trigger": "linlft\tSLControl method", "contents": "linlft(${1:args})"} ,
		{"trigger": "linlftfold\tSLControl method", "contents": "linlftfold(${1:args})"} ,
		{"trigger": "linoptions\tSLControl method", "contents": "linoptions(${1:args})"} ,
		{"trigger": "operpoint\tSLControl method", "contents": "operpoint(${1:args})"} ,
		{"trigger": "operspec\tSLControl method", "contents": "operspec(${1:args})"} ,
		{"trigger": "setTunedValue\tSLControl method", "contents": "setTunedValue(${1:args})"} ,
		{"trigger": "setlinio\tSLControl method", "contents": "setlinio(${1:args})"} ,
		{"trigger": "setxu\tSLControl method", "contents": "setxu(${1:args})"} ,
		{"trigger": "slLinearizer\tSLControl method", "contents": "slLinearizer(${1:args})"} ,
		{"trigger": "slTunable\tSLControl method", "contents": "slTunable(${1:args})"} ,

	]
}