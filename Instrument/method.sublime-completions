{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "binblockread\tInstrument method", "contents": "binblockread(${1:args})"} ,
		{"trigger": "binblockwrite\tInstrument method", "contents": "binblockwrite(${1:args})"} ,
		{"trigger": "bluetooth\tInstrument method", "contents": "bluetooth(${1:args})"} ,
		{"trigger": "clrdevice\tInstrument method", "contents": "clrdevice(${1:args})"} ,
		{"trigger": "devicereset\tInstrument method", "contents": "devicereset(${1:args})"} ,
		{"trigger": "disconnect\tInstrument method", "contents": "disconnect(${1:args})"} ,
		{"trigger": "echotcpip\tInstrument method", "contents": "echotcpip(${1:args})"} ,
		{"trigger": "echoudp\tInstrument method", "contents": "echoudp(${1:args})"} ,
		{"trigger": "fgen\tInstrument method", "contents": "fgen(${1:args})"} ,
		{"trigger": "flushinput\tInstrument method", "contents": "flushinput(${1:args})"} ,
		{"trigger": "flushoutput\tInstrument method", "contents": "flushoutput(${1:args})"} ,
		{"trigger": "getWaveform\tInstrument method", "contents": "getWaveform(${1:args})"} ,
		{"trigger": "geterror\tInstrument method", "contents": "geterror(${1:args})"} ,
		{"trigger": "gpib\tInstrument method", "contents": "gpib(${1:args})"} ,
		{"trigger": "i2c\tInstrument method", "contents": "i2c(${1:args})"} ,
		{"trigger": "icdevice\tInstrument method", "contents": "icdevice(${1:args})"} ,
		{"trigger": "instrhelp\tInstrument method", "contents": "instrhelp(${1:args})"} ,
		{"trigger": "instrhwinfo\tInstrument method", "contents": "instrhwinfo(${1:args})"} ,
		{"trigger": "instrid\tInstrument method", "contents": "instrid(${1:args})"} ,
		{"trigger": "instrnotify\tInstrument method", "contents": "instrnotify(${1:args})"} ,
		{"trigger": "instrreset\tInstrument method", "contents": "instrreset(${1:args})"} ,
		{"trigger": "iviconfigurationstore\tInstrument method", "contents": "iviconfigurationstore(${1:args})"} ,
		{"trigger": "makemid\tInstrument method", "contents": "makemid(${1:args})"} ,
		{"trigger": "memmap\tInstrument method", "contents": "memmap(${1:args})"} ,
		{"trigger": "mempeek\tInstrument method", "contents": "mempeek(${1:args})"} ,
		{"trigger": "mempoke\tInstrument method", "contents": "mempoke(${1:args})"} ,
		{"trigger": "memread\tInstrument method", "contents": "memread(${1:args})"} ,
		{"trigger": "memunmap\tInstrument method", "contents": "memunmap(${1:args})"} ,
		{"trigger": "memwrite\tInstrument method", "contents": "memwrite(${1:args})"} ,
		{"trigger": "midedit\tInstrument method", "contents": "midedit(${1:args})"} ,
		{"trigger": "midtest\tInstrument method", "contents": "midtest(${1:args})"} ,
		{"trigger": "oscilloscope\tInstrument method", "contents": "oscilloscope(${1:args})"} ,
		{"trigger": "query\tInstrument method", "contents": "query(${1:args})"} ,
		{"trigger": "resolvehost\tInstrument method", "contents": "resolvehost(${1:args})"} ,
		{"trigger": "scanstr\tInstrument method", "contents": "scanstr(${1:args})"} ,
		{"trigger": "selftest\tInstrument method", "contents": "selftest(${1:args})"} ,
		{"trigger": "spi\tInstrument method", "contents": "spi(${1:args})"} ,
		{"trigger": "spoll\tInstrument method", "contents": "spoll(${1:args})"} ,
		{"trigger": "tcpip\tInstrument method", "contents": "tcpip(${1:args})"} ,
		{"trigger": "tmtool\tInstrument method", "contents": "tmtool(${1:args})"} ,
		{"trigger": "udp\tInstrument method", "contents": "udp(${1:args})"} ,
		{"trigger": "visa\tInstrument method", "contents": "visa(${1:args})"} ,
		{"trigger": "visa.spoll\tInstrument method", "contents": "visa.spoll(${1:args})"} ,
		{"trigger": "writeAndRead\tInstrument method", "contents": "writeAndRead(${1:args})"} ,

	]
}