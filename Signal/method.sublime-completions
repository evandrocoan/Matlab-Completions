{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "ac2poly\tSignal method", "contents": "ac2poly(${1:args})"} ,
		{"trigger": "ac2rc\tSignal method", "contents": "ac2rc(${1:args})"} ,
		{"trigger": "arburg\tSignal method", "contents": "arburg(${1:args})"} ,
		{"trigger": "arcov\tSignal method", "contents": "arcov(${1:args})"} ,
		{"trigger": "armcov\tSignal method", "contents": "armcov(${1:args})"} ,
		{"trigger": "aryule\tSignal method", "contents": "aryule(${1:args})"} ,
		{"trigger": "bandpower\tSignal method", "contents": "bandpower(${1:args})"} ,
		{"trigger": "barthannwin\tSignal method", "contents": "barthannwin(${1:args})"} ,
		{"trigger": "bartlett\tSignal method", "contents": "bartlett(${1:args})"} ,
		{"trigger": "besselap\tSignal method", "contents": "besselap(${1:args})"} ,
		{"trigger": "besself\tSignal method", "contents": "besself(${1:args})"} ,
		{"trigger": "bilinear\tSignal method", "contents": "bilinear(${1:args})"} ,
		{"trigger": "bitrevorder\tSignal method", "contents": "bitrevorder(${1:args})"} ,
		{"trigger": "blackman\tSignal method", "contents": "blackman(${1:args})"} ,
		{"trigger": "blackmanharris\tSignal method", "contents": "blackmanharris(${1:args})"} ,
		{"trigger": "bohmanwin\tSignal method", "contents": "bohmanwin(${1:args})"} ,
		{"trigger": "buttap\tSignal method", "contents": "buttap(${1:args})"} ,
		{"trigger": "buttord\tSignal method", "contents": "buttord(${1:args})"} ,
		{"trigger": "cceps\tSignal method", "contents": "cceps(${1:args})"} ,
		{"trigger": "cconv\tSignal method", "contents": "cconv(${1:args})"} ,
		{"trigger": "cell2sos\tSignal method", "contents": "cell2sos(${1:args})"} ,
		{"trigger": "cfirpm\tSignal method", "contents": "cfirpm(${1:args})"} ,
		{"trigger": "cheb1ap\tSignal method", "contents": "cheb1ap(${1:args})"} ,
		{"trigger": "cheb1ord\tSignal method", "contents": "cheb1ord(${1:args})"} ,
		{"trigger": "cheb2ap\tSignal method", "contents": "cheb2ap(${1:args})"} ,
		{"trigger": "cheb2ord\tSignal method", "contents": "cheb2ord(${1:args})"} ,
		{"trigger": "chebwin\tSignal method", "contents": "chebwin(${1:args})"} ,
		{"trigger": "chirp\tSignal method", "contents": "chirp(${1:args})"} ,
		{"trigger": "corrmtx\tSignal method", "contents": "corrmtx(${1:args})"} ,
		{"trigger": "cpsd\tSignal method", "contents": "cpsd(${1:args})"} ,
		{"trigger": "czt\tSignal method", "contents": "czt(${1:args})"} ,
		{"trigger": "db\tSignal method", "contents": "db(${1:args})"} ,
		{"trigger": "db2pow\tSignal method", "contents": "db2pow(${1:args})"} ,
		{"trigger": "dct\tSignal method", "contents": "dct(${1:args})"} ,
		{"trigger": "decimate\tSignal method", "contents": "decimate(${1:args})"} ,
		{"trigger": "demod\tSignal method", "contents": "demod(${1:args})"} ,
		{"trigger": "designfilt\tSignal method", "contents": "designfilt(${1:args})"} ,
		{"trigger": "digitalFilter\tSignal method", "contents": "digitalFilter(${1:args})"} ,
		{"trigger": "digitrevorder\tSignal method", "contents": "digitrevorder(${1:args})"} ,
		{"trigger": "diric\tSignal method", "contents": "diric(${1:args})"} ,
		{"trigger": "downsample\tSignal method", "contents": "downsample(${1:args})"} ,
		{"trigger": "dpss\tSignal method", "contents": "dpss(${1:args})"} ,
		{"trigger": "dpssclear\tSignal method", "contents": "dpssclear(${1:args})"} ,
		{"trigger": "dpssdir\tSignal method", "contents": "dpssdir(${1:args})"} ,
		{"trigger": "dpssload\tSignal method", "contents": "dpssload(${1:args})"} ,
		{"trigger": "dpsssave\tSignal method", "contents": "dpsssave(${1:args})"} ,
		{"trigger": "dspfwiz\tSignal method", "contents": "dspfwiz(${1:args})"} ,
		{"trigger": "dutycycle\tSignal method", "contents": "dutycycle(${1:args})"} ,
		{"trigger": "ellipap\tSignal method", "contents": "ellipap(${1:args})"} ,
		{"trigger": "ellipord\tSignal method", "contents": "ellipord(${1:args})"} ,
		{"trigger": "enbw\tSignal method", "contents": "enbw(${1:args})"} ,
		{"trigger": "envelope\tSignal method", "contents": "envelope(${1:args})"} ,
		{"trigger": "eqtflength\tSignal method", "contents": "eqtflength(${1:args})"} ,
		{"trigger": "falltime\tSignal method", "contents": "falltime(${1:args})"} ,
		{"trigger": "fftfilt\tSignal method", "contents": "fftfilt(${1:args})"} ,
		{"trigger": "filt2block\tSignal method", "contents": "filt2block(${1:args})"} ,
		{"trigger": "filternorm\tSignal method", "contents": "filternorm(${1:args})"} ,
		{"trigger": "filtfilt\tSignal method", "contents": "filtfilt(${1:args})"} ,
		{"trigger": "filtic\tSignal method", "contents": "filtic(${1:args})"} ,
		{"trigger": "filtord\tSignal method", "contents": "filtord(${1:args})"} ,
		{"trigger": "findpeaks\tSignal method", "contents": "findpeaks(${1:args})"} ,
		{"trigger": "fir1\tSignal method", "contents": "fir1(${1:args})"} ,
		{"trigger": "fir2\tSignal method", "contents": "fir2(${1:args})"} ,
		{"trigger": "fircls1\tSignal method", "contents": "fircls1(${1:args})"} ,
		{"trigger": "firpm\tSignal method", "contents": "firpm(${1:args})"} ,
		{"trigger": "firpmord\tSignal method", "contents": "firpmord(${1:args})"} ,
		{"trigger": "flattopwin\tSignal method", "contents": "flattopwin(${1:args})"} ,
		{"trigger": "freqs\tSignal method", "contents": "freqs(${1:args})"} ,
		{"trigger": "fwht\tSignal method", "contents": "fwht(${1:args})"} ,
		{"trigger": "gauspuls\tSignal method", "contents": "gauspuls(${1:args})"} ,
		{"trigger": "gausswin\tSignal method", "contents": "gausswin(${1:args})"} ,
		{"trigger": "gmonopuls\tSignal method", "contents": "gmonopuls(${1:args})"} ,
		{"trigger": "goertzel\tSignal method", "contents": "goertzel(${1:args})"} ,
		{"trigger": "hamming\tSignal method", "contents": "hamming(${1:args})"} ,
		{"trigger": "hampel\tSignal method", "contents": "hampel(${1:args})"} ,
		{"trigger": "hann\tSignal method", "contents": "hann(${1:args})"} ,
		{"trigger": "hilbert\tSignal method", "contents": "hilbert(${1:args})"} ,
		{"trigger": "icceps\tSignal method", "contents": "icceps(${1:args})"} ,
		{"trigger": "idct\tSignal method", "contents": "idct(${1:args})"} ,
		{"trigger": "ifwht\tSignal method", "contents": "ifwht(${1:args})"} ,
		{"trigger": "impinvar\tSignal method", "contents": "impinvar(${1:args})"} ,
		{"trigger": "impzlength\tSignal method", "contents": "impzlength(${1:args})"} ,
		{"trigger": "intfilt\tSignal method", "contents": "intfilt(${1:args})"} ,
		{"trigger": "invfreqs\tSignal method", "contents": "invfreqs(${1:args})"} ,
		{"trigger": "invfreqz\tSignal method", "contents": "invfreqz(${1:args})"} ,
		{"trigger": "is2rc\tSignal method", "contents": "is2rc(${1:args})"} ,
		{"trigger": "kaiser\tSignal method", "contents": "kaiser(${1:args})"} ,
		{"trigger": "kaiserord\tSignal method", "contents": "kaiserord(${1:args})"} ,
		{"trigger": "lar2rc\tSignal method", "contents": "lar2rc(${1:args})"} ,
		{"trigger": "latc2tf\tSignal method", "contents": "latc2tf(${1:args})"} ,
		{"trigger": "latcfilt\tSignal method", "contents": "latcfilt(${1:args})"} ,
		{"trigger": "levinson\tSignal method", "contents": "levinson(${1:args})"} ,
		{"trigger": "lp2bp\tSignal method", "contents": "lp2bp(${1:args})"} ,
		{"trigger": "lp2bs\tSignal method", "contents": "lp2bs(${1:args})"} ,
		{"trigger": "lp2hp\tSignal method", "contents": "lp2hp(${1:args})"} ,
		{"trigger": "lp2lp\tSignal method", "contents": "lp2lp(${1:args})"} ,
		{"trigger": "lpc\tSignal method", "contents": "lpc(${1:args})"} ,
		{"trigger": "lsf2poly\tSignal method", "contents": "lsf2poly(${1:args})"} ,
		{"trigger": "meanfreq\tSignal method", "contents": "meanfreq(${1:args})"} ,
		{"trigger": "medfilt1\tSignal method", "contents": "medfilt1(${1:args})"} ,
		{"trigger": "medfreq\tSignal method", "contents": "medfreq(${1:args})"} ,
		{"trigger": "midcross\tSignal method", "contents": "midcross(${1:args})"} ,
		{"trigger": "modulate\tSignal method", "contents": "modulate(${1:args})"} ,
		{"trigger": "mscohere\tSignal method", "contents": "mscohere(${1:args})"} ,
		{"trigger": "nuttallwin\tSignal method", "contents": "nuttallwin(${1:args})"} ,
		{"trigger": "obw\tSignal method", "contents": "obw(${1:args})"} ,
		{"trigger": "overshoot\tSignal method", "contents": "overshoot(${1:args})"} ,
		{"trigger": "parzenwin\tSignal method", "contents": "parzenwin(${1:args})"} ,
		{"trigger": "pburg\tSignal method", "contents": "pburg(${1:args})"} ,
		{"trigger": "pcov\tSignal method", "contents": "pcov(${1:args})"} ,
		{"trigger": "peak2peak\tSignal method", "contents": "peak2peak(${1:args})"} ,
		{"trigger": "peak2rms\tSignal method", "contents": "peak2rms(${1:args})"} ,
		{"trigger": "peig\tSignal method", "contents": "peig(${1:args})"} ,
		{"trigger": "periodogram\tSignal method", "contents": "periodogram(${1:args})"} ,
		{"trigger": "plomb\tSignal method", "contents": "plomb(${1:args})"} ,
		{"trigger": "pmcov\tSignal method", "contents": "pmcov(${1:args})"} ,
		{"trigger": "pmtm\tSignal method", "contents": "pmtm(${1:args})"} ,
		{"trigger": "pmusic\tSignal method", "contents": "pmusic(${1:args})"} ,
		{"trigger": "poly2ac\tSignal method", "contents": "poly2ac(${1:args})"} ,
		{"trigger": "poly2lsf\tSignal method", "contents": "poly2lsf(${1:args})"} ,
		{"trigger": "poly2rc\tSignal method", "contents": "poly2rc(${1:args})"} ,
		{"trigger": "polyscale\tSignal method", "contents": "polyscale(${1:args})"} ,
		{"trigger": "polystab\tSignal method", "contents": "polystab(${1:args})"} ,
		{"trigger": "pow2db\tSignal method", "contents": "pow2db(${1:args})"} ,
		{"trigger": "powerbw\tSignal method", "contents": "powerbw(${1:args})"} ,
		{"trigger": "prony\tSignal method", "contents": "prony(${1:args})"} ,
		{"trigger": "pulseperiod\tSignal method", "contents": "pulseperiod(${1:args})"} ,
		{"trigger": "pulsesep\tSignal method", "contents": "pulsesep(${1:args})"} ,
		{"trigger": "pulsewidth\tSignal method", "contents": "pulsewidth(${1:args})"} ,
		{"trigger": "pulstran\tSignal method", "contents": "pulstran(${1:args})"} ,
		{"trigger": "pwelch\tSignal method", "contents": "pwelch(${1:args})"} ,
		{"trigger": "pyulear\tSignal method", "contents": "pyulear(${1:args})"} ,
		{"trigger": "rc2ac\tSignal method", "contents": "rc2ac(${1:args})"} ,
		{"trigger": "rc2is\tSignal method", "contents": "rc2is(${1:args})"} ,
		{"trigger": "rc2lar\tSignal method", "contents": "rc2lar(${1:args})"} ,
		{"trigger": "rc2poly\tSignal method", "contents": "rc2poly(${1:args})"} ,
		{"trigger": "rceps\tSignal method", "contents": "rceps(${1:args})"} ,
		{"trigger": "rectpuls\tSignal method", "contents": "rectpuls(${1:args})"} ,
		{"trigger": "rectwin\tSignal method", "contents": "rectwin(${1:args})"} ,
		{"trigger": "residuez\tSignal method", "contents": "residuez(${1:args})"} ,
		{"trigger": "risetime\tSignal method", "contents": "risetime(${1:args})"} ,
		{"trigger": "rlevinson\tSignal method", "contents": "rlevinson(${1:args})"} ,
		{"trigger": "rms\tSignal method", "contents": "rms(${1:args})"} ,
		{"trigger": "rooteig\tSignal method", "contents": "rooteig(${1:args})"} ,
		{"trigger": "rootmusic\tSignal method", "contents": "rootmusic(${1:args})"} ,
		{"trigger": "rpmfreqmap\tSignal method", "contents": "rpmfreqmap(${1:args})"} ,
		{"trigger": "rpmordermap\tSignal method", "contents": "rpmordermap(${1:args})"} ,
		{"trigger": "rssq\tSignal method", "contents": "rssq(${1:args})"} ,
		{"trigger": "sawtooth\tSignal method", "contents": "sawtooth(${1:args})"} ,
		{"trigger": "schurrc\tSignal method", "contents": "schurrc(${1:args})"} ,
		{"trigger": "seqperiod\tSignal method", "contents": "seqperiod(${1:args})"} ,
		{"trigger": "settlingtime\tSignal method", "contents": "settlingtime(${1:args})"} ,
		{"trigger": "sfdr\tSignal method", "contents": "sfdr(${1:args})"} ,
		{"trigger": "sgolay\tSignal method", "contents": "sgolay(${1:args})"} ,
		{"trigger": "sgolayfilt\tSignal method", "contents": "sgolayfilt(${1:args})"} ,
		{"trigger": "sinad\tSignal method", "contents": "sinad(${1:args})"} ,
		{"trigger": "sinc\tSignal method", "contents": "sinc(${1:args})"} ,
		{"trigger": "slewrate\tSignal method", "contents": "slewrate(${1:args})"} ,
		{"trigger": "snr\tSignal method", "contents": "snr(${1:args})"} ,
		{"trigger": "sos2cell\tSignal method", "contents": "sos2cell(${1:args})"} ,
		{"trigger": "sos2ss\tSignal method", "contents": "sos2ss(${1:args})"} ,
		{"trigger": "sos2tf\tSignal method", "contents": "sos2tf(${1:args})"} ,
		{"trigger": "sos2zp\tSignal method", "contents": "sos2zp(${1:args})"} ,
		{"trigger": "sosfilt\tSignal method", "contents": "sosfilt(${1:args})"} ,
		{"trigger": "sptool\tSignal method", "contents": "sptool(${1:args})"} ,
		{"trigger": "square\tSignal method", "contents": "square(${1:args})"} ,
		{"trigger": "ss2sos\tSignal method", "contents": "ss2sos(${1:args})"} ,
		{"trigger": "ss2zp\tSignal method", "contents": "ss2zp(${1:args})"} ,
		{"trigger": "statelevels\tSignal method", "contents": "statelevels(${1:args})"} ,
		{"trigger": "stmcb\tSignal method", "contents": "stmcb(${1:args})"} ,
		{"trigger": "strips\tSignal method", "contents": "strips(${1:args})"} ,
		{"trigger": "taylorwin\tSignal method", "contents": "taylorwin(${1:args})"} ,
		{"trigger": "tf2latc\tSignal method", "contents": "tf2latc(${1:args})"} ,
		{"trigger": "tf2sos\tSignal method", "contents": "tf2sos(${1:args})"} ,
		{"trigger": "tf2ss\tSignal method", "contents": "tf2ss(${1:args})"} ,
		{"trigger": "tf2zp\tSignal method", "contents": "tf2zp(${1:args})"} ,
		{"trigger": "tf2zpk\tSignal method", "contents": "tf2zpk(${1:args})"} ,
		{"trigger": "tfestimate\tSignal method", "contents": "tfestimate(${1:args})"} ,
		{"trigger": "thd\tSignal method", "contents": "thd(${1:args})"} ,
		{"trigger": "toi\tSignal method", "contents": "toi(${1:args})"} ,
		{"trigger": "triang\tSignal method", "contents": "triang(${1:args})"} ,
		{"trigger": "tripuls\tSignal method", "contents": "tripuls(${1:args})"} ,
		{"trigger": "tukeywin\tSignal method", "contents": "tukeywin(${1:args})"} ,
		{"trigger": "udecode\tSignal method", "contents": "udecode(${1:args})"} ,
		{"trigger": "uencode\tSignal method", "contents": "uencode(${1:args})"} ,
		{"trigger": "undershoot\tSignal method", "contents": "undershoot(${1:args})"} ,
		{"trigger": "upfirdn\tSignal method", "contents": "upfirdn(${1:args})"} ,
		{"trigger": "vco\tSignal method", "contents": "vco(${1:args})"} ,
		{"trigger": "wintool\tSignal method", "contents": "wintool(${1:args})"} ,
		{"trigger": "wvtool\tSignal method", "contents": "wvtool(${1:args})"} ,
		{"trigger": "xcorr\tSignal method", "contents": "xcorr(${1:args})"} ,
		{"trigger": "xcorr2\tSignal method", "contents": "xcorr2(${1:args})"} ,
		{"trigger": "xcov\tSignal method", "contents": "xcov(${1:args})"} ,
		{"trigger": "yulewalk\tSignal method", "contents": "yulewalk(${1:args})"} ,
		{"trigger": "zp2sos\tSignal method", "contents": "zp2sos(${1:args})"} ,
		{"trigger": "zp2ss\tSignal method", "contents": "zp2ss(${1:args})"} ,
		{"trigger": "zp2tf\tSignal method", "contents": "zp2tf(${1:args})"} ,

	]
}