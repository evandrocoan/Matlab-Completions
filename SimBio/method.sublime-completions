{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "AbstractKineticLaw\tSimBio method", "contents": "AbstractKineticLaw(${1:args})"} ,
		{"trigger": "Compartment\tSimBio method", "contents": "Compartment(${1:args})"} ,
		{"trigger": "CompileOptions\tSimBio method", "contents": "CompileOptions(${1:args})"} ,
		{"trigger": "Configset\tSimBio method", "contents": "Configset(${1:args})"} ,
		{"trigger": "CovariateModel\tSimBio method", "contents": "CovariateModel(${1:args})"} ,
		{"trigger": "EstimatedInfo\tSimBio method", "contents": "EstimatedInfo(${1:args})"} ,
		{"trigger": "Event\tSimBio method", "contents": "Event(${1:args})"} ,
		{"trigger": "GroupedData\tSimBio method", "contents": "GroupedData(${1:args})"} ,
		{"trigger": "KineticLaw\tSimBio method", "contents": "KineticLaw(${1:args})"} ,
		{"trigger": "LeastSquaresResults\tSimBio method", "contents": "LeastSquaresResults(${1:args})"} ,
		{"trigger": "Model\tSimBio method", "contents": "Model(${1:args})"} ,
		{"trigger": "NLINResults\tSimBio method", "contents": "NLINResults(${1:args})"} ,
		{"trigger": "NLMEResults\tSimBio method", "contents": "NLMEResults(${1:args})"} ,
		{"trigger": "OptimResults\tSimBio method", "contents": "OptimResults(${1:args})"} ,
		{"trigger": "PKCompartment\tSimBio method", "contents": "PKCompartment(${1:args})"} ,
		{"trigger": "PKModelDesign\tSimBio method", "contents": "PKModelDesign(${1:args})"} ,
		{"trigger": "PKModelMap\tSimBio method", "contents": "PKModelMap(${1:args})"} ,
		{"trigger": "Parameter\tSimBio method", "contents": "Parameter(${1:args})"} ,
		{"trigger": "Reaction\tSimBio method", "contents": "Reaction(${1:args})"} ,
		{"trigger": "RepeatDose\tSimBio method", "contents": "RepeatDose(${1:args})"} ,
		{"trigger": "Root\tSimBio method", "contents": "Root(${1:args})"} ,
		{"trigger": "Rule\tSimBio method", "contents": "Rule(${1:args})"} ,
		{"trigger": "RuntimeOptions\tSimBio method", "contents": "RuntimeOptions(${1:args})"} ,
		{"trigger": "ScheduleDose\tSimBio method", "contents": "ScheduleDose(${1:args})"} ,
		{"trigger": "SensitivityAnalysisOptions\tSimBio method", "contents": "SensitivityAnalysisOptions(${1:args})"} ,
		{"trigger": "SimBiology.export.Model\tSimBio method", "contents": "SimBiology.export.Model(${1:args})"} ,
		{"trigger": "SimBiology.export.Model.accelerate\tSimBio method", "contents": "SimBiology.export.Model.accelerate(${1:args})"} ,
		{"trigger": "SimBiology.export.Model.simulate\tSimBio method", "contents": "SimBiology.export.Model.simulate(${1:args})"} ,
		{"trigger": "SimData\tSimBio method", "contents": "SimData(${1:args})"} ,
		{"trigger": "SimFunction\tSimBio method", "contents": "SimFunction(${1:args})"} ,
		{"trigger": "SimFunctionSensitivity\tSimBio method", "contents": "SimFunctionSensitivity(${1:args})"} ,
		{"trigger": "SolverOptions\tSimBio method", "contents": "SolverOptions(${1:args})"} ,
		{"trigger": "Species\tSimBio method", "contents": "Species(${1:args})"} ,
		{"trigger": "Unit\tSimBio method", "contents": "Unit(${1:args})"} ,
		{"trigger": "UnitPrefix\tSimBio method", "contents": "UnitPrefix(${1:args})"} ,
		{"trigger": "addCompartment\tSimBio method", "contents": "addCompartment(${1:args})"} ,
		{"trigger": "addcompartment\tSimBio method", "contents": "addcompartment(${1:args})"} ,
		{"trigger": "addconfigset\tSimBio method", "contents": "addconfigset(${1:args})"} ,
		{"trigger": "adddose\tSimBio method", "contents": "adddose(${1:args})"} ,
		{"trigger": "addparameter\tSimBio method", "contents": "addparameter(${1:args})"} ,
		{"trigger": "addreaction\tSimBio method", "contents": "addreaction(${1:args})"} ,
		{"trigger": "addspecies\tSimBio method", "contents": "addspecies(${1:args})"} ,
		{"trigger": "addvariant\tSimBio method", "contents": "addvariant(${1:args})"} ,
		{"trigger": "construct\tSimBio method", "contents": "construct(${1:args})"} ,
		{"trigger": "createSimFunction\tSimBio method", "contents": "createSimFunction(${1:args})"} ,
		{"trigger": "getconfigset\tSimBio method", "contents": "getconfigset(${1:args})"} ,
		{"trigger": "groupedData\tSimBio method", "contents": "groupedData(${1:args})"} ,
		{"trigger": "sbioabstractkineticlaw\tSimBio method", "contents": "sbioabstractkineticlaw(${1:args})"} ,
		{"trigger": "sbioaccelerate\tSimBio method", "contents": "sbioaccelerate(${1:args})"} ,
		{"trigger": "sbioaddtolibrary\tSimBio method", "contents": "sbioaddtolibrary(${1:args})"} ,
		{"trigger": "sbioconvertunits\tSimBio method", "contents": "sbioconvertunits(${1:args})"} ,
		{"trigger": "sbiocopylibrary\tSimBio method", "contents": "sbiocopylibrary(${1:args})"} ,
		{"trigger": "sbiodose\tSimBio method", "contents": "sbiodose(${1:args})"} ,
		{"trigger": "sbioensembleplot\tSimBio method", "contents": "sbioensembleplot(${1:args})"} ,
		{"trigger": "sbioensemblerun\tSimBio method", "contents": "sbioensemblerun(${1:args})"} ,
		{"trigger": "sbioensemblestats\tSimBio method", "contents": "sbioensemblestats(${1:args})"} ,
		{"trigger": "sbiofit\tSimBio method", "contents": "sbiofit(${1:args})"} ,
		{"trigger": "sbiofitmixed\tSimBio method", "contents": "sbiofitmixed(${1:args})"} ,
		{"trigger": "sbiofitstatusplot\tSimBio method", "contents": "sbiofitstatusplot(${1:args})"} ,
		{"trigger": "sbiolasterror\tSimBio method", "contents": "sbiolasterror(${1:args})"} ,
		{"trigger": "sbiolastwarning\tSimBio method", "contents": "sbiolastwarning(${1:args})"} ,
		{"trigger": "sbioloadproject\tSimBio method", "contents": "sbioloadproject(${1:args})"} ,
		{"trigger": "sbiomodel\tSimBio method", "contents": "sbiomodel(${1:args})"} ,
		{"trigger": "sbionlinfit\tSimBio method", "contents": "sbionlinfit(${1:args})"} ,
		{"trigger": "sbionlmefit\tSimBio method", "contents": "sbionlmefit(${1:args})"} ,
		{"trigger": "sbionlmefitsa\tSimBio method", "contents": "sbionlmefitsa(${1:args})"} ,
		{"trigger": "sbionmfiledef\tSimBio method", "contents": "sbionmfiledef(${1:args})"} ,
		{"trigger": "sbionmimport\tSimBio method", "contents": "sbionmimport(${1:args})"} ,
		{"trigger": "sbioparamestim\tSimBio method", "contents": "sbioparamestim(${1:args})"} ,
		{"trigger": "sbioplot\tSimBio method", "contents": "sbioplot(${1:args})"} ,
		{"trigger": "sbioremovefromlibrary\tSimBio method", "contents": "sbioremovefromlibrary(${1:args})"} ,
		{"trigger": "sbioreset\tSimBio method", "contents": "sbioreset(${1:args})"} ,
		{"trigger": "sbioroot\tSimBio method", "contents": "sbioroot(${1:args})"} ,
		{"trigger": "sbiosampleerror\tSimBio method", "contents": "sbiosampleerror(${1:args})"} ,
		{"trigger": "sbiosampleparameters\tSimBio method", "contents": "sbiosampleparameters(${1:args})"} ,
		{"trigger": "sbiosaveproject\tSimBio method", "contents": "sbiosaveproject(${1:args})"} ,
		{"trigger": "sbioselect\tSimBio method", "contents": "sbioselect(${1:args})"} ,
		{"trigger": "sbioshowunitprefixes\tSimBio method", "contents": "sbioshowunitprefixes(${1:args})"} ,
		{"trigger": "sbioshowunits\tSimBio method", "contents": "sbioshowunits(${1:args})"} ,
		{"trigger": "sbiosimulate\tSimBio method", "contents": "sbiosimulate(${1:args})"} ,
		{"trigger": "sbiosubplot\tSimBio method", "contents": "sbiosubplot(${1:args})"} ,
		{"trigger": "sbiotrellis\tSimBio method", "contents": "sbiotrellis(${1:args})"} ,
		{"trigger": "sbiounit\tSimBio method", "contents": "sbiounit(${1:args})"} ,
		{"trigger": "sbiounitcalculator\tSimBio method", "contents": "sbiounitcalculator(${1:args})"} ,
		{"trigger": "sbiounitprefix\tSimBio method", "contents": "sbiounitprefix(${1:args})"} ,
		{"trigger": "sbiovariant\tSimBio method", "contents": "sbiovariant(${1:args})"} ,
		{"trigger": "sbiowhos\tSimBio method", "contents": "sbiowhos(${1:args})"} ,
		{"trigger": "sbmlexport\tSimBio method", "contents": "sbmlexport(${1:args})"} ,
		{"trigger": "sbmlimport\tSimBio method", "contents": "sbmlimport(${1:args})"} ,
		{"trigger": "verify\tSimBio method", "contents": "verify(${1:args})"} ,

	]
}