{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "addmf\tFuzzy method", "contents": "addmf(${1:args})"} ,
		{"trigger": "addrule\tFuzzy method", "contents": "addrule(${1:args})"} ,
		{"trigger": "addvar\tFuzzy method", "contents": "addvar(${1:args})"} ,
		{"trigger": "anfis\tFuzzy method", "contents": "anfis(${1:args})"} ,
		{"trigger": "convertfis\tFuzzy method", "contents": "convertfis(${1:args})"} ,
		{"trigger": "defuzz\tFuzzy method", "contents": "defuzz(${1:args})"} ,
		{"trigger": "dsigmf\tFuzzy method", "contents": "dsigmf(${1:args})"} ,
		{"trigger": "evalfis\tFuzzy method", "contents": "evalfis(${1:args})"} ,
		{"trigger": "evalmf\tFuzzy method", "contents": "evalmf(${1:args})"} ,
		{"trigger": "fcm\tFuzzy method", "contents": "fcm(${1:args})"} ,
		{"trigger": "findcluster\tFuzzy method", "contents": "findcluster(${1:args})"} ,
		{"trigger": "fuzarith\tFuzzy method", "contents": "fuzarith(${1:args})"} ,
		{"trigger": "fuzzyLogicDesigner\tFuzzy method", "contents": "fuzzyLogicDesigner(${1:args})"} ,
		{"trigger": "gauss2mf\tFuzzy method", "contents": "gauss2mf(${1:args})"} ,
		{"trigger": "gaussmf\tFuzzy method", "contents": "gaussmf(${1:args})"} ,
		{"trigger": "gbellmf\tFuzzy method", "contents": "gbellmf(${1:args})"} ,
		{"trigger": "genfis1\tFuzzy method", "contents": "genfis1(${1:args})"} ,
		{"trigger": "genfis2\tFuzzy method", "contents": "genfis2(${1:args})"} ,
		{"trigger": "genfis3\tFuzzy method", "contents": "genfis3(${1:args})"} ,
		{"trigger": "gensurf\tFuzzy method", "contents": "gensurf(${1:args})"} ,
		{"trigger": "getfis\tFuzzy method", "contents": "getfis(${1:args})"} ,
		{"trigger": "mam2sug\tFuzzy method", "contents": "mam2sug(${1:args})"} ,
		{"trigger": "mf2mf\tFuzzy method", "contents": "mf2mf(${1:args})"} ,
		{"trigger": "mfedit\tFuzzy method", "contents": "mfedit(${1:args})"} ,
		{"trigger": "neuroFuzzyDesigner\tFuzzy method", "contents": "neuroFuzzyDesigner(${1:args})"} ,
		{"trigger": "newfis\tFuzzy method", "contents": "newfis(${1:args})"} ,
		{"trigger": "parsrule\tFuzzy method", "contents": "parsrule(${1:args})"} ,
		{"trigger": "pimf\tFuzzy method", "contents": "pimf(${1:args})"} ,
		{"trigger": "plotfis\tFuzzy method", "contents": "plotfis(${1:args})"} ,
		{"trigger": "plotmf\tFuzzy method", "contents": "plotmf(${1:args})"} ,
		{"trigger": "probor\tFuzzy method", "contents": "probor(${1:args})"} ,
		{"trigger": "psigmf\tFuzzy method", "contents": "psigmf(${1:args})"} ,
		{"trigger": "readfis\tFuzzy method", "contents": "readfis(${1:args})"} ,
		{"trigger": "rmmf\tFuzzy method", "contents": "rmmf(${1:args})"} ,
		{"trigger": "rmvar\tFuzzy method", "contents": "rmvar(${1:args})"} ,
		{"trigger": "ruleedit\tFuzzy method", "contents": "ruleedit(${1:args})"} ,
		{"trigger": "ruleview\tFuzzy method", "contents": "ruleview(${1:args})"} ,
		{"trigger": "setfis\tFuzzy method", "contents": "setfis(${1:args})"} ,
		{"trigger": "showfis\tFuzzy method", "contents": "showfis(${1:args})"} ,
		{"trigger": "showrule\tFuzzy method", "contents": "showrule(${1:args})"} ,
		{"trigger": "sigmf\tFuzzy method", "contents": "sigmf(${1:args})"} ,
		{"trigger": "smf\tFuzzy method", "contents": "smf(${1:args})"} ,
		{"trigger": "subclust\tFuzzy method", "contents": "subclust(${1:args})"} ,
		{"trigger": "surfview\tFuzzy method", "contents": "surfview(${1:args})"} ,
		{"trigger": "trapmf\tFuzzy method", "contents": "trapmf(${1:args})"} ,
		{"trigger": "trimf\tFuzzy method", "contents": "trimf(${1:args})"} ,
		{"trigger": "writefis\tFuzzy method", "contents": "writefis(${1:args})"} ,
		{"trigger": "zmf\tFuzzy method", "contents": "zmf(${1:args})"} ,

	]
}