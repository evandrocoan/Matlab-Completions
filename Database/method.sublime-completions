{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "DatabaseDatastore\tDatabase method", "contents": "DatabaseDatastore(${1:args})"} ,
		{"trigger": "attr\tDatabase method", "contents": "attr(${1:args})"} ,
		{"trigger": "bestrowid\tDatabase method", "contents": "bestrowid(${1:args})"} ,
		{"trigger": "catalogs\tDatabase method", "contents": "catalogs(${1:args})"} ,
		{"trigger": "clearwarnings\tDatabase method", "contents": "clearwarnings(${1:args})"} ,
		{"trigger": "cols\tDatabase method", "contents": "cols(${1:args})"} ,
		{"trigger": "columnnames\tDatabase method", "contents": "columnnames(${1:args})"} ,
		{"trigger": "columnprivileges\tDatabase method", "contents": "columnprivileges(${1:args})"} ,
		{"trigger": "columns\tDatabase method", "contents": "columns(${1:args})"} ,
		{"trigger": "commit\tDatabase method", "contents": "commit(${1:args})"} ,
		{"trigger": "confds\tDatabase method", "contents": "confds(${1:args})"} ,
		{"trigger": "crossreference\tDatabase method", "contents": "crossreference(${1:args})"} ,
		{"trigger": "cursor.fetch\tDatabase method", "contents": "cursor.fetch(${1:args})"} ,
		{"trigger": "database\tDatabase method", "contents": "database(${1:args})"} ,
		{"trigger": "database.catalogs\tDatabase method", "contents": "database.catalogs(${1:args})"} ,
		{"trigger": "database.columns\tDatabase method", "contents": "database.columns(${1:args})"} ,
		{"trigger": "database.fetch\tDatabase method", "contents": "database.fetch(${1:args})"} ,
		{"trigger": "database.schemas\tDatabase method", "contents": "database.schemas(${1:args})"} ,
		{"trigger": "database.tables\tDatabase method", "contents": "database.tables(${1:args})"} ,
		{"trigger": "datainsert\tDatabase method", "contents": "datainsert(${1:args})"} ,
		{"trigger": "dmd\tDatabase method", "contents": "dmd(${1:args})"} ,
		{"trigger": "driver\tDatabase method", "contents": "driver(${1:args})"} ,
		{"trigger": "drivermanager\tDatabase method", "contents": "drivermanager(${1:args})"} ,
		{"trigger": "exec\tDatabase method", "contents": "exec(${1:args})"} ,
		{"trigger": "exportedkeys\tDatabase method", "contents": "exportedkeys(${1:args})"} ,
		{"trigger": "fastinsert\tDatabase method", "contents": "fastinsert(${1:args})"} ,
		{"trigger": "fetch\tDatabase method", "contents": "fetch(${1:args})"} ,
		{"trigger": "fetchmulti\tDatabase method", "contents": "fetchmulti(${1:args})"} ,
		{"trigger": "getdatasources\tDatabase method", "contents": "getdatasources(${1:args})"} ,
		{"trigger": "importedkeys\tDatabase method", "contents": "importedkeys(${1:args})"} ,
		{"trigger": "indexinfo\tDatabase method", "contents": "indexinfo(${1:args})"} ,
		{"trigger": "insert\tDatabase method", "contents": "insert(${1:args})"} ,
		{"trigger": "isconnection\tDatabase method", "contents": "isconnection(${1:args})"} ,
		{"trigger": "isdriver\tDatabase method", "contents": "isdriver(${1:args})"} ,
		{"trigger": "isjdbc\tDatabase method", "contents": "isjdbc(${1:args})"} ,
		{"trigger": "isnullcolumn\tDatabase method", "contents": "isnullcolumn(${1:args})"} ,
		{"trigger": "isopen\tDatabase method", "contents": "isopen(${1:args})"} ,
		{"trigger": "isreadonly\tDatabase method", "contents": "isreadonly(${1:args})"} ,
		{"trigger": "isurl\tDatabase method", "contents": "isurl(${1:args})"} ,
		{"trigger": "logintimeout\tDatabase method", "contents": "logintimeout(${1:args})"} ,
		{"trigger": "namecolumn\tDatabase method", "contents": "namecolumn(${1:args})"} ,
		{"trigger": "ping\tDatabase method", "contents": "ping(${1:args})"} ,
		{"trigger": "primarykeys\tDatabase method", "contents": "primarykeys(${1:args})"} ,
		{"trigger": "procedurecolumns\tDatabase method", "contents": "procedurecolumns(${1:args})"} ,
		{"trigger": "procedures\tDatabase method", "contents": "procedures(${1:args})"} ,
		{"trigger": "querybuilder\tDatabase method", "contents": "querybuilder(${1:args})"} ,
		{"trigger": "querytimeout\tDatabase method", "contents": "querytimeout(${1:args})"} ,
		{"trigger": "register\tDatabase method", "contents": "register(${1:args})"} ,
		{"trigger": "resultset\tDatabase method", "contents": "resultset(${1:args})"} ,
		{"trigger": "rollback\tDatabase method", "contents": "rollback(${1:args})"} ,
		{"trigger": "rows\tDatabase method", "contents": "rows(${1:args})"} ,
		{"trigger": "rsmd\tDatabase method", "contents": "rsmd(${1:args})"} ,
		{"trigger": "runsqlscript\tDatabase method", "contents": "runsqlscript(${1:args})"} ,
		{"trigger": "runstoredprocedure\tDatabase method", "contents": "runstoredprocedure(${1:args})"} ,
		{"trigger": "schemas\tDatabase method", "contents": "schemas(${1:args})"} ,
		{"trigger": "setdbprefs\tDatabase method", "contents": "setdbprefs(${1:args})"} ,
		{"trigger": "sql2native\tDatabase method", "contents": "sql2native(${1:args})"} ,
		{"trigger": "supports\tDatabase method", "contents": "supports(${1:args})"} ,
		{"trigger": "tableprivileges\tDatabase method", "contents": "tableprivileges(${1:args})"} ,
		{"trigger": "tables\tDatabase method", "contents": "tables(${1:args})"} ,
		{"trigger": "unregister\tDatabase method", "contents": "unregister(${1:args})"} ,
		{"trigger": "update\tDatabase method", "contents": "update(${1:args})"} ,
		{"trigger": "versioncolumns\tDatabase method", "contents": "versioncolumns(${1:args})"} ,

	]
}