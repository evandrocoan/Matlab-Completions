{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "getbounds\tSLDo method", "contents": "getbounds(${1:args})"} ,
		{"trigger": "makedist\tSLDo method", "contents": "makedist(${1:args})"} ,
		{"trigger": "param.Continuous\tSLDo method", "contents": "param.Continuous(${1:args})"} ,
		{"trigger": "param.Continuous.isreal\tSLDo method", "contents": "param.Continuous.isreal(${1:args})"} ,
		{"trigger": "param.State\tSLDo method", "contents": "param.State(${1:args})"} ,
		{"trigger": "sdo.AnalyzeOptions\tSLDo method", "contents": "sdo.AnalyzeOptions(${1:args})"} ,
		{"trigger": "sdo.EvaluateOptions\tSLDo method", "contents": "sdo.EvaluateOptions(${1:args})"} ,
		{"trigger": "sdo.Experiment.createSimulator\tSLDo method", "contents": "sdo.Experiment.createSimulator(${1:args})"} ,
		{"trigger": "sdo.Experiment.getValuesToEstimate\tSLDo method", "contents": "sdo.Experiment.getValuesToEstimate(${1:args})"} ,
		{"trigger": "sdo.Experiment.setEstimatedValues\tSLDo method", "contents": "sdo.Experiment.setEstimatedValues(${1:args})"} ,
		{"trigger": "sdo.OptimizeOptions\tSLDo method", "contents": "sdo.OptimizeOptions(${1:args})"} ,
		{"trigger": "sdo.ParameterSpace\tSLDo method", "contents": "sdo.ParameterSpace(${1:args})"} ,
		{"trigger": "sdo.SampleOptions\tSLDo method", "contents": "sdo.SampleOptions(${1:args})"} ,
		{"trigger": "sdo.SimulationTest\tSLDo method", "contents": "sdo.SimulationTest(${1:args})"} ,
		{"trigger": "sdo.SimulationTest.FastRestart\tSLDo method", "contents": "sdo.SimulationTest.FastRestart(${1:args})"} ,
		{"trigger": "sdo.SimulationTest.fastRestart\tSLDo method", "contents": "sdo.SimulationTest.fastRestart(${1:args})"} ,
		{"trigger": "sdo.SimulationTest.find\tSLDo method", "contents": "sdo.SimulationTest.find(${1:args})"} ,
		{"trigger": "sdo.SimulationTest.sim\tSLDo method", "contents": "sdo.SimulationTest.sim(${1:args})"} ,
		{"trigger": "sdo.SimulationTest.who\tSLDo method", "contents": "sdo.SimulationTest.who(${1:args})"} ,
		{"trigger": "sdo.SystemLoggingInfo\tSLDo method", "contents": "sdo.SystemLoggingInfo(${1:args})"} ,
		{"trigger": "sdo.analyze\tSLDo method", "contents": "sdo.analyze(${1:args})"} ,
		{"trigger": "sdo.evaluate\tSLDo method", "contents": "sdo.evaluate(${1:args})"} ,
		{"trigger": "sdo.getModelDependencies\tSLDo method", "contents": "sdo.getModelDependencies(${1:args})"} ,
		{"trigger": "sdo.getParameterFromModel\tSLDo method", "contents": "sdo.getParameterFromModel(${1:args})"} ,
		{"trigger": "sdo.getStateFromModel\tSLDo method", "contents": "sdo.getStateFromModel(${1:args})"} ,
		{"trigger": "sdo.getValueFromModel\tSLDo method", "contents": "sdo.getValueFromModel(${1:args})"} ,
		{"trigger": "sdo.optimize\tSLDo method", "contents": "sdo.optimize(${1:args})"} ,
		{"trigger": "sdo.requirements.BodeMagnitude\tSLDo method", "contents": "sdo.requirements.BodeMagnitude(${1:args})"} ,
		{"trigger": "sdo.requirements.BodeMagnitude.evalRequirement\tSLDo method", "contents": "sdo.requirements.BodeMagnitude.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.ClosedLoopPeakGain\tSLDo method", "contents": "sdo.requirements.ClosedLoopPeakGain(${1:args})"} ,
		{"trigger": "sdo.requirements.ClosedLoopPeakGain.evalRequirement\tSLDo method", "contents": "sdo.requirements.ClosedLoopPeakGain.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.GainPhaseMargin\tSLDo method", "contents": "sdo.requirements.GainPhaseMargin(${1:args})"} ,
		{"trigger": "sdo.requirements.GainPhaseMargin.evalRequirement\tSLDo method", "contents": "sdo.requirements.GainPhaseMargin.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.OpenLoopGainPhase\tSLDo method", "contents": "sdo.requirements.OpenLoopGainPhase(${1:args})"} ,
		{"trigger": "sdo.requirements.OpenLoopGainPhase.evalRequirement\tSLDo method", "contents": "sdo.requirements.OpenLoopGainPhase.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.PZDampingRatio\tSLDo method", "contents": "sdo.requirements.PZDampingRatio(${1:args})"} ,
		{"trigger": "sdo.requirements.PZDampingRatio.evalRequirement\tSLDo method", "contents": "sdo.requirements.PZDampingRatio.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.PZDampingRatio.getOvershoot\tSLDo method", "contents": "sdo.requirements.PZDampingRatio.getOvershoot(${1:args})"} ,
		{"trigger": "sdo.requirements.PZDampingRatio.setOvershoot\tSLDo method", "contents": "sdo.requirements.PZDampingRatio.setOvershoot(${1:args})"} ,
		{"trigger": "sdo.requirements.PZNaturalFrequency\tSLDo method", "contents": "sdo.requirements.PZNaturalFrequency(${1:args})"} ,
		{"trigger": "sdo.requirements.PZNaturalFrequency.evalRequirement\tSLDo method", "contents": "sdo.requirements.PZNaturalFrequency.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.PZSettlingTime\tSLDo method", "contents": "sdo.requirements.PZSettlingTime(${1:args})"} ,
		{"trigger": "sdo.requirements.PZSettlingTime.evalRequirement\tSLDo method", "contents": "sdo.requirements.PZSettlingTime.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.SignalBound\tSLDo method", "contents": "sdo.requirements.SignalBound(${1:args})"} ,
		{"trigger": "sdo.requirements.SignalBound.evalRequirement\tSLDo method", "contents": "sdo.requirements.SignalBound.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.SignalTracking\tSLDo method", "contents": "sdo.requirements.SignalTracking(${1:args})"} ,
		{"trigger": "sdo.requirements.SignalTracking.evalRequirement\tSLDo method", "contents": "sdo.requirements.SignalTracking.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.SingularValue\tSLDo method", "contents": "sdo.requirements.SingularValue(${1:args})"} ,
		{"trigger": "sdo.requirements.SingularValue.evalRequirement\tSLDo method", "contents": "sdo.requirements.SingularValue.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.requirements.StepResponseEnvelope\tSLDo method", "contents": "sdo.requirements.StepResponseEnvelope(${1:args})"} ,
		{"trigger": "sdo.requirements.StepResponseEnvelope.evalRequirement\tSLDo method", "contents": "sdo.requirements.StepResponseEnvelope.evalRequirement(${1:args})"} ,
		{"trigger": "sdo.sample\tSLDo method", "contents": "sdo.sample(${1:args})"} ,
		{"trigger": "sdo.scatterPlot\tSLDo method", "contents": "sdo.scatterPlot(${1:args})"} ,
		{"trigger": "sdo.setCheckBlockEnabled\tSLDo method", "contents": "sdo.setCheckBlockEnabled(${1:args})"} ,
		{"trigger": "sdo.setValueInModel\tSLDo method", "contents": "sdo.setValueInModel(${1:args})"} ,
		{"trigger": "sdotool\tSLDo method", "contents": "sdotool(${1:args})"} ,
		{"trigger": "sdoupdate\tSLDo method", "contents": "sdoupdate(${1:args})"} ,
		{"trigger": "spetool\tSLDo method", "contents": "spetool(${1:args})"} ,

	]
}