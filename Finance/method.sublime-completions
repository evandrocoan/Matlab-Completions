{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "Portfolio\tFinance method", "contents": "Portfolio(${1:args})"} ,
		{"trigger": "PortfolioCVaR\tFinance method", "contents": "PortfolioCVaR(${1:args})"} ,
		{"trigger": "PortfolioMAD\tFinance method", "contents": "PortfolioMAD(${1:args})"} ,
		{"trigger": "abs2active\tFinance method", "contents": "abs2active(${1:args})"} ,
		{"trigger": "accrfrac\tFinance method", "contents": "accrfrac(${1:args})"} ,
		{"trigger": "acrubond\tFinance method", "contents": "acrubond(${1:args})"} ,
		{"trigger": "acrudisc\tFinance method", "contents": "acrudisc(${1:args})"} ,
		{"trigger": "active2abs\tFinance method", "contents": "active2abs(${1:args})"} ,
		{"trigger": "addEquality\tFinance method", "contents": "addEquality(${1:args})"} ,
		{"trigger": "addGroupRatio\tFinance method", "contents": "addGroupRatio(${1:args})"} ,
		{"trigger": "addGroups\tFinance method", "contents": "addGroups(${1:args})"} ,
		{"trigger": "addInequality\tFinance method", "contents": "addInequality(${1:args})"} ,
		{"trigger": "adline\tFinance method", "contents": "adline(${1:args})"} ,
		{"trigger": "adosc\tFinance method", "contents": "adosc(${1:args})"} ,
		{"trigger": "amortize\tFinance method", "contents": "amortize(${1:args})"} ,
		{"trigger": "annurate\tFinance method", "contents": "annurate(${1:args})"} ,
		{"trigger": "annuterm\tFinance method", "contents": "annuterm(${1:args})"} ,
		{"trigger": "arith2geom\tFinance method", "contents": "arith2geom(${1:args})"} ,
		{"trigger": "ascii2fts\tFinance method", "contents": "ascii2fts(${1:args})"} ,
		{"trigger": "autobinning\tFinance method", "contents": "autobinning(${1:args})"} ,
		{"trigger": "beytbill\tFinance method", "contents": "beytbill(${1:args})"} ,
		{"trigger": "bindata\tFinance method", "contents": "bindata(${1:args})"} ,
		{"trigger": "bininfo\tFinance method", "contents": "bininfo(${1:args})"} ,
		{"trigger": "binprice\tFinance method", "contents": "binprice(${1:args})"} ,
		{"trigger": "blkimpv\tFinance method", "contents": "blkimpv(${1:args})"} ,
		{"trigger": "blkprice\tFinance method", "contents": "blkprice(${1:args})"} ,
		{"trigger": "blsdelta\tFinance method", "contents": "blsdelta(${1:args})"} ,
		{"trigger": "blsgamma\tFinance method", "contents": "blsgamma(${1:args})"} ,
		{"trigger": "blsimpv\tFinance method", "contents": "blsimpv(${1:args})"} ,
		{"trigger": "blslambda\tFinance method", "contents": "blslambda(${1:args})"} ,
		{"trigger": "blsprice\tFinance method", "contents": "blsprice(${1:args})"} ,
		{"trigger": "blsrho\tFinance method", "contents": "blsrho(${1:args})"} ,
		{"trigger": "blstheta\tFinance method", "contents": "blstheta(${1:args})"} ,
		{"trigger": "blsvega\tFinance method", "contents": "blsvega(${1:args})"} ,
		{"trigger": "bm\tFinance method", "contents": "bm(${1:args})"} ,
		{"trigger": "bndconvp\tFinance method", "contents": "bndconvp(${1:args})"} ,
		{"trigger": "bndconvy\tFinance method", "contents": "bndconvy(${1:args})"} ,
		{"trigger": "bnddurp\tFinance method", "contents": "bnddurp(${1:args})"} ,
		{"trigger": "bnddury\tFinance method", "contents": "bnddury(${1:args})"} ,
		{"trigger": "bndkrdur\tFinance method", "contents": "bndkrdur(${1:args})"} ,
		{"trigger": "bndprice\tFinance method", "contents": "bndprice(${1:args})"} ,
		{"trigger": "bndspread\tFinance method", "contents": "bndspread(${1:args})"} ,
		{"trigger": "bndtotalreturn\tFinance method", "contents": "bndtotalreturn(${1:args})"} ,
		{"trigger": "bndyield\tFinance method", "contents": "bndyield(${1:args})"} ,
		{"trigger": "bolling\tFinance method", "contents": "bolling(${1:args})"} ,
		{"trigger": "bollinger\tFinance method", "contents": "bollinger(${1:args})"} ,
		{"trigger": "boxcox\tFinance method", "contents": "boxcox(${1:args})"} ,
		{"trigger": "busdate\tFinance method", "contents": "busdate(${1:args})"} ,
		{"trigger": "busdays\tFinance method", "contents": "busdays(${1:args})"} ,
		{"trigger": "candle\tFinance method", "contents": "candle(${1:args})"} ,
		{"trigger": "cdai\tFinance method", "contents": "cdai(${1:args})"} ,
		{"trigger": "cdprice\tFinance method", "contents": "cdprice(${1:args})"} ,
		{"trigger": "cdyield\tFinance method", "contents": "cdyield(${1:args})"} ,
		{"trigger": "cev\tFinance method", "contents": "cev(${1:args})"} ,
		{"trigger": "cfamounts\tFinance method", "contents": "cfamounts(${1:args})"} ,
		{"trigger": "cfconv\tFinance method", "contents": "cfconv(${1:args})"} ,
		{"trigger": "cfdates\tFinance method", "contents": "cfdates(${1:args})"} ,
		{"trigger": "cfdur\tFinance method", "contents": "cfdur(${1:args})"} ,
		{"trigger": "cfplot\tFinance method", "contents": "cfplot(${1:args})"} ,
		{"trigger": "cfport\tFinance method", "contents": "cfport(${1:args})"} ,
		{"trigger": "cftimes\tFinance method", "contents": "cftimes(${1:args})"} ,
		{"trigger": "chaikosc\tFinance method", "contents": "chaikosc(${1:args})"} ,
		{"trigger": "chaikvolat\tFinance method", "contents": "chaikvolat(${1:args})"} ,
		{"trigger": "chartfts\tFinance method", "contents": "chartfts(${1:args})"} ,
		{"trigger": "checkFeasibility\tFinance method", "contents": "checkFeasibility(${1:args})"} ,
		{"trigger": "chfield\tFinance method", "contents": "chfield(${1:args})"} ,
		{"trigger": "cir\tFinance method", "contents": "cir(${1:args})"} ,
		{"trigger": "convert2sur\tFinance method", "contents": "convert2sur(${1:args})"} ,
		{"trigger": "convertto\tFinance method", "contents": "convertto(${1:args})"} ,
		{"trigger": "corr2cov\tFinance method", "contents": "corr2cov(${1:args})"} ,
		{"trigger": "cov2corr\tFinance method", "contents": "cov2corr(${1:args})"} ,
		{"trigger": "cpncount\tFinance method", "contents": "cpncount(${1:args})"} ,
		{"trigger": "cpndaten\tFinance method", "contents": "cpndaten(${1:args})"} ,
		{"trigger": "cpndatenq\tFinance method", "contents": "cpndatenq(${1:args})"} ,
		{"trigger": "cpndatep\tFinance method", "contents": "cpndatep(${1:args})"} ,
		{"trigger": "cpndaysp\tFinance method", "contents": "cpndaysp(${1:args})"} ,
		{"trigger": "cpnpersz\tFinance method", "contents": "cpnpersz(${1:args})"} ,
		{"trigger": "createholidays\tFinance method", "contents": "createholidays(${1:args})"} ,
		{"trigger": "creditscorecard\tFinance method", "contents": "creditscorecard(${1:args})"} ,
		{"trigger": "cur2frac\tFinance method", "contents": "cur2frac(${1:args})"} ,
		{"trigger": "cur2str\tFinance method", "contents": "cur2str(${1:args})"} ,
		{"trigger": "dateaxis\tFinance method", "contents": "dateaxis(${1:args})"} ,
		{"trigger": "datefind\tFinance method", "contents": "datefind(${1:args})"} ,
		{"trigger": "datemnth\tFinance method", "contents": "datemnth(${1:args})"} ,
		{"trigger": "datewrkdy\tFinance method", "contents": "datewrkdy(${1:args})"} ,
		{"trigger": "days360\tFinance method", "contents": "days360(${1:args})"} ,
		{"trigger": "days360e\tFinance method", "contents": "days360e(${1:args})"} ,
		{"trigger": "days360isda\tFinance method", "contents": "days360isda(${1:args})"} ,
		{"trigger": "days360psa\tFinance method", "contents": "days360psa(${1:args})"} ,
		{"trigger": "days365\tFinance method", "contents": "days365(${1:args})"} ,
		{"trigger": "daysact\tFinance method", "contents": "daysact(${1:args})"} ,
		{"trigger": "daysadd\tFinance method", "contents": "daysadd(${1:args})"} ,
		{"trigger": "daysdif\tFinance method", "contents": "daysdif(${1:args})"} ,
		{"trigger": "dec2thirtytwo\tFinance method", "contents": "dec2thirtytwo(${1:args})"} ,
		{"trigger": "depfixdb\tFinance method", "contents": "depfixdb(${1:args})"} ,
		{"trigger": "depgendb\tFinance method", "contents": "depgendb(${1:args})"} ,
		{"trigger": "deprdv\tFinance method", "contents": "deprdv(${1:args})"} ,
		{"trigger": "depsoyd\tFinance method", "contents": "depsoyd(${1:args})"} ,
		{"trigger": "depstln\tFinance method", "contents": "depstln(${1:args})"} ,
		{"trigger": "diffusion\tFinance method", "contents": "diffusion(${1:args})"} ,
		{"trigger": "disc2zero\tFinance method", "contents": "disc2zero(${1:args})"} ,
		{"trigger": "discrate\tFinance method", "contents": "discrate(${1:args})"} ,
		{"trigger": "displaypoints\tFinance method", "contents": "displaypoints(${1:args})"} ,
		{"trigger": "drift\tFinance method", "contents": "drift(${1:args})"} ,
		{"trigger": "ecmlsrmle\tFinance method", "contents": "ecmlsrmle(${1:args})"} ,
		{"trigger": "ecmmvnrfish\tFinance method", "contents": "ecmmvnrfish(${1:args})"} ,
		{"trigger": "ecmmvnrmle\tFinance method", "contents": "ecmmvnrmle(${1:args})"} ,
		{"trigger": "ecmmvnrobj\tFinance method", "contents": "ecmmvnrobj(${1:args})"} ,
		{"trigger": "ecmmvnrstd\tFinance method", "contents": "ecmmvnrstd(${1:args})"} ,
		{"trigger": "ecmnfish\tFinance method", "contents": "ecmnfish(${1:args})"} ,
		{"trigger": "ecmnhess\tFinance method", "contents": "ecmnhess(${1:args})"} ,
		{"trigger": "ecmninit\tFinance method", "contents": "ecmninit(${1:args})"} ,
		{"trigger": "ecmnmle\tFinance method", "contents": "ecmnmle(${1:args})"} ,
		{"trigger": "ecmnobj\tFinance method", "contents": "ecmnobj(${1:args})"} ,
		{"trigger": "ecmnstd\tFinance method", "contents": "ecmnstd(${1:args})"} ,
		{"trigger": "effrr\tFinance method", "contents": "effrr(${1:args})"} ,
		{"trigger": "elpm\tFinance method", "contents": "elpm(${1:args})"} ,
		{"trigger": "emaxdrawdown\tFinance method", "contents": "emaxdrawdown(${1:args})"} ,
		{"trigger": "eomdate\tFinance method", "contents": "eomdate(${1:args})"} ,
		{"trigger": "eq\tFinance method", "contents": "eq(${1:args})"} ,
		{"trigger": "estimateAssetMoments\tFinance method", "contents": "estimateAssetMoments(${1:args})"} ,
		{"trigger": "estimateBounds\tFinance method", "contents": "estimateBounds(${1:args})"} ,
		{"trigger": "estimateFrontier\tFinance method", "contents": "estimateFrontier(${1:args})"} ,
		{"trigger": "estimateFrontierByReturn\tFinance method", "contents": "estimateFrontierByReturn(${1:args})"} ,
		{"trigger": "estimateFrontierByRisk\tFinance method", "contents": "estimateFrontierByRisk(${1:args})"} ,
		{"trigger": "estimateFrontierLimits\tFinance method", "contents": "estimateFrontierLimits(${1:args})"} ,
		{"trigger": "estimateMaxSharpeRatio\tFinance method", "contents": "estimateMaxSharpeRatio(${1:args})"} ,
		{"trigger": "estimatePortMoments\tFinance method", "contents": "estimatePortMoments(${1:args})"} ,
		{"trigger": "estimatePortReturn\tFinance method", "contents": "estimatePortReturn(${1:args})"} ,
		{"trigger": "estimatePortRisk\tFinance method", "contents": "estimatePortRisk(${1:args})"} ,
		{"trigger": "estimatePortStd\tFinance method", "contents": "estimatePortStd(${1:args})"} ,
		{"trigger": "estimatePortVaR\tFinance method", "contents": "estimatePortVaR(${1:args})"} ,
		{"trigger": "estimateScenarioMoments\tFinance method", "contents": "estimateScenarioMoments(${1:args})"} ,
		{"trigger": "ewstats\tFinance method", "contents": "ewstats(${1:args})"} ,
		{"trigger": "extfield\tFinance method", "contents": "extfield(${1:args})"} ,
		{"trigger": "fanplot\tFinance method", "contents": "fanplot(${1:args})"} ,
		{"trigger": "fbusdate\tFinance method", "contents": "fbusdate(${1:args})"} ,
		{"trigger": "fillts\tFinance method", "contents": "fillts(${1:args})"} ,
		{"trigger": "fints\tFinance method", "contents": "fints(${1:args})"} ,
		{"trigger": "fitmodel\tFinance method", "contents": "fitmodel(${1:args})"} ,
		{"trigger": "formatpoints\tFinance method", "contents": "formatpoints(${1:args})"} ,
		{"trigger": "fpctkd\tFinance method", "contents": "fpctkd(${1:args})"} ,
		{"trigger": "frac2cur\tFinance method", "contents": "frac2cur(${1:args})"} ,
		{"trigger": "freqnum\tFinance method", "contents": "freqnum(${1:args})"} ,
		{"trigger": "freqstr\tFinance method", "contents": "freqstr(${1:args})"} ,
		{"trigger": "frontcon\tFinance method", "contents": "frontcon(${1:args})"} ,
		{"trigger": "frontier\tFinance method", "contents": "frontier(${1:args})"} ,
		{"trigger": "fts2ascii\tFinance method", "contents": "fts2ascii(${1:args})"} ,
		{"trigger": "fts2mat\tFinance method", "contents": "fts2mat(${1:args})"} ,
		{"trigger": "ftsbound\tFinance method", "contents": "ftsbound(${1:args})"} ,
		{"trigger": "ftsgui\tFinance method", "contents": "ftsgui(${1:args})"} ,
		{"trigger": "ftsinfo\tFinance method", "contents": "ftsinfo(${1:args})"} ,
		{"trigger": "ftstool\tFinance method", "contents": "ftstool(${1:args})"} ,
		{"trigger": "ftsuniq\tFinance method", "contents": "ftsuniq(${1:args})"} ,
		{"trigger": "fvdisc\tFinance method", "contents": "fvdisc(${1:args})"} ,
		{"trigger": "fvfix\tFinance method", "contents": "fvfix(${1:args})"} ,
		{"trigger": "fvvar\tFinance method", "contents": "fvvar(${1:args})"} ,
		{"trigger": "fwd2zero\tFinance method", "contents": "fwd2zero(${1:args})"} ,
		{"trigger": "gbm\tFinance method", "contents": "gbm(${1:args})"} ,
		{"trigger": "geom2arith\tFinance method", "contents": "geom2arith(${1:args})"} ,
		{"trigger": "getAssetMoments\tFinance method", "contents": "getAssetMoments(${1:args})"} ,
		{"trigger": "getBounds\tFinance method", "contents": "getBounds(${1:args})"} ,
		{"trigger": "getBudget\tFinance method", "contents": "getBudget(${1:args})"} ,
		{"trigger": "getCosts\tFinance method", "contents": "getCosts(${1:args})"} ,
		{"trigger": "getEquality\tFinance method", "contents": "getEquality(${1:args})"} ,
		{"trigger": "getGroupRatio\tFinance method", "contents": "getGroupRatio(${1:args})"} ,
		{"trigger": "getGroups\tFinance method", "contents": "getGroups(${1:args})"} ,
		{"trigger": "getInequality\tFinance method", "contents": "getInequality(${1:args})"} ,
		{"trigger": "getOneWayTurnover\tFinance method", "contents": "getOneWayTurnover(${1:args})"} ,
		{"trigger": "getScenarios\tFinance method", "contents": "getScenarios(${1:args})"} ,
		{"trigger": "getnameidx\tFinance method", "contents": "getnameidx(${1:args})"} ,
		{"trigger": "heston\tFinance method", "contents": "heston(${1:args})"} ,
		{"trigger": "hhigh\tFinance method", "contents": "hhigh(${1:args})"} ,
		{"trigger": "highlow\tFinance method", "contents": "highlow(${1:args})"} ,
		{"trigger": "holdings2weights\tFinance method", "contents": "holdings2weights(${1:args})"} ,
		{"trigger": "holidays\tFinance method", "contents": "holidays(${1:args})"} ,
		{"trigger": "hwv\tFinance method", "contents": "hwv(${1:args})"} ,
		{"trigger": "inforatio\tFinance method", "contents": "inforatio(${1:args})"} ,
		{"trigger": "interpolate\tFinance method", "contents": "interpolate(${1:args})"} ,
		{"trigger": "irr\tFinance method", "contents": "irr(${1:args})"} ,
		{"trigger": "isbusday\tFinance method", "contents": "isbusday(${1:args})"} ,
		{"trigger": "iscompatible\tFinance method", "contents": "iscompatible(${1:args})"} ,
		{"trigger": "kagi\tFinance method", "contents": "kagi(${1:args})"} ,
		{"trigger": "lagts\tFinance method", "contents": "lagts(${1:args})"} ,
		{"trigger": "lbusdate\tFinance method", "contents": "lbusdate(${1:args})"} ,
		{"trigger": "leadts\tFinance method", "contents": "leadts(${1:args})"} ,
		{"trigger": "lifetableconv\tFinance method", "contents": "lifetableconv(${1:args})"} ,
		{"trigger": "lifetablefit\tFinance method", "contents": "lifetablefit(${1:args})"} ,
		{"trigger": "lifetablegen\tFinance method", "contents": "lifetablegen(${1:args})"} ,
		{"trigger": "linebreak\tFinance method", "contents": "linebreak(${1:args})"} ,
		{"trigger": "llow\tFinance method", "contents": "llow(${1:args})"} ,
		{"trigger": "lpm\tFinance method", "contents": "lpm(${1:args})"} ,
		{"trigger": "lweekdate\tFinance method", "contents": "lweekdate(${1:args})"} ,
		{"trigger": "m2xdate\tFinance method", "contents": "m2xdate(${1:args})"} ,
		{"trigger": "macd\tFinance method", "contents": "macd(${1:args})"} ,
		{"trigger": "maxdrawdown\tFinance method", "contents": "maxdrawdown(${1:args})"} ,
		{"trigger": "medprice\tFinance method", "contents": "medprice(${1:args})"} ,
		{"trigger": "merge\tFinance method", "contents": "merge(${1:args})"} ,
		{"trigger": "mirr\tFinance method", "contents": "mirr(${1:args})"} ,
		{"trigger": "modifybins\tFinance method", "contents": "modifybins(${1:args})"} ,
		{"trigger": "modifypredictor\tFinance method", "contents": "modifypredictor(${1:args})"} ,
		{"trigger": "months\tFinance method", "contents": "months(${1:args})"} ,
		{"trigger": "movavg\tFinance method", "contents": "movavg(${1:args})"} ,
		{"trigger": "mvnrfish\tFinance method", "contents": "mvnrfish(${1:args})"} ,
		{"trigger": "mvnrmle\tFinance method", "contents": "mvnrmle(${1:args})"} ,
		{"trigger": "mvnrobj\tFinance method", "contents": "mvnrobj(${1:args})"} ,
		{"trigger": "mvnrstd\tFinance method", "contents": "mvnrstd(${1:args})"} ,
		{"trigger": "nancov\tFinance method", "contents": "nancov(${1:args})"} ,
		{"trigger": "nanmax\tFinance method", "contents": "nanmax(${1:args})"} ,
		{"trigger": "nanmean\tFinance method", "contents": "nanmean(${1:args})"} ,
		{"trigger": "nanmedian\tFinance method", "contents": "nanmedian(${1:args})"} ,
		{"trigger": "nanmin\tFinance method", "contents": "nanmin(${1:args})"} ,
		{"trigger": "nanstd\tFinance method", "contents": "nanstd(${1:args})"} ,
		{"trigger": "nansum\tFinance method", "contents": "nansum(${1:args})"} ,
		{"trigger": "nanvar\tFinance method", "contents": "nanvar(${1:args})"} ,
		{"trigger": "negvolidx\tFinance method", "contents": "negvolidx(${1:args})"} ,
		{"trigger": "nomrr\tFinance method", "contents": "nomrr(${1:args})"} ,
		{"trigger": "nweekdate\tFinance method", "contents": "nweekdate(${1:args})"} ,
		{"trigger": "nyseclosures\tFinance method", "contents": "nyseclosures(${1:args})"} ,
		{"trigger": "onbalvol\tFinance method", "contents": "onbalvol(${1:args})"} ,
		{"trigger": "opprofit\tFinance method", "contents": "opprofit(${1:args})"} ,
		{"trigger": "payadv\tFinance method", "contents": "payadv(${1:args})"} ,
		{"trigger": "payodd\tFinance method", "contents": "payodd(${1:args})"} ,
		{"trigger": "payper\tFinance method", "contents": "payper(${1:args})"} ,
		{"trigger": "payuni\tFinance method", "contents": "payuni(${1:args})"} ,
		{"trigger": "pcalims\tFinance method", "contents": "pcalims(${1:args})"} ,
		{"trigger": "pcgcomp\tFinance method", "contents": "pcgcomp(${1:args})"} ,
		{"trigger": "pcglims\tFinance method", "contents": "pcglims(${1:args})"} ,
		{"trigger": "pcpval\tFinance method", "contents": "pcpval(${1:args})"} ,
		{"trigger": "peravg\tFinance method", "contents": "peravg(${1:args})"} ,
		{"trigger": "periodicreturns\tFinance method", "contents": "periodicreturns(${1:args})"} ,
		{"trigger": "plotFrontier\tFinance method", "contents": "plotFrontier(${1:args})"} ,
		{"trigger": "plotbins\tFinance method", "contents": "plotbins(${1:args})"} ,
		{"trigger": "pointfig\tFinance method", "contents": "pointfig(${1:args})"} ,
		{"trigger": "portalloc\tFinance method", "contents": "portalloc(${1:args})"} ,
		{"trigger": "portalpha\tFinance method", "contents": "portalpha(${1:args})"} ,
		{"trigger": "portcons\tFinance method", "contents": "portcons(${1:args})"} ,
		{"trigger": "portopt\tFinance method", "contents": "portopt(${1:args})"} ,
		{"trigger": "portrand\tFinance method", "contents": "portrand(${1:args})"} ,
		{"trigger": "portror\tFinance method", "contents": "portror(${1:args})"} ,
		{"trigger": "portsim\tFinance method", "contents": "portsim(${1:args})"} ,
		{"trigger": "portstats\tFinance method", "contents": "portstats(${1:args})"} ,
		{"trigger": "portvar\tFinance method", "contents": "portvar(${1:args})"} ,
		{"trigger": "portvrisk\tFinance method", "contents": "portvrisk(${1:args})"} ,
		{"trigger": "posvolidx\tFinance method", "contents": "posvolidx(${1:args})"} ,
		{"trigger": "prbyzero\tFinance method", "contents": "prbyzero(${1:args})"} ,
		{"trigger": "prcroc\tFinance method", "contents": "prcroc(${1:args})"} ,
		{"trigger": "prdisc\tFinance method", "contents": "prdisc(${1:args})"} ,
		{"trigger": "predictorinfo\tFinance method", "contents": "predictorinfo(${1:args})"} ,
		{"trigger": "priceandvol\tFinance method", "contents": "priceandvol(${1:args})"} ,
		{"trigger": "prmat\tFinance method", "contents": "prmat(${1:args})"} ,
		{"trigger": "probdefault\tFinance method", "contents": "probdefault(${1:args})"} ,
		{"trigger": "prtbill\tFinance method", "contents": "prtbill(${1:args})"} ,
		{"trigger": "pvfix\tFinance method", "contents": "pvfix(${1:args})"} ,
		{"trigger": "pvtrend\tFinance method", "contents": "pvtrend(${1:args})"} ,
		{"trigger": "pvvar\tFinance method", "contents": "pvvar(${1:args})"} ,
		{"trigger": "pyld2zero\tFinance method", "contents": "pyld2zero(${1:args})"} ,
		{"trigger": "renko\tFinance method", "contents": "renko(${1:args})"} ,
		{"trigger": "resamplets\tFinance method", "contents": "resamplets(${1:args})"} ,
		{"trigger": "ret2tick\tFinance method", "contents": "ret2tick(${1:args})"} ,
		{"trigger": "rsindex\tFinance method", "contents": "rsindex(${1:args})"} ,
		{"trigger": "score\tFinance method", "contents": "score(${1:args})"} ,
		{"trigger": "sde\tFinance method", "contents": "sde(${1:args})"} ,
		{"trigger": "sdeddo\tFinance method", "contents": "sdeddo(${1:args})"} ,
		{"trigger": "sdeld\tFinance method", "contents": "sdeld(${1:args})"} ,
		{"trigger": "sdemrd\tFinance method", "contents": "sdemrd(${1:args})"} ,
		{"trigger": "selectreturn\tFinance method", "contents": "selectreturn(${1:args})"} ,
		{"trigger": "setAssetList\tFinance method", "contents": "setAssetList(${1:args})"} ,
		{"trigger": "setAssetMoments\tFinance method", "contents": "setAssetMoments(${1:args})"} ,
		{"trigger": "setBounds\tFinance method", "contents": "setBounds(${1:args})"} ,
		{"trigger": "setBudget\tFinance method", "contents": "setBudget(${1:args})"} ,
		{"trigger": "setCosts\tFinance method", "contents": "setCosts(${1:args})"} ,
		{"trigger": "setDefaultConstraints\tFinance method", "contents": "setDefaultConstraints(${1:args})"} ,
		{"trigger": "setEquality\tFinance method", "contents": "setEquality(${1:args})"} ,
		{"trigger": "setGroupRatio\tFinance method", "contents": "setGroupRatio(${1:args})"} ,
		{"trigger": "setGroups\tFinance method", "contents": "setGroups(${1:args})"} ,
		{"trigger": "setInequality\tFinance method", "contents": "setInequality(${1:args})"} ,
		{"trigger": "setInitPort\tFinance method", "contents": "setInitPort(${1:args})"} ,
		{"trigger": "setOneWayTurnover\tFinance method", "contents": "setOneWayTurnover(${1:args})"} ,
		{"trigger": "setProbabilityLevel\tFinance method", "contents": "setProbabilityLevel(${1:args})"} ,
		{"trigger": "setScenarios\tFinance method", "contents": "setScenarios(${1:args})"} ,
		{"trigger": "setSolver\tFinance method", "contents": "setSolver(${1:args})"} ,
		{"trigger": "setTrackingError\tFinance method", "contents": "setTrackingError(${1:args})"} ,
		{"trigger": "setTrackingPort\tFinance method", "contents": "setTrackingPort(${1:args})"} ,
		{"trigger": "setTurnover\tFinance method", "contents": "setTurnover(${1:args})"} ,
		{"trigger": "setmodel\tFinance method", "contents": "setmodel(${1:args})"} ,
		{"trigger": "sharpe\tFinance method", "contents": "sharpe(${1:args})"} ,
		{"trigger": "simByEuler\tFinance method", "contents": "simByEuler(${1:args})"} ,
		{"trigger": "simBySolution\tFinance method", "contents": "simBySolution(${1:args})"} ,
		{"trigger": "simulateNormalScenariosByData\tFinance method", "contents": "simulateNormalScenariosByData(${1:args})"} ,
		{"trigger": "simulateNormalScenariosByMoments\tFinance method", "contents": "simulateNormalScenariosByMoments(${1:args})"} ,
		{"trigger": "smoothts\tFinance method", "contents": "smoothts(${1:args})"} ,
		{"trigger": "sortfts\tFinance method", "contents": "sortfts(${1:args})"} ,
		{"trigger": "spctkd\tFinance method", "contents": "spctkd(${1:args})"} ,
		{"trigger": "stochosc\tFinance method", "contents": "stochosc(${1:args})"} ,
		{"trigger": "targetreturn\tFinance method", "contents": "targetreturn(${1:args})"} ,
		{"trigger": "taxedrr\tFinance method", "contents": "taxedrr(${1:args})"} ,
		{"trigger": "tbilldisc2yield\tFinance method", "contents": "tbilldisc2yield(${1:args})"} ,
		{"trigger": "tbillprice\tFinance method", "contents": "tbillprice(${1:args})"} ,
		{"trigger": "tbillrepo\tFinance method", "contents": "tbillrepo(${1:args})"} ,
		{"trigger": "tbillval01\tFinance method", "contents": "tbillval01(${1:args})"} ,
		{"trigger": "tbillyield\tFinance method", "contents": "tbillyield(${1:args})"} ,
		{"trigger": "tbillyield2disc\tFinance method", "contents": "tbillyield2disc(${1:args})"} ,
		{"trigger": "tbl2bond\tFinance method", "contents": "tbl2bond(${1:args})"} ,
		{"trigger": "thirdwednesday\tFinance method", "contents": "thirdwednesday(${1:args})"} ,
		{"trigger": "thirtytwo2dec\tFinance method", "contents": "thirtytwo2dec(${1:args})"} ,
		{"trigger": "tick2ret\tFinance method", "contents": "tick2ret(${1:args})"} ,
		{"trigger": "toannual\tFinance method", "contents": "toannual(${1:args})"} ,
		{"trigger": "todaily\tFinance method", "contents": "todaily(${1:args})"} ,
		{"trigger": "today\tFinance method", "contents": "today(${1:args})"} ,
		{"trigger": "todecimal\tFinance method", "contents": "todecimal(${1:args})"} ,
		{"trigger": "tomonthly\tFinance method", "contents": "tomonthly(${1:args})"} ,
		{"trigger": "toquarterly\tFinance method", "contents": "toquarterly(${1:args})"} ,
		{"trigger": "toquoted\tFinance method", "contents": "toquoted(${1:args})"} ,
		{"trigger": "tosemi\tFinance method", "contents": "tosemi(${1:args})"} ,
		{"trigger": "totalreturnprice\tFinance method", "contents": "totalreturnprice(${1:args})"} ,
		{"trigger": "toweekly\tFinance method", "contents": "toweekly(${1:args})"} ,
		{"trigger": "tr2bonds\tFinance method", "contents": "tr2bonds(${1:args})"} ,
		{"trigger": "transprob\tFinance method", "contents": "transprob(${1:args})"} ,
		{"trigger": "transprobbytotals\tFinance method", "contents": "transprobbytotals(${1:args})"} ,
		{"trigger": "transprobfromthresholds\tFinance method", "contents": "transprobfromthresholds(${1:args})"} ,
		{"trigger": "transprobgrouptotals\tFinance method", "contents": "transprobgrouptotals(${1:args})"} ,
		{"trigger": "transprobprep\tFinance method", "contents": "transprobprep(${1:args})"} ,
		{"trigger": "transprobtothresholds\tFinance method", "contents": "transprobtothresholds(${1:args})"} ,
		{"trigger": "ts2func\tFinance method", "contents": "ts2func(${1:args})"} ,
		{"trigger": "tsaccel\tFinance method", "contents": "tsaccel(${1:args})"} ,
		{"trigger": "tsmom\tFinance method", "contents": "tsmom(${1:args})"} ,
		{"trigger": "tsmovavg\tFinance method", "contents": "tsmovavg(${1:args})"} ,
		{"trigger": "typprice\tFinance method", "contents": "typprice(${1:args})"} ,
		{"trigger": "ugarch\tFinance method", "contents": "ugarch(${1:args})"} ,
		{"trigger": "ugarchllf\tFinance method", "contents": "ugarchllf(${1:args})"} ,
		{"trigger": "ugarchpred\tFinance method", "contents": "ugarchpred(${1:args})"} ,
		{"trigger": "ugarchsim\tFinance method", "contents": "ugarchsim(${1:args})"} ,
		{"trigger": "uicalendar\tFinance method", "contents": "uicalendar(${1:args})"} ,
		{"trigger": "validatemodel\tFinance method", "contents": "validatemodel(${1:args})"} ,
		{"trigger": "volarea\tFinance method", "contents": "volarea(${1:args})"} ,
		{"trigger": "volroc\tFinance method", "contents": "volroc(${1:args})"} ,
		{"trigger": "wclose\tFinance method", "contents": "wclose(${1:args})"} ,
		{"trigger": "weeknum\tFinance method", "contents": "weeknum(${1:args})"} ,
		{"trigger": "weights2holdings\tFinance method", "contents": "weights2holdings(${1:args})"} ,
		{"trigger": "willad\tFinance method", "contents": "willad(${1:args})"} ,
		{"trigger": "willpctr\tFinance method", "contents": "willpctr(${1:args})"} ,
		{"trigger": "wrkdydif\tFinance method", "contents": "wrkdydif(${1:args})"} ,
		{"trigger": "x2mdate\tFinance method", "contents": "x2mdate(${1:args})"} ,
		{"trigger": "xirr\tFinance method", "contents": "xirr(${1:args})"} ,
		{"trigger": "yeardays\tFinance method", "contents": "yeardays(${1:args})"} ,
		{"trigger": "yearfrac\tFinance method", "contents": "yearfrac(${1:args})"} ,
		{"trigger": "ylddisc\tFinance method", "contents": "ylddisc(${1:args})"} ,
		{"trigger": "yldmat\tFinance method", "contents": "yldmat(${1:args})"} ,
		{"trigger": "yldtbill\tFinance method", "contents": "yldtbill(${1:args})"} ,
		{"trigger": "zbtprice\tFinance method", "contents": "zbtprice(${1:args})"} ,
		{"trigger": "zbtyield\tFinance method", "contents": "zbtyield(${1:args})"} ,
		{"trigger": "zero2disc\tFinance method", "contents": "zero2disc(${1:args})"} ,
		{"trigger": "zero2fwd\tFinance method", "contents": "zero2fwd(${1:args})"} ,
		{"trigger": "zero2pyld\tFinance method", "contents": "zero2pyld(${1:args})"} ,

	]
}