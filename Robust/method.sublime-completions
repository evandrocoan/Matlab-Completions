{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "TuningGoal.ControllerPoles\tRobust method", "contents": "TuningGoal.ControllerPoles(${1:args})"} ,
		{"trigger": "TuningGoal.Gain\tRobust method", "contents": "TuningGoal.Gain(${1:args})"} ,
		{"trigger": "TuningGoal.LQG\tRobust method", "contents": "TuningGoal.LQG(${1:args})"} ,
		{"trigger": "TuningGoal.LoopShape\tRobust method", "contents": "TuningGoal.LoopShape(${1:args})"} ,
		{"trigger": "TuningGoal.Margins\tRobust method", "contents": "TuningGoal.Margins(${1:args})"} ,
		{"trigger": "TuningGoal.MaxLoopGain\tRobust method", "contents": "TuningGoal.MaxLoopGain(${1:args})"} ,
		{"trigger": "TuningGoal.MinLoopGain\tRobust method", "contents": "TuningGoal.MinLoopGain(${1:args})"} ,
		{"trigger": "TuningGoal.Overshoot\tRobust method", "contents": "TuningGoal.Overshoot(${1:args})"} ,
		{"trigger": "TuningGoal.Poles\tRobust method", "contents": "TuningGoal.Poles(${1:args})"} ,
		{"trigger": "TuningGoal.Rejection\tRobust method", "contents": "TuningGoal.Rejection(${1:args})"} ,
		{"trigger": "TuningGoal.Sensitivity\tRobust method", "contents": "TuningGoal.Sensitivity(${1:args})"} ,
		{"trigger": "TuningGoal.StepRejection\tRobust method", "contents": "TuningGoal.StepRejection(${1:args})"} ,
		{"trigger": "TuningGoal.StepTracking\tRobust method", "contents": "TuningGoal.StepTracking(${1:args})"} ,
		{"trigger": "TuningGoal.Tracking\tRobust method", "contents": "TuningGoal.Tracking(${1:args})"} ,
		{"trigger": "TuningGoal.Transient\tRobust method", "contents": "TuningGoal.Transient(${1:args})"} ,
		{"trigger": "TuningGoal.Variance\tRobust method", "contents": "TuningGoal.Variance(${1:args})"} ,
		{"trigger": "TuningGoal.WeightedGain\tRobust method", "contents": "TuningGoal.WeightedGain(${1:args})"} ,
		{"trigger": "TuningGoal.WeightedVariance\tRobust method", "contents": "TuningGoal.WeightedVariance(${1:args})"} ,
		{"trigger": "actual2normalized\tRobust method", "contents": "actual2normalized(${1:args})"} ,
		{"trigger": "addBlock\tRobust method", "contents": "addBlock(${1:args})"} ,
		{"trigger": "addOpening\tRobust method", "contents": "addOpening(${1:args})"} ,
		{"trigger": "addPoint\tRobust method", "contents": "addPoint(${1:args})"} ,
		{"trigger": "aff2pol\tRobust method", "contents": "aff2pol(${1:args})"} ,
		{"trigger": "augw\tRobust method", "contents": "augw(${1:args})"} ,
		{"trigger": "balancmr\tRobust method", "contents": "balancmr(${1:args})"} ,
		{"trigger": "bstmr\tRobust method", "contents": "bstmr(${1:args})"} ,
		{"trigger": "cmsclsyn\tRobust method", "contents": "cmsclsyn(${1:args})"} ,
		{"trigger": "complexify\tRobust method", "contents": "complexify(${1:args})"} ,
		{"trigger": "controlSystemTuner\tRobust method", "contents": "controlSystemTuner(${1:args})"} ,
		{"trigger": "cpmargin\tRobust method", "contents": "cpmargin(${1:args})"} ,
		{"trigger": "dcgainmr\tRobust method", "contents": "dcgainmr(${1:args})"} ,
		{"trigger": "dec2mat\tRobust method", "contents": "dec2mat(${1:args})"} ,
		{"trigger": "decay\tRobust method", "contents": "decay(${1:args})"} ,
		{"trigger": "decinfo\tRobust method", "contents": "decinfo(${1:args})"} ,
		{"trigger": "decnbr\tRobust method", "contents": "decnbr(${1:args})"} ,
		{"trigger": "defcx\tRobust method", "contents": "defcx(${1:args})"} ,
		{"trigger": "dellmi\tRobust method", "contents": "dellmi(${1:args})"} ,
		{"trigger": "delmvar\tRobust method", "contents": "delmvar(${1:args})"} ,
		{"trigger": "dksyn\tRobust method", "contents": "dksyn(${1:args})"} ,
		{"trigger": "dksynOptions\tRobust method", "contents": "dksynOptions(${1:args})"} ,
		{"trigger": "dmplot\tRobust method", "contents": "dmplot(${1:args})"} ,
		{"trigger": "drawmag\tRobust method", "contents": "drawmag(${1:args})"} ,
		{"trigger": "evalSpec\tRobust method", "contents": "evalSpec(${1:args})"} ,
		{"trigger": "evalSurf\tRobust method", "contents": "evalSurf(${1:args})"} ,
		{"trigger": "evallmi\tRobust method", "contents": "evallmi(${1:args})"} ,
		{"trigger": "feasp\tRobust method", "contents": "feasp(${1:args})"} ,
		{"trigger": "fitfrd\tRobust method", "contents": "fitfrd(${1:args})"} ,
		{"trigger": "fitmagfrd\tRobust method", "contents": "fitmagfrd(${1:args})"} ,
		{"trigger": "fourierBasis\tRobust method", "contents": "fourierBasis(${1:args})"} ,
		{"trigger": "gapmetric\tRobust method", "contents": "gapmetric(${1:args})"} ,
		{"trigger": "genphase\tRobust method", "contents": "genphase(${1:args})"} ,
		{"trigger": "getBlockParam\tRobust method", "contents": "getBlockParam(${1:args})"} ,
		{"trigger": "getBlockRateConversion\tRobust method", "contents": "getBlockRateConversion(${1:args})"} ,
		{"trigger": "getData\tRobust method", "contents": "getData(${1:args})"} ,
		{"trigger": "getNominal\tRobust method", "contents": "getNominal(${1:args})"} ,
		{"trigger": "getOpenings\tRobust method", "contents": "getOpenings(${1:args})"} ,
		{"trigger": "getlmis\tRobust method", "contents": "getlmis(${1:args})"} ,
		{"trigger": "gevp\tRobust method", "contents": "gevp(${1:args})"} ,
		{"trigger": "gridureal\tRobust method", "contents": "gridureal(${1:args})"} ,
		{"trigger": "h2hinfsyn\tRobust method", "contents": "h2hinfsyn(${1:args})"} ,
		{"trigger": "h2syn\tRobust method", "contents": "h2syn(${1:args})"} ,
		{"trigger": "hankelmr\tRobust method", "contents": "hankelmr(${1:args})"} ,
		{"trigger": "hankelsv\tRobust method", "contents": "hankelsv(${1:args})"} ,
		{"trigger": "hinfgs\tRobust method", "contents": "hinfgs(${1:args})"} ,
		{"trigger": "hinfnorm\tRobust method", "contents": "hinfnorm(${1:args})"} ,
		{"trigger": "hinfstruct\tRobust method", "contents": "hinfstruct(${1:args})"} ,
		{"trigger": "hinfstructOptions\tRobust method", "contents": "hinfstructOptions(${1:args})"} ,
		{"trigger": "hinfsyn\tRobust method", "contents": "hinfsyn(${1:args})"} ,
		{"trigger": "icomplexify\tRobust method", "contents": "icomplexify(${1:args})"} ,
		{"trigger": "imp2ss\tRobust method", "contents": "imp2ss(${1:args})"} ,
		{"trigger": "ispsys\tRobust method", "contents": "ispsys(${1:args})"} ,
		{"trigger": "isuncertain\tRobust method", "contents": "isuncertain(${1:args})"} ,
		{"trigger": "lftdata\tRobust method", "contents": "lftdata(${1:args})"} ,
		{"trigger": "lmiedit\tRobust method", "contents": "lmiedit(${1:args})"} ,
		{"trigger": "lmiinfo\tRobust method", "contents": "lmiinfo(${1:args})"} ,
		{"trigger": "lminbr\tRobust method", "contents": "lminbr(${1:args})"} ,
		{"trigger": "lmireg\tRobust method", "contents": "lmireg(${1:args})"} ,
		{"trigger": "lmiterm\tRobust method", "contents": "lmiterm(${1:args})"} ,
		{"trigger": "lmivar\tRobust method", "contents": "lmivar(${1:args})"} ,
		{"trigger": "loopmargin\tRobust method", "contents": "loopmargin(${1:args})"} ,
		{"trigger": "loopsens\tRobust method", "contents": "loopsens(${1:args})"} ,
		{"trigger": "loopsyn\tRobust method", "contents": "loopsyn(${1:args})"} ,
		{"trigger": "looptune\tRobust method", "contents": "looptune(${1:args})"} ,
		{"trigger": "looptuneOptions\tRobust method", "contents": "looptuneOptions(${1:args})"} ,
		{"trigger": "looptuneSetup\tRobust method", "contents": "looptuneSetup(${1:args})"} ,
		{"trigger": "loopview\tRobust method", "contents": "loopview(${1:args})"} ,
		{"trigger": "ltiarray2uss\tRobust method", "contents": "ltiarray2uss(${1:args})"} ,
		{"trigger": "ltrsyn\tRobust method", "contents": "ltrsyn(${1:args})"} ,
		{"trigger": "makeweight\tRobust method", "contents": "makeweight(${1:args})"} ,
		{"trigger": "mat2dec\tRobust method", "contents": "mat2dec(${1:args})"} ,
		{"trigger": "matnbr\tRobust method", "contents": "matnbr(${1:args})"} ,
		{"trigger": "mincx\tRobust method", "contents": "mincx(${1:args})"} ,
		{"trigger": "mixsyn\tRobust method", "contents": "mixsyn(${1:args})"} ,
		{"trigger": "mkfilter\tRobust method", "contents": "mkfilter(${1:args})"} ,
		{"trigger": "modreal\tRobust method", "contents": "modreal(${1:args})"} ,
		{"trigger": "msfsyn\tRobust method", "contents": "msfsyn(${1:args})"} ,
		{"trigger": "mussv\tRobust method", "contents": "mussv(${1:args})"} ,
		{"trigger": "mussvextract\tRobust method", "contents": "mussvextract(${1:args})"} ,
		{"trigger": "ncfmargin\tRobust method", "contents": "ncfmargin(${1:args})"} ,
		{"trigger": "ncfmr\tRobust method", "contents": "ncfmr(${1:args})"} ,
		{"trigger": "ncfsyn\tRobust method", "contents": "ncfsyn(${1:args})"} ,
		{"trigger": "ndBasis\tRobust method", "contents": "ndBasis(${1:args})"} ,
		{"trigger": "newlmi\tRobust method", "contents": "newlmi(${1:args})"} ,
		{"trigger": "normalized2actual\tRobust method", "contents": "normalized2actual(${1:args})"} ,
		{"trigger": "pdlstab\tRobust method", "contents": "pdlstab(${1:args})"} ,
		{"trigger": "pdsimul\tRobust method", "contents": "pdsimul(${1:args})"} ,
		{"trigger": "polyBasis\tRobust method", "contents": "polyBasis(${1:args})"} ,
		{"trigger": "polydec\tRobust method", "contents": "polydec(${1:args})"} ,
		{"trigger": "popov\tRobust method", "contents": "popov(${1:args})"} ,
		{"trigger": "psinfo\tRobust method", "contents": "psinfo(${1:args})"} ,
		{"trigger": "psys\tRobust method", "contents": "psys(${1:args})"} ,
		{"trigger": "pvec\tRobust method", "contents": "pvec(${1:args})"} ,
		{"trigger": "pvinfo\tRobust method", "contents": "pvinfo(${1:args})"} ,
		{"trigger": "quadperf\tRobust method", "contents": "quadperf(${1:args})"} ,
		{"trigger": "quadstab\tRobust method", "contents": "quadstab(${1:args})"} ,
		{"trigger": "randatom\tRobust method", "contents": "randatom(${1:args})"} ,
		{"trigger": "randumat\tRobust method", "contents": "randumat(${1:args})"} ,
		{"trigger": "randuss\tRobust method", "contents": "randuss(${1:args})"} ,
		{"trigger": "reduce\tRobust method", "contents": "reduce(${1:args})"} ,
		{"trigger": "removeAllOpenings\tRobust method", "contents": "removeAllOpenings(${1:args})"} ,
		{"trigger": "removeAllPoints\tRobust method", "contents": "removeAllPoints(${1:args})"} ,
		{"trigger": "removeBlock\tRobust method", "contents": "removeBlock(${1:args})"} ,
		{"trigger": "removeOpening\tRobust method", "contents": "removeOpening(${1:args})"} ,
		{"trigger": "removePoint\tRobust method", "contents": "removePoint(${1:args})"} ,
		{"trigger": "robopt\tRobust method", "contents": "robopt(${1:args})"} ,
		{"trigger": "robustperf\tRobust method", "contents": "robustperf(${1:args})"} ,
		{"trigger": "robustperfOptions\tRobust method", "contents": "robustperfOptions(${1:args})"} ,
		{"trigger": "robuststab\tRobust method", "contents": "robuststab(${1:args})"} ,
		{"trigger": "robuststabOptions\tRobust method", "contents": "robuststabOptions(${1:args})"} ,
		{"trigger": "schurmr\tRobust method", "contents": "schurmr(${1:args})"} ,
		{"trigger": "sdhinfnorm\tRobust method", "contents": "sdhinfnorm(${1:args})"} ,
		{"trigger": "sdhinfsyn\tRobust method", "contents": "sdhinfsyn(${1:args})"} ,
		{"trigger": "sdlsim\tRobust method", "contents": "sdlsim(${1:args})"} ,
		{"trigger": "setBlockParam\tRobust method", "contents": "setBlockParam(${1:args})"} ,
		{"trigger": "setBlockRateConversion\tRobust method", "contents": "setBlockRateConversion(${1:args})"} ,
		{"trigger": "setData\tRobust method", "contents": "setData(${1:args})"} ,
		{"trigger": "setlmis\tRobust method", "contents": "setlmis(${1:args})"} ,
		{"trigger": "setmvar\tRobust method", "contents": "setmvar(${1:args})"} ,
		{"trigger": "showlmi\tRobust method", "contents": "showlmi(${1:args})"} ,
		{"trigger": "slTuner\tRobust method", "contents": "slTuner(${1:args})"} ,
		{"trigger": "slowfast\tRobust method", "contents": "slowfast(${1:args})"} ,
		{"trigger": "systune\tRobust method", "contents": "systune(${1:args})"} ,
		{"trigger": "systuneOptions\tRobust method", "contents": "systuneOptions(${1:args})"} ,
		{"trigger": "tunableSurface\tRobust method", "contents": "tunableSurface(${1:args})"} ,
		{"trigger": "ucomplex\tRobust method", "contents": "ucomplex(${1:args})"} ,
		{"trigger": "ucomplexm\tRobust method", "contents": "ucomplexm(${1:args})"} ,
		{"trigger": "ucover\tRobust method", "contents": "ucover(${1:args})"} ,
		{"trigger": "udyn\tRobust method", "contents": "udyn(${1:args})"} ,
		{"trigger": "ufind\tRobust method", "contents": "ufind(${1:args})"} ,
		{"trigger": "ufrd\tRobust method", "contents": "ufrd(${1:args})"} ,
		{"trigger": "ulinearize\tRobust method", "contents": "ulinearize(${1:args})"} ,
		{"trigger": "ultidyn\tRobust method", "contents": "ultidyn(${1:args})"} ,
		{"trigger": "umat\tRobust method", "contents": "umat(${1:args})"} ,
		{"trigger": "uplot\tRobust method", "contents": "uplot(${1:args})"} ,
		{"trigger": "ureal\tRobust method", "contents": "ureal(${1:args})"} ,
		{"trigger": "usample\tRobust method", "contents": "usample(${1:args})"} ,
		{"trigger": "usimfill\tRobust method", "contents": "usimfill(${1:args})"} ,
		{"trigger": "usiminfo\tRobust method", "contents": "usiminfo(${1:args})"} ,
		{"trigger": "usimsamp\tRobust method", "contents": "usimsamp(${1:args})"} ,
		{"trigger": "uss\tRobust method", "contents": "uss(${1:args})"} ,
		{"trigger": "usubs\tRobust method", "contents": "usubs(${1:args})"} ,
		{"trigger": "viewSpec\tRobust method", "contents": "viewSpec(${1:args})"} ,
		{"trigger": "viewSurf\tRobust method", "contents": "viewSurf(${1:args})"} ,
		{"trigger": "wcgain\tRobust method", "contents": "wcgain(${1:args})"} ,
		{"trigger": "wcgainOptions\tRobust method", "contents": "wcgainOptions(${1:args})"} ,
		{"trigger": "wcgainplot\tRobust method", "contents": "wcgainplot(${1:args})"} ,
		{"trigger": "wcgopt\tRobust method", "contents": "wcgopt(${1:args})"} ,
		{"trigger": "wcmargin\tRobust method", "contents": "wcmargin(${1:args})"} ,
		{"trigger": "wcmarginOptions\tRobust method", "contents": "wcmarginOptions(${1:args})"} ,
		{"trigger": "wcnorm\tRobust method", "contents": "wcnorm(${1:args})"} ,
		{"trigger": "wcsens\tRobust method", "contents": "wcsens(${1:args})"} ,
		{"trigger": "writeBlockValue\tRobust method", "contents": "writeBlockValue(${1:args})"} ,

	]
}