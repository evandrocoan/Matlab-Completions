{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "addlift\tWavelet method", "contents": "addlift(${1:args})"} ,
		{"trigger": "allnodes\tWavelet method", "contents": "allnodes(${1:args})"} ,
		{"trigger": "appcoef\tWavelet method", "contents": "appcoef(${1:args})"} ,
		{"trigger": "appcoef2\tWavelet method", "contents": "appcoef2(${1:args})"} ,
		{"trigger": "bestlevt\tWavelet method", "contents": "bestlevt(${1:args})"} ,
		{"trigger": "besttree\tWavelet method", "contents": "besttree(${1:args})"} ,
		{"trigger": "biorfilt\tWavelet method", "contents": "biorfilt(${1:args})"} ,
		{"trigger": "biorwavf\tWavelet method", "contents": "biorwavf(${1:args})"} ,
		{"trigger": "bswfun\tWavelet method", "contents": "bswfun(${1:args})"} ,
		{"trigger": "centfrq\tWavelet method", "contents": "centfrq(${1:args})"} ,
		{"trigger": "cfs2wpt\tWavelet method", "contents": "cfs2wpt(${1:args})"} ,
		{"trigger": "cgauwavf\tWavelet method", "contents": "cgauwavf(${1:args})"} ,
		{"trigger": "chgwdeccfs\tWavelet method", "contents": "chgwdeccfs(${1:args})"} ,
		{"trigger": "cmddenoise\tWavelet method", "contents": "cmddenoise(${1:args})"} ,
		{"trigger": "cmorwavf\tWavelet method", "contents": "cmorwavf(${1:args})"} ,
		{"trigger": "coifwavf\tWavelet method", "contents": "coifwavf(${1:args})"} ,
		{"trigger": "conofinf\tWavelet method", "contents": "conofinf(${1:args})"} ,
		{"trigger": "cwt\tWavelet method", "contents": "cwt(${1:args})"} ,
		{"trigger": "cwtext\tWavelet method", "contents": "cwtext(${1:args})"} ,
		{"trigger": "cwtft\tWavelet method", "contents": "cwtft(${1:args})"} ,
		{"trigger": "cwtft2\tWavelet method", "contents": "cwtft2(${1:args})"} ,
		{"trigger": "cwtftinfo\tWavelet method", "contents": "cwtftinfo(${1:args})"} ,
		{"trigger": "cwtftinfo2\tWavelet method", "contents": "cwtftinfo2(${1:args})"} ,
		{"trigger": "dbaux\tWavelet method", "contents": "dbaux(${1:args})"} ,
		{"trigger": "dbwavf\tWavelet method", "contents": "dbwavf(${1:args})"} ,
		{"trigger": "dddtree\tWavelet method", "contents": "dddtree(${1:args})"} ,
		{"trigger": "dddtree2\tWavelet method", "contents": "dddtree2(${1:args})"} ,
		{"trigger": "dddtreecfs\tWavelet method", "contents": "dddtreecfs(${1:args})"} ,
		{"trigger": "ddencmp\tWavelet method", "contents": "ddencmp(${1:args})"} ,
		{"trigger": "depo2ind\tWavelet method", "contents": "depo2ind(${1:args})"} ,
		{"trigger": "detcoef\tWavelet method", "contents": "detcoef(${1:args})"} ,
		{"trigger": "detcoef2\tWavelet method", "contents": "detcoef2(${1:args})"} ,
		{"trigger": "displs\tWavelet method", "contents": "displs(${1:args})"} ,
		{"trigger": "drawtree\tWavelet method", "contents": "drawtree(${1:args})"} ,
		{"trigger": "dtfilters\tWavelet method", "contents": "dtfilters(${1:args})"} ,
		{"trigger": "dtree\tWavelet method", "contents": "dtree(${1:args})"} ,
		{"trigger": "dwt\tWavelet method", "contents": "dwt(${1:args})"} ,
		{"trigger": "dwt2\tWavelet method", "contents": "dwt2(${1:args})"} ,
		{"trigger": "dwt3\tWavelet method", "contents": "dwt3(${1:args})"} ,
		{"trigger": "dwtmode\tWavelet method", "contents": "dwtmode(${1:args})"} ,
		{"trigger": "dyaddown\tWavelet method", "contents": "dyaddown(${1:args})"} ,
		{"trigger": "dyadup\tWavelet method", "contents": "dyadup(${1:args})"} ,
		{"trigger": "entrupd\tWavelet method", "contents": "entrupd(${1:args})"} ,
		{"trigger": "fbspwavf\tWavelet method", "contents": "fbspwavf(${1:args})"} ,
		{"trigger": "fejerkorovkin\tWavelet method", "contents": "fejerkorovkin(${1:args})"} ,
		{"trigger": "filt2ls\tWavelet method", "contents": "filt2ls(${1:args})"} ,
		{"trigger": "gauswavf\tWavelet method", "contents": "gauswavf(${1:args})"} ,
		{"trigger": "icwtft\tWavelet method", "contents": "icwtft(${1:args})"} ,
		{"trigger": "icwtlin\tWavelet method", "contents": "icwtlin(${1:args})"} ,
		{"trigger": "idddtree\tWavelet method", "contents": "idddtree(${1:args})"} ,
		{"trigger": "idddtree2\tWavelet method", "contents": "idddtree2(${1:args})"} ,
		{"trigger": "idwt\tWavelet method", "contents": "idwt(${1:args})"} ,
		{"trigger": "idwt2\tWavelet method", "contents": "idwt2(${1:args})"} ,
		{"trigger": "idwt3\tWavelet method", "contents": "idwt3(${1:args})"} ,
		{"trigger": "ilwt\tWavelet method", "contents": "ilwt(${1:args})"} ,
		{"trigger": "ilwt2\tWavelet method", "contents": "ilwt2(${1:args})"} ,
		{"trigger": "imodwt\tWavelet method", "contents": "imodwt(${1:args})"} ,
		{"trigger": "ind2depo\tWavelet method", "contents": "ind2depo(${1:args})"} ,
		{"trigger": "intwave\tWavelet method", "contents": "intwave(${1:args})"} ,
		{"trigger": "isnode\tWavelet method", "contents": "isnode(${1:args})"} ,
		{"trigger": "istnode\tWavelet method", "contents": "istnode(${1:args})"} ,
		{"trigger": "iswt\tWavelet method", "contents": "iswt(${1:args})"} ,
		{"trigger": "iswt2\tWavelet method", "contents": "iswt2(${1:args})"} ,
		{"trigger": "laurmat\tWavelet method", "contents": "laurmat(${1:args})"} ,
		{"trigger": "laurpoly\tWavelet method", "contents": "laurpoly(${1:args})"} ,
		{"trigger": "leaves\tWavelet method", "contents": "leaves(${1:args})"} ,
		{"trigger": "liftfilt\tWavelet method", "contents": "liftfilt(${1:args})"} ,
		{"trigger": "liftwave\tWavelet method", "contents": "liftwave(${1:args})"} ,
		{"trigger": "localmax\tWavelet method", "contents": "localmax(${1:args})"} ,
		{"trigger": "ls2filt\tWavelet method", "contents": "ls2filt(${1:args})"} ,
		{"trigger": "lsinfo\tWavelet method", "contents": "lsinfo(${1:args})"} ,
		{"trigger": "lwt\tWavelet method", "contents": "lwt(${1:args})"} ,
		{"trigger": "lwt2\tWavelet method", "contents": "lwt2(${1:args})"} ,
		{"trigger": "lwtcoef\tWavelet method", "contents": "lwtcoef(${1:args})"} ,
		{"trigger": "lwtcoef2\tWavelet method", "contents": "lwtcoef2(${1:args})"} ,
		{"trigger": "mdwtcluster\tWavelet method", "contents": "mdwtcluster(${1:args})"} ,
		{"trigger": "mdwtdec\tWavelet method", "contents": "mdwtdec(${1:args})"} ,
		{"trigger": "mdwtrec\tWavelet method", "contents": "mdwtrec(${1:args})"} ,
		{"trigger": "measerr\tWavelet method", "contents": "measerr(${1:args})"} ,
		{"trigger": "mexihat\tWavelet method", "contents": "mexihat(${1:args})"} ,
		{"trigger": "meyer\tWavelet method", "contents": "meyer(${1:args})"} ,
		{"trigger": "meyeraux\tWavelet method", "contents": "meyeraux(${1:args})"} ,
		{"trigger": "modwt\tWavelet method", "contents": "modwt(${1:args})"} ,
		{"trigger": "modwtcorr\tWavelet method", "contents": "modwtcorr(${1:args})"} ,
		{"trigger": "modwtmra\tWavelet method", "contents": "modwtmra(${1:args})"} ,
		{"trigger": "modwtvar\tWavelet method", "contents": "modwtvar(${1:args})"} ,
		{"trigger": "modwtxcorr\tWavelet method", "contents": "modwtxcorr(${1:args})"} ,
		{"trigger": "morlet\tWavelet method", "contents": "morlet(${1:args})"} ,
		{"trigger": "mswcmp\tWavelet method", "contents": "mswcmp(${1:args})"} ,
		{"trigger": "mswcmpscr\tWavelet method", "contents": "mswcmpscr(${1:args})"} ,
		{"trigger": "mswcmptp\tWavelet method", "contents": "mswcmptp(${1:args})"} ,
		{"trigger": "mswden\tWavelet method", "contents": "mswden(${1:args})"} ,
		{"trigger": "mswthresh\tWavelet method", "contents": "mswthresh(${1:args})"} ,
		{"trigger": "nodeasc\tWavelet method", "contents": "nodeasc(${1:args})"} ,
		{"trigger": "nodedesc\tWavelet method", "contents": "nodedesc(${1:args})"} ,
		{"trigger": "nodejoin\tWavelet method", "contents": "nodejoin(${1:args})"} ,
		{"trigger": "nodepar\tWavelet method", "contents": "nodepar(${1:args})"} ,
		{"trigger": "nodesplt\tWavelet method", "contents": "nodesplt(${1:args})"} ,
		{"trigger": "noleaves\tWavelet method", "contents": "noleaves(${1:args})"} ,
		{"trigger": "ntnode\tWavelet method", "contents": "ntnode(${1:args})"} ,
		{"trigger": "ntree\tWavelet method", "contents": "ntree(${1:args})"} ,
		{"trigger": "orthfilt\tWavelet method", "contents": "orthfilt(${1:args})"} ,
		{"trigger": "otnodes\tWavelet method", "contents": "otnodes(${1:args})"} ,
		{"trigger": "pat2cwav\tWavelet method", "contents": "pat2cwav(${1:args})"} ,
		{"trigger": "plotdt\tWavelet method", "contents": "plotdt(${1:args})"} ,
		{"trigger": "qmf\tWavelet method", "contents": "qmf(${1:args})"} ,
		{"trigger": "rbiowavf\tWavelet method", "contents": "rbiowavf(${1:args})"} ,
		{"trigger": "readtree\tWavelet method", "contents": "readtree(${1:args})"} ,
		{"trigger": "scal2frq\tWavelet method", "contents": "scal2frq(${1:args})"} ,
		{"trigger": "shanwavf\tWavelet method", "contents": "shanwavf(${1:args})"} ,
		{"trigger": "swt\tWavelet method", "contents": "swt(${1:args})"} ,
		{"trigger": "swt2\tWavelet method", "contents": "swt2(${1:args})"} ,
		{"trigger": "symaux\tWavelet method", "contents": "symaux(${1:args})"} ,
		{"trigger": "symwavf\tWavelet method", "contents": "symwavf(${1:args})"} ,
		{"trigger": "thselect\tWavelet method", "contents": "thselect(${1:args})"} ,
		{"trigger": "tnodes\tWavelet method", "contents": "tnodes(${1:args})"} ,
		{"trigger": "treedpth\tWavelet method", "contents": "treedpth(${1:args})"} ,
		{"trigger": "treeord\tWavelet method", "contents": "treeord(${1:args})"} ,
		{"trigger": "upcoef\tWavelet method", "contents": "upcoef(${1:args})"} ,
		{"trigger": "upcoef2\tWavelet method", "contents": "upcoef2(${1:args})"} ,
		{"trigger": "upwlev\tWavelet method", "contents": "upwlev(${1:args})"} ,
		{"trigger": "upwlev2\tWavelet method", "contents": "upwlev2(${1:args})"} ,
		{"trigger": "wave2lp\tWavelet method", "contents": "wave2lp(${1:args})"} ,
		{"trigger": "wavedec\tWavelet method", "contents": "wavedec(${1:args})"} ,
		{"trigger": "wavedec2\tWavelet method", "contents": "wavedec2(${1:args})"} ,
		{"trigger": "wavedec3\tWavelet method", "contents": "wavedec3(${1:args})"} ,
		{"trigger": "wavefun\tWavelet method", "contents": "wavefun(${1:args})"} ,
		{"trigger": "wavefun2\tWavelet method", "contents": "wavefun2(${1:args})"} ,
		{"trigger": "waveinfo\tWavelet method", "contents": "waveinfo(${1:args})"} ,
		{"trigger": "waveletfamilies\tWavelet method", "contents": "waveletfamilies(${1:args})"} ,
		{"trigger": "wavemenu\tWavelet method", "contents": "wavemenu(${1:args})"} ,
		{"trigger": "wavemngr\tWavelet method", "contents": "wavemngr(${1:args})"} ,
		{"trigger": "wavenames\tWavelet method", "contents": "wavenames(${1:args})"} ,
		{"trigger": "waverec\tWavelet method", "contents": "waverec(${1:args})"} ,
		{"trigger": "waverec2\tWavelet method", "contents": "waverec2(${1:args})"} ,
		{"trigger": "waverec3\tWavelet method", "contents": "waverec3(${1:args})"} ,
		{"trigger": "wavsupport\tWavelet method", "contents": "wavsupport(${1:args})"} ,
		{"trigger": "wbmpen\tWavelet method", "contents": "wbmpen(${1:args})"} ,
		{"trigger": "wcodemat\tWavelet method", "contents": "wcodemat(${1:args})"} ,
		{"trigger": "wcoher\tWavelet method", "contents": "wcoher(${1:args})"} ,
		{"trigger": "wcompress\tWavelet method", "contents": "wcompress(${1:args})"} ,
		{"trigger": "wdcbm\tWavelet method", "contents": "wdcbm(${1:args})"} ,
		{"trigger": "wdcbm2\tWavelet method", "contents": "wdcbm2(${1:args})"} ,
		{"trigger": "wdecenergy\tWavelet method", "contents": "wdecenergy(${1:args})"} ,
		{"trigger": "wden\tWavelet method", "contents": "wden(${1:args})"} ,
		{"trigger": "wdencmp\tWavelet method", "contents": "wdencmp(${1:args})"} ,
		{"trigger": "wenergy\tWavelet method", "contents": "wenergy(${1:args})"} ,
		{"trigger": "wenergy2\tWavelet method", "contents": "wenergy2(${1:args})"} ,
		{"trigger": "wentropy\tWavelet method", "contents": "wentropy(${1:args})"} ,
		{"trigger": "wextend\tWavelet method", "contents": "wextend(${1:args})"} ,
		{"trigger": "wfbm\tWavelet method", "contents": "wfbm(${1:args})"} ,
		{"trigger": "wfbmesti\tWavelet method", "contents": "wfbmesti(${1:args})"} ,
		{"trigger": "wfilters\tWavelet method", "contents": "wfilters(${1:args})"} ,
		{"trigger": "wfusimg\tWavelet method", "contents": "wfusimg(${1:args})"} ,
		{"trigger": "wfusmat\tWavelet method", "contents": "wfusmat(${1:args})"} ,
		{"trigger": "wkeep\tWavelet method", "contents": "wkeep(${1:args})"} ,
		{"trigger": "wmaxlev\tWavelet method", "contents": "wmaxlev(${1:args})"} ,
		{"trigger": "wmpalg\tWavelet method", "contents": "wmpalg(${1:args})"} ,
		{"trigger": "wmpdictionary\tWavelet method", "contents": "wmpdictionary(${1:args})"} ,
		{"trigger": "wmspca\tWavelet method", "contents": "wmspca(${1:args})"} ,
		{"trigger": "wmulden\tWavelet method", "contents": "wmulden(${1:args})"} ,
		{"trigger": "wnoise\tWavelet method", "contents": "wnoise(${1:args})"} ,
		{"trigger": "wnoisest\tWavelet method", "contents": "wnoisest(${1:args})"} ,
		{"trigger": "wp2wtree\tWavelet method", "contents": "wp2wtree(${1:args})"} ,
		{"trigger": "wpbmpen\tWavelet method", "contents": "wpbmpen(${1:args})"} ,
		{"trigger": "wpcoef\tWavelet method", "contents": "wpcoef(${1:args})"} ,
		{"trigger": "wpcutree\tWavelet method", "contents": "wpcutree(${1:args})"} ,
		{"trigger": "wpdec\tWavelet method", "contents": "wpdec(${1:args})"} ,
		{"trigger": "wpdec2\tWavelet method", "contents": "wpdec2(${1:args})"} ,
		{"trigger": "wpdencmp\tWavelet method", "contents": "wpdencmp(${1:args})"} ,
		{"trigger": "wpfun\tWavelet method", "contents": "wpfun(${1:args})"} ,
		{"trigger": "wpjoin\tWavelet method", "contents": "wpjoin(${1:args})"} ,
		{"trigger": "wprcoef\tWavelet method", "contents": "wprcoef(${1:args})"} ,
		{"trigger": "wprec\tWavelet method", "contents": "wprec(${1:args})"} ,
		{"trigger": "wprec2\tWavelet method", "contents": "wprec2(${1:args})"} ,
		{"trigger": "wpspectrum\tWavelet method", "contents": "wpspectrum(${1:args})"} ,
		{"trigger": "wpsplt\tWavelet method", "contents": "wpsplt(${1:args})"} ,
		{"trigger": "wpthcoef\tWavelet method", "contents": "wpthcoef(${1:args})"} ,
		{"trigger": "wptree\tWavelet method", "contents": "wptree(${1:args})"} ,
		{"trigger": "wpviewcf\tWavelet method", "contents": "wpviewcf(${1:args})"} ,
		{"trigger": "wrcoef\tWavelet method", "contents": "wrcoef(${1:args})"} ,
		{"trigger": "wrcoef2\tWavelet method", "contents": "wrcoef2(${1:args})"} ,
		{"trigger": "wrev\tWavelet method", "contents": "wrev(${1:args})"} ,
		{"trigger": "wscalogram\tWavelet method", "contents": "wscalogram(${1:args})"} ,
		{"trigger": "wtbo\tWavelet method", "contents": "wtbo(${1:args})"} ,
		{"trigger": "wthcoef\tWavelet method", "contents": "wthcoef(${1:args})"} ,
		{"trigger": "wthcoef2\tWavelet method", "contents": "wthcoef2(${1:args})"} ,
		{"trigger": "wthresh\tWavelet method", "contents": "wthresh(${1:args})"} ,
		{"trigger": "wthrmngr\tWavelet method", "contents": "wthrmngr(${1:args})"} ,
		{"trigger": "wtreemgr\tWavelet method", "contents": "wtreemgr(${1:args})"} ,
		{"trigger": "wvarchg\tWavelet method", "contents": "wvarchg(${1:args})"} ,

	]
}