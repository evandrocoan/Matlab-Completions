{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "adaptmesh\tPDE method", "contents": "adaptmesh(${1:args})"} ,
		{"trigger": "applyBoundaryCondition\tPDE method", "contents": "applyBoundaryCondition(${1:args})"} ,
		{"trigger": "assema\tPDE method", "contents": "assema(${1:args})"} ,
		{"trigger": "assemb\tPDE method", "contents": "assemb(${1:args})"} ,
		{"trigger": "assempde\tPDE method", "contents": "assempde(${1:args})"} ,
		{"trigger": "createPDEResults\tPDE method", "contents": "createPDEResults(${1:args})"} ,
		{"trigger": "createpde\tPDE method", "contents": "createpde(${1:args})"} ,
		{"trigger": "csgchk\tPDE method", "contents": "csgchk(${1:args})"} ,
		{"trigger": "csgdel\tPDE method", "contents": "csgdel(${1:args})"} ,
		{"trigger": "decsg\tPDE method", "contents": "decsg(${1:args})"} ,
		{"trigger": "dst\tPDE method", "contents": "dst(${1:args})"} ,
		{"trigger": "evaluate\tPDE method", "contents": "evaluate(${1:args})"} ,
		{"trigger": "generateMesh\tPDE method", "contents": "generateMesh(${1:args})"} ,
		{"trigger": "geometryFromEdges\tPDE method", "contents": "geometryFromEdges(${1:args})"} ,
		{"trigger": "geometryFromMesh\tPDE method", "contents": "geometryFromMesh(${1:args})"} ,
		{"trigger": "hyperbolic\tPDE method", "contents": "hyperbolic(${1:args})"} ,
		{"trigger": "idst\tPDE method", "contents": "idst(${1:args})"} ,
		{"trigger": "importGeometry\tPDE method", "contents": "importGeometry(${1:args})"} ,
		{"trigger": "initmesh\tPDE method", "contents": "initmesh(${1:args})"} ,
		{"trigger": "interpolateSolution\tPDE method", "contents": "interpolateSolution(${1:args})"} ,
		{"trigger": "jigglemesh\tPDE method", "contents": "jigglemesh(${1:args})"} ,
		{"trigger": "meshToPet\tPDE method", "contents": "meshToPet(${1:args})"} ,
		{"trigger": "parabolic\tPDE method", "contents": "parabolic(${1:args})"} ,
		{"trigger": "pdeGeometryFromEdges\tPDE method", "contents": "pdeGeometryFromEdges(${1:args})"} ,
		{"trigger": "pdeadgsc\tPDE method", "contents": "pdeadgsc(${1:args})"} ,
		{"trigger": "pdeadworst\tPDE method", "contents": "pdeadworst(${1:args})"} ,
		{"trigger": "pdearcl\tPDE method", "contents": "pdearcl(${1:args})"} ,
		{"trigger": "pdecgrad\tPDE method", "contents": "pdecgrad(${1:args})"} ,
		{"trigger": "pdecirc\tPDE method", "contents": "pdecirc(${1:args})"} ,
		{"trigger": "pdecont\tPDE method", "contents": "pdecont(${1:args})"} ,
		{"trigger": "pdeeig\tPDE method", "contents": "pdeeig(${1:args})"} ,
		{"trigger": "pdeellip\tPDE method", "contents": "pdeellip(${1:args})"} ,
		{"trigger": "pdeent\tPDE method", "contents": "pdeent(${1:args})"} ,
		{"trigger": "pdegplot\tPDE method", "contents": "pdegplot(${1:args})"} ,
		{"trigger": "pdegrad\tPDE method", "contents": "pdegrad(${1:args})"} ,
		{"trigger": "pdeintrp\tPDE method", "contents": "pdeintrp(${1:args})"} ,
		{"trigger": "pdejmps\tPDE method", "contents": "pdejmps(${1:args})"} ,
		{"trigger": "pdemdlcv\tPDE method", "contents": "pdemdlcv(${1:args})"} ,
		{"trigger": "pdemesh\tPDE method", "contents": "pdemesh(${1:args})"} ,
		{"trigger": "pdenonlin\tPDE method", "contents": "pdenonlin(${1:args})"} ,
		{"trigger": "pdeplot\tPDE method", "contents": "pdeplot(${1:args})"} ,
		{"trigger": "pdeplot3D\tPDE method", "contents": "pdeplot3D(${1:args})"} ,
		{"trigger": "pdepoly\tPDE method", "contents": "pdepoly(${1:args})"} ,
		{"trigger": "pdeprtni\tPDE method", "contents": "pdeprtni(${1:args})"} ,
		{"trigger": "pderect\tPDE method", "contents": "pderect(${1:args})"} ,
		{"trigger": "pdesde\tPDE method", "contents": "pdesde(${1:args})"} ,
		{"trigger": "pdesdp\tPDE method", "contents": "pdesdp(${1:args})"} ,
		{"trigger": "pdesdt\tPDE method", "contents": "pdesdt(${1:args})"} ,
		{"trigger": "pdesmech\tPDE method", "contents": "pdesmech(${1:args})"} ,
		{"trigger": "pdesurf\tPDE method", "contents": "pdesurf(${1:args})"} ,
		{"trigger": "pdetool\tPDE method", "contents": "pdetool(${1:args})"} ,
		{"trigger": "pdetrg\tPDE method", "contents": "pdetrg(${1:args})"} ,
		{"trigger": "pdetriq\tPDE method", "contents": "pdetriq(${1:args})"} ,
		{"trigger": "poiasma\tPDE method", "contents": "poiasma(${1:args})"} ,
		{"trigger": "poicalc\tPDE method", "contents": "poicalc(${1:args})"} ,
		{"trigger": "poiindex\tPDE method", "contents": "poiindex(${1:args})"} ,
		{"trigger": "poimesh\tPDE method", "contents": "poimesh(${1:args})"} ,
		{"trigger": "poisolv\tPDE method", "contents": "poisolv(${1:args})"} ,
		{"trigger": "refinemesh\tPDE method", "contents": "refinemesh(${1:args})"} ,
		{"trigger": "sptarn\tPDE method", "contents": "sptarn(${1:args})"} ,
		{"trigger": "tri2grid\tPDE method", "contents": "tri2grid(${1:args})"} ,
		{"trigger": "wbound\tPDE method", "contents": "wbound(${1:args})"} ,
		{"trigger": "wgeom\tPDE method", "contents": "wgeom(${1:args})"} ,

	]
}