{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "stl2vrml\tSL3D method", "contents": "stl2vrml(${1:args})"} ,
		{"trigger": "vr.canvas\tSL3D method", "contents": "vr.canvas(${1:args})"} ,
		{"trigger": "vr.canvas.capture\tSL3D method", "contents": "vr.canvas.capture(${1:args})"} ,
		{"trigger": "vr.utils.stereo3d\tSL3D method", "contents": "vr.utils.stereo3d(${1:args})"} ,
		{"trigger": "vrcadcleanup\tSL3D method", "contents": "vrcadcleanup(${1:args})"} ,
		{"trigger": "vrclear\tSL3D method", "contents": "vrclear(${1:args})"} ,
		{"trigger": "vrclose\tSL3D method", "contents": "vrclose(${1:args})"} ,
		{"trigger": "vrdir2ori\tSL3D method", "contents": "vrdir2ori(${1:args})"} ,
		{"trigger": "vrdrawnow\tSL3D method", "contents": "vrdrawnow(${1:args})"} ,
		{"trigger": "vredit\tSL3D method", "contents": "vredit(${1:args})"} ,
		{"trigger": "vrfigure\tSL3D method", "contents": "vrfigure(${1:args})"} ,
		{"trigger": "vrfigure.capture\tSL3D method", "contents": "vrfigure.capture(${1:args})"} ,
		{"trigger": "vrfigure.close\tSL3D method", "contents": "vrfigure.close(${1:args})"} ,
		{"trigger": "vrfigure.get\tSL3D method", "contents": "vrfigure.get(${1:args})"} ,
		{"trigger": "vrfigure.isvalid\tSL3D method", "contents": "vrfigure.isvalid(${1:args})"} ,
		{"trigger": "vrfigure.set\tSL3D method", "contents": "vrfigure.set(${1:args})"} ,
		{"trigger": "vrgcbf\tSL3D method", "contents": "vrgcbf(${1:args})"} ,
		{"trigger": "vrgcf\tSL3D method", "contents": "vrgcf(${1:args})"} ,
		{"trigger": "vrgetpref\tSL3D method", "contents": "vrgetpref(${1:args})"} ,
		{"trigger": "vrifs2patch\tSL3D method", "contents": "vrifs2patch(${1:args})"} ,
		{"trigger": "vrinstall\tSL3D method", "contents": "vrinstall(${1:args})"} ,
		{"trigger": "vrjoystick\tSL3D method", "contents": "vrjoystick(${1:args})"} ,
		{"trigger": "vrlib\tSL3D method", "contents": "vrlib(${1:args})"} ,
		{"trigger": "vrnode\tSL3D method", "contents": "vrnode(${1:args})"} ,
		{"trigger": "vrori2dir\tSL3D method", "contents": "vrori2dir(${1:args})"} ,
		{"trigger": "vrpatch2ifs\tSL3D method", "contents": "vrpatch2ifs(${1:args})"} ,
		{"trigger": "vrphysmod\tSL3D method", "contents": "vrphysmod(${1:args})"} ,
		{"trigger": "vrplay\tSL3D method", "contents": "vrplay(${1:args})"} ,
		{"trigger": "vrrotmat2vec\tSL3D method", "contents": "vrrotmat2vec(${1:args})"} ,
		{"trigger": "vrrotvec\tSL3D method", "contents": "vrrotvec(${1:args})"} ,
		{"trigger": "vrrotvec2mat\tSL3D method", "contents": "vrrotvec2mat(${1:args})"} ,
		{"trigger": "vrsetpref\tSL3D method", "contents": "vrsetpref(${1:args})"} ,
		{"trigger": "vrspacemouse\tSL3D method", "contents": "vrspacemouse(${1:args})"} ,
		{"trigger": "vrview\tSL3D method", "contents": "vrview(${1:args})"} ,
		{"trigger": "vrwho\tSL3D method", "contents": "vrwho(${1:args})"} ,
		{"trigger": "vrwhos\tSL3D method", "contents": "vrwhos(${1:args})"} ,
		{"trigger": "vrworld\tSL3D method", "contents": "vrworld(${1:args})"} ,

	]
}