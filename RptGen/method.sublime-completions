{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "compwiz\tRptGen method", "contents": "compwiz(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Container.append\tRptGen method", "contents": "mlreportgen.dom.Container.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Container.clone\tRptGen method", "contents": "mlreportgen.dom.Container.clone(${1:args})"} ,
		{"trigger": "mlreportgen.dom.CustomElement.append\tRptGen method", "contents": "mlreportgen.dom.CustomElement.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.addHTML\tRptGen method", "contents": "mlreportgen.dom.Document.addHTML(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.addHTMLFile\tRptGen method", "contents": "mlreportgen.dom.Document.addHTMLFile(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.append\tRptGen method", "contents": "mlreportgen.dom.Document.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.close\tRptGen method", "contents": "mlreportgen.dom.Document.close(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.createAutoNumberStream\tRptGen method", "contents": "mlreportgen.dom.Document.createAutoNumberStream(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.createTemplate\tRptGen method", "contents": "mlreportgen.dom.Document.createTemplate(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.fill\tRptGen method", "contents": "mlreportgen.dom.Document.fill(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.getAutoNumberStream\tRptGen method", "contents": "mlreportgen.dom.Document.getAutoNumberStream(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.getCoreProperties\tRptGen method", "contents": "mlreportgen.dom.Document.getCoreProperties(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.getImageDirectory\tRptGen method", "contents": "mlreportgen.dom.Document.getImageDirectory(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.getImagePrefix\tRptGen method", "contents": "mlreportgen.dom.Document.getImagePrefix(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.getMainPartPath\tRptGen method", "contents": "mlreportgen.dom.Document.getMainPartPath(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.getOPCMainPart\tRptGen method", "contents": "mlreportgen.dom.Document.getOPCMainPart(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.moveToNextHole\tRptGen method", "contents": "mlreportgen.dom.Document.moveToNextHole(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.open\tRptGen method", "contents": "mlreportgen.dom.Document.open(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.package\tRptGen method", "contents": "mlreportgen.dom.Document.package(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Document.setCoreProperties\tRptGen method", "contents": "mlreportgen.dom.Document.setCoreProperties(${1:args})"} ,
		{"trigger": "mlreportgen.dom.ExternalLink.append\tRptGen method", "contents": "mlreportgen.dom.ExternalLink.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.FormalTable.appendFooterRow\tRptGen method", "contents": "mlreportgen.dom.FormalTable.appendFooterRow(${1:args})"} ,
		{"trigger": "mlreportgen.dom.FormalTable.appendHeaderRow\tRptGen method", "contents": "mlreportgen.dom.FormalTable.appendHeaderRow(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Group.append\tRptGen method", "contents": "mlreportgen.dom.Group.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.HTML.append\tRptGen method", "contents": "mlreportgen.dom.HTML.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.HTML.clone\tRptGen method", "contents": "mlreportgen.dom.HTML.clone(${1:args})"} ,
		{"trigger": "mlreportgen.dom.HTMLFile.append\tRptGen method", "contents": "mlreportgen.dom.HTMLFile.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.LinkTarget.append\tRptGen method", "contents": "mlreportgen.dom.LinkTarget.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.MessageDispatcher.dispatch\tRptGen method", "contents": "mlreportgen.dom.MessageDispatcher.dispatch(${1:args})"} ,
		{"trigger": "mlreportgen.dom.MessageDispatcher.getTheDispatcher\tRptGen method", "contents": "mlreportgen.dom.MessageDispatcher.getTheDispatcher(${1:args})"} ,
		{"trigger": "mlreportgen.dom.OrderedList.append\tRptGen method", "contents": "mlreportgen.dom.OrderedList.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Paragraph.append\tRptGen method", "contents": "mlreportgen.dom.Paragraph.append(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Paragraph.clone\tRptGen method", "contents": "mlreportgen.dom.Paragraph.clone(${1:args})"} ,
		{"trigger": "mlreportgen.dom.ProgressMessage.formatAsHTML\tRptGen method", "contents": "mlreportgen.dom.ProgressMessage.formatAsHTML(${1:args})"} ,
		{"trigger": "mlreportgen.dom.ProgressMessage.formatAsText\tRptGen method", "contents": "mlreportgen.dom.ProgressMessage.formatAsText(${1:args})"} ,
		{"trigger": "mlreportgen.dom.ProgressMessage.passesFilter\tRptGen method", "contents": "mlreportgen.dom.ProgressMessage.passesFilter(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Table.entry\tRptGen method", "contents": "mlreportgen.dom.Table.entry(${1:args})"} ,
		{"trigger": "mlreportgen.dom.Table.row\tRptGen method", "contents": "mlreportgen.dom.Table.row(${1:args})"} ,
		{"trigger": "mlreportgen.dom.TableRow.append\tRptGen method", "contents": "mlreportgen.dom.TableRow.append(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.ContentPlaceholder.add\tRptGen method", "contents": "mlreportgen.ppt.ContentPlaceholder.add(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.ContentPlaceholder.replace\tRptGen method", "contents": "mlreportgen.ppt.ContentPlaceholder.replace(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.MessageDispatcher.dispatch\tRptGen method", "contents": "mlreportgen.ppt.MessageDispatcher.dispatch(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.MessageDispatcher.getTheDispatcher\tRptGen method", "contents": "mlreportgen.ppt.MessageDispatcher.getTheDispatcher(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Paragraph.append\tRptGen method", "contents": "mlreportgen.ppt.Paragraph.append(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Picture.replace\tRptGen method", "contents": "mlreportgen.ppt.Picture.replace(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.PicturePlaceholder.replace\tRptGen method", "contents": "mlreportgen.ppt.PicturePlaceholder.replace(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Presentation.add\tRptGen method", "contents": "mlreportgen.ppt.Presentation.add(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Presentation.close\tRptGen method", "contents": "mlreportgen.ppt.Presentation.close(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Presentation.find\tRptGen method", "contents": "mlreportgen.ppt.Presentation.find(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Presentation.getLayoutNames\tRptGen method", "contents": "mlreportgen.ppt.Presentation.getLayoutNames(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Presentation.getMasterNames\tRptGen method", "contents": "mlreportgen.ppt.Presentation.getMasterNames(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Presentation.getTableStyleNames\tRptGen method", "contents": "mlreportgen.ppt.Presentation.getTableStyleNames(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Presentation.open\tRptGen method", "contents": "mlreportgen.ppt.Presentation.open(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Presentation.replace\tRptGen method", "contents": "mlreportgen.ppt.Presentation.replace(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.ProgressMessage.formatAsHTML\tRptGen method", "contents": "mlreportgen.ppt.ProgressMessage.formatAsHTML(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.ProgressMessage.formatAsText\tRptGen method", "contents": "mlreportgen.ppt.ProgressMessage.formatAsText(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.ProgressMessage.passesFilter\tRptGen method", "contents": "mlreportgen.ppt.ProgressMessage.passesFilter(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Slide.add\tRptGen method", "contents": "mlreportgen.ppt.Slide.add(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Slide.find\tRptGen method", "contents": "mlreportgen.ppt.Slide.find(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Slide.replace\tRptGen method", "contents": "mlreportgen.ppt.Slide.replace(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Table.append\tRptGen method", "contents": "mlreportgen.ppt.Table.append(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Table.entry\tRptGen method", "contents": "mlreportgen.ppt.Table.entry(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Table.replace\tRptGen method", "contents": "mlreportgen.ppt.Table.replace(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.Table.row\tRptGen method", "contents": "mlreportgen.ppt.Table.row(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.TableEntry.append\tRptGen method", "contents": "mlreportgen.ppt.TableEntry.append(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.TablePlaceholder.replace\tRptGen method", "contents": "mlreportgen.ppt.TablePlaceholder.replace(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.TableRow.append\tRptGen method", "contents": "mlreportgen.ppt.TableRow.append(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.TextBox.add\tRptGen method", "contents": "mlreportgen.ppt.TextBox.add(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.TextBox.replace\tRptGen method", "contents": "mlreportgen.ppt.TextBox.replace(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.TextBoxPlaceholder.add\tRptGen method", "contents": "mlreportgen.ppt.TextBoxPlaceholder.add(${1:args})"} ,
		{"trigger": "mlreportgen.ppt.TextBoxPlaceholder.replace\tRptGen method", "contents": "mlreportgen.ppt.TextBoxPlaceholder.replace(${1:args})"} ,
		{"trigger": "report\tRptGen method", "contents": "report(${1:args})"} ,
		{"trigger": "rptconvert\tRptGen method", "contents": "rptconvert(${1:args})"} ,
		{"trigger": "rptlist\tRptGen method", "contents": "rptlist(${1:args})"} ,
		{"trigger": "rptview\tRptGen method", "contents": "rptview(${1:args})"} ,
		{"trigger": "setedit\tRptGen method", "contents": "setedit(${1:args})"} ,
		{"trigger": "unzipTemplate\tRptGen method", "contents": "unzipTemplate(${1:args})"} ,
		{"trigger": "zipTemplate\tRptGen method", "contents": "zipTemplate(${1:args})"} ,

	]
}