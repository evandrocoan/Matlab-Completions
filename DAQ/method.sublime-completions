{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "addAnalogInputChannel\tDAQ method", "contents": "addAnalogInputChannel(${1:args})"} ,
		{"trigger": "addAnalogOutputChannel\tDAQ method", "contents": "addAnalogOutputChannel(${1:args})"} ,
		{"trigger": "addAudioInputChannel\tDAQ method", "contents": "addAudioInputChannel(${1:args})"} ,
		{"trigger": "addAudioOutputChannel\tDAQ method", "contents": "addAudioOutputChannel(${1:args})"} ,
		{"trigger": "addClockConnection\tDAQ method", "contents": "addClockConnection(${1:args})"} ,
		{"trigger": "addCounterInputChannel\tDAQ method", "contents": "addCounterInputChannel(${1:args})"} ,
		{"trigger": "addCounterOutputChannel\tDAQ method", "contents": "addCounterOutputChannel(${1:args})"} ,
		{"trigger": "addDigitalChannel\tDAQ method", "contents": "addDigitalChannel(${1:args})"} ,
		{"trigger": "addFunctionGeneratorChannel\tDAQ method", "contents": "addFunctionGeneratorChannel(${1:args})"} ,
		{"trigger": "addTriggerConnection\tDAQ method", "contents": "addTriggerConnection(${1:args})"} ,
		{"trigger": "addchannel\tDAQ method", "contents": "addchannel(${1:args})"} ,
		{"trigger": "addline\tDAQ method", "contents": "addline(${1:args})"} ,
		{"trigger": "addlistener\tDAQ method", "contents": "addlistener(${1:args})"} ,
		{"trigger": "addmuxchannel\tDAQ method", "contents": "addmuxchannel(${1:args})"} ,
		{"trigger": "analoginput\tDAQ method", "contents": "analoginput(${1:args})"} ,
		{"trigger": "analogoutput\tDAQ method", "contents": "analogoutput(${1:args})"} ,
		{"trigger": "binaryVectorToDecimal\tDAQ method", "contents": "binaryVectorToDecimal(${1:args})"} ,
		{"trigger": "binaryVectorToHex\tDAQ method", "contents": "binaryVectorToHex(${1:args})"} ,
		{"trigger": "binvec2dec\tDAQ method", "contents": "binvec2dec(${1:args})"} ,
		{"trigger": "daq.createSession\tDAQ method", "contents": "daq.createSession(${1:args})"} ,
		{"trigger": "daq.getDevices\tDAQ method", "contents": "daq.getDevices(${1:args})"} ,
		{"trigger": "daq.getVendors\tDAQ method", "contents": "daq.getVendors(${1:args})"} ,
		{"trigger": "daqhwinfo\tDAQ method", "contents": "daqhwinfo(${1:args})"} ,
		{"trigger": "dec2binvec\tDAQ method", "contents": "dec2binvec(${1:args})"} ,
		{"trigger": "decimalToBinaryVector\tDAQ method", "contents": "decimalToBinaryVector(${1:args})"} ,
		{"trigger": "digitalio\tDAQ method", "contents": "digitalio(${1:args})"} ,
		{"trigger": "flushdata\tDAQ method", "contents": "flushdata(${1:args})"} ,
		{"trigger": "getdata\tDAQ method", "contents": "getdata(${1:args})"} ,
		{"trigger": "getsample\tDAQ method", "contents": "getsample(${1:args})"} ,
		{"trigger": "hexToBinaryVector\tDAQ method", "contents": "hexToBinaryVector(${1:args})"} ,
		{"trigger": "inputSingleScan\tDAQ method", "contents": "inputSingleScan(${1:args})"} ,
		{"trigger": "isdioline\tDAQ method", "contents": "isdioline(${1:args})"} ,
		{"trigger": "islogging\tDAQ method", "contents": "islogging(${1:args})"} ,
		{"trigger": "issending\tDAQ method", "contents": "issending(${1:args})"} ,
		{"trigger": "outputSingleScan\tDAQ method", "contents": "outputSingleScan(${1:args})"} ,
		{"trigger": "peekdata\tDAQ method", "contents": "peekdata(${1:args})"} ,
		{"trigger": "putdata\tDAQ method", "contents": "putdata(${1:args})"} ,
		{"trigger": "putsample\tDAQ method", "contents": "putsample(${1:args})"} ,
		{"trigger": "putvalue\tDAQ method", "contents": "putvalue(${1:args})"} ,
		{"trigger": "queueOutputData\tDAQ method", "contents": "queueOutputData(${1:args})"} ,
		{"trigger": "removeChannel\tDAQ method", "contents": "removeChannel(${1:args})"} ,
		{"trigger": "removeConnection\tDAQ method", "contents": "removeConnection(${1:args})"} ,
		{"trigger": "resetCounters\tDAQ method", "contents": "resetCounters(${1:args})"} ,
		{"trigger": "softscope\tDAQ method", "contents": "softscope(${1:args})"} ,
		{"trigger": "start\tDAQ method", "contents": "start(${1:args})"} ,
		{"trigger": "startBackground\tDAQ method", "contents": "startBackground(${1:args})"} ,
		{"trigger": "startForeground\tDAQ method", "contents": "startForeground(${1:args})"} ,
		{"trigger": "stop\tDAQ method", "contents": "stop(${1:args})"} ,
		{"trigger": "trigger\tDAQ method", "contents": "trigger(${1:args})"} ,
		{"trigger": "wait\tDAQ method", "contents": "wait(${1:args})"} ,

	]
}