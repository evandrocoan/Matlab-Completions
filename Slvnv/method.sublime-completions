{
	"scope": "source.matlab, source.m",
	"completions":
	[
		{"trigger": "Advisor.authoring.generateConfigurationParameterDataFile\tSlvnv method", "contents": "Advisor.authoring.generateConfigurationParameterDataFile(${1:args})"} ,
		{"trigger": "ModelAdvisor.lookupCheckID\tSlvnv method", "contents": "ModelAdvisor.lookupCheckID(${1:args})"} ,
		{"trigger": "ModelAdvisor.run\tSlvnv method", "contents": "ModelAdvisor.run(${1:args})"} ,
		{"trigger": "ModelAdvisor.summaryReport\tSlvnv method", "contents": "ModelAdvisor.summaryReport(${1:args})"} ,
		{"trigger": "RptgenRMI.doorsAttribs\tSlvnv method", "contents": "RptgenRMI.doorsAttribs(${1:args})"} ,
		{"trigger": "complexityinfo\tSlvnv method", "contents": "complexityinfo(${1:args})"} ,
		{"trigger": "conditioninfo\tSlvnv method", "contents": "conditioninfo(${1:args})"} ,
		{"trigger": "cvexit\tSlvnv method", "contents": "cvexit(${1:args})"} ,
		{"trigger": "cvhtml\tSlvnv method", "contents": "cvhtml(${1:args})"} ,
		{"trigger": "cvload\tSlvnv method", "contents": "cvload(${1:args})"} ,
		{"trigger": "cvmodelview\tSlvnv method", "contents": "cvmodelview(${1:args})"} ,
		{"trigger": "cvsave\tSlvnv method", "contents": "cvsave(${1:args})"} ,
		{"trigger": "cvsim\tSlvnv method", "contents": "cvsim(${1:args})"} ,
		{"trigger": "cvtest\tSlvnv method", "contents": "cvtest(${1:args})"} ,
		{"trigger": "decisioninfo\tSlvnv method", "contents": "decisioninfo(${1:args})"} ,
		{"trigger": "getCoverageInfo\tSlvnv method", "contents": "getCoverageInfo(${1:args})"} ,
		{"trigger": "mcdcinfo\tSlvnv method", "contents": "mcdcinfo(${1:args})"} ,
		{"trigger": "overflowsaturationinfo\tSlvnv method", "contents": "overflowsaturationinfo(${1:args})"} ,
		{"trigger": "relationalboundaryinfo\tSlvnv method", "contents": "relationalboundaryinfo(${1:args})"} ,
		{"trigger": "rmi\tSlvnv method", "contents": "rmi(${1:args})"} ,
		{"trigger": "rmi.doorssync\tSlvnv method", "contents": "rmi.doorssync(${1:args})"} ,
		{"trigger": "rmi.objinfo\tSlvnv method", "contents": "rmi.objinfo(${1:args})"} ,
		{"trigger": "rmidata.default\tSlvnv method", "contents": "rmidata.default(${1:args})"} ,
		{"trigger": "rmidata.export\tSlvnv method", "contents": "rmidata.export(${1:args})"} ,
		{"trigger": "rmidata.save\tSlvnv method", "contents": "rmidata.save(${1:args})"} ,
		{"trigger": "rmidocrename\tSlvnv method", "contents": "rmidocrename(${1:args})"} ,
		{"trigger": "rmimap.map\tSlvnv method", "contents": "rmimap.map(${1:args})"} ,
		{"trigger": "rmiobjnavigate\tSlvnv method", "contents": "rmiobjnavigate(${1:args})"} ,
		{"trigger": "rmipref\tSlvnv method", "contents": "rmipref(${1:args})"} ,
		{"trigger": "rmiref.insertRefs\tSlvnv method", "contents": "rmiref.insertRefs(${1:args})"} ,
		{"trigger": "rmiref.removeRefs\tSlvnv method", "contents": "rmiref.removeRefs(${1:args})"} ,
		{"trigger": "rmitag\tSlvnv method", "contents": "rmitag(${1:args})"} ,
		{"trigger": "sigrangeinfo\tSlvnv method", "contents": "sigrangeinfo(${1:args})"} ,
		{"trigger": "sigsizeinfo\tSlvnv method", "contents": "sigsizeinfo(${1:args})"} ,
		{"trigger": "slcovmex\tSlvnv method", "contents": "slcovmex(${1:args})"} ,
		{"trigger": "slvnvextract\tSlvnv method", "contents": "slvnvextract(${1:args})"} ,
		{"trigger": "slvnvharnessopts\tSlvnv method", "contents": "slvnvharnessopts(${1:args})"} ,
		{"trigger": "slvnvlogsignals\tSlvnv method", "contents": "slvnvlogsignals(${1:args})"} ,
		{"trigger": "slvnvmakeharness\tSlvnv method", "contents": "slvnvmakeharness(${1:args})"} ,
		{"trigger": "slvnvmergedata\tSlvnv method", "contents": "slvnvmergedata(${1:args})"} ,
		{"trigger": "slvnvmergeharness\tSlvnv method", "contents": "slvnvmergeharness(${1:args})"} ,
		{"trigger": "slvnvruncgvtest\tSlvnv method", "contents": "slvnvruncgvtest(${1:args})"} ,
		{"trigger": "slvnvruntest\tSlvnv method", "contents": "slvnvruntest(${1:args})"} ,
		{"trigger": "slvnvruntestopts\tSlvnv method", "contents": "slvnvruntestopts(${1:args})"} ,
		{"trigger": "slwebview_cov\tSlvnv method", "contents": "slwebview_cov(${1:args})"} ,
		{"trigger": "slwebview_req\tSlvnv method", "contents": "slwebview_req(${1:args})"} ,
		{"trigger": "tableinfo\tSlvnv method", "contents": "tableinfo(${1:args})"} ,
		{"trigger": "viewReport\tSlvnv method", "contents": "viewReport(${1:args})"} ,

	]
}